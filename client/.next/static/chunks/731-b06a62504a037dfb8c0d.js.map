{"version":3,"file":"static/chunks/731-b06a62504a037dfb8c0d.js","mappings":"4JAEMA,EAAmB,SAAC,GAAD,IACvBC,EADuB,EACvBA,eACAC,EAFuB,EAEvBA,WACAC,EAHuB,EAGvBA,QACAC,EAJuB,EAIvBA,KAJuB,OAWvB,eAAKC,MAAO,CAAEC,OAAQ,WAAtB,WACE,cAAID,MAAO,CAAEE,WAAY,UAAzB,SAAsCJ,KACtC,eAAKK,UAAU,sBAAf,WACE,kBACEC,QAAS,WACPR,IACAC,KAHJ,oBAMKE,MAEL,kBAAQK,QAASP,EAAjB,uCAIOQ,EAAsB,SAACT,EAA4BE,EAAiBC,IAC/EO,EAAAA,EAAAA,KAAM,QAACX,EAAD,CAAkBC,eAAgBA,EAAgBE,QAASA,EAASC,KAAMA,IAAU,CACxFQ,SAAU,aACVC,iBAAiB,EACjBC,cAAc,EACdC,cAAc,EACdC,WAAW,EACXC,cAAUC,M,kqBCed,IAzC+B,SAAC,GAAiB,IAAfC,EAAe,EAAfA,IAAKC,EAAU,EAAVA,IAAU,GACnBC,EAAAA,EAAAA,UAAS,CACnCC,SAAUH,GAAO,kBACjBI,UAAWH,GAAO,qBAFbI,EADwC,cAKfH,EAAAA,EAAAA,UAAS,CACvCI,MAAO,OACPC,OAAQ,IACRJ,SAAUH,GAAO,kBACjBI,UAAWH,GAAO,mBAClBO,KAAM,KALDC,EALwC,KAK9BC,EAL8B,KAazCC,GAAuBC,EAAAA,EAAAA,cAC3B,SAACC,GAAD,OACEH,GAAY,SAACI,GACX,cAAYA,GAAZ,IAAkBN,KAAMK,EAAYL,YAExC,IAEF,OACE,QAAC,KAAD,KACEnB,UAAU,SACVH,MAAO,CAAE6B,aAAc,SACnBN,GAHN,IAIEO,qBAAsBC,iGACtBC,iBAAkBP,EAClBQ,SAAS,mCANX,UAQE,QAAC,KAAD,CACEf,UAAWC,EAAOD,UAClBD,SAAUE,EAAOF,SACjBiB,WAAY,GACZC,YAAa,GAJf,UAME,QAAC,IAAD,CAAKC,KAAM,Y,8FCpCbC,EAAO,0QAIPC,EAAW,CACfC,KAAM,OACNC,OAAQ,QAQJC,EAAkB,SAAC,GAAoC,IAAlCL,EAAkC,EAAlCA,KAAMM,EAA4B,EAA5BA,MAAOC,EAAqB,EAArBA,eACtC,OACE,uBACGA,GACC,QAAC,IAAD,CACExC,UAAU,eACVyC,SACE,eACE5C,MAAO,CAAEoB,MAAO,QAASC,OAAQ,SACjCwB,KAAU,OAALH,QAAK,IAALA,OAAA,EAAAA,EAAOI,YAAaC,EAAAA,GACzBC,IAAI,oBAGRC,OACE,aACEjD,MAAO,CAAEkD,QAAS,YAClB9C,QAAS,kBAAM+C,EAAAA,QAAAA,KAAA,wBAAsBT,QAAtB,IAAsBA,OAAtB,EAAsBA,EAAOU,KAA7B,mBAAqCV,QAArC,IAAqCA,OAArC,EAAqCA,EAAOW,MAF7D,gBAIGX,QAJH,IAIGA,OAJH,EAIGA,EAAOY,SAdd,UAkBE,eAAKnD,UAAU,MAAMkB,OAAQe,EAAMmB,QAAQ,YAAYvD,MAAOsC,EAA9D,UACE,gBAAMkB,EAAGnB,SAIb,eAAKlC,UAAU,MAAMkB,OAAQe,EAAMmB,QAAQ,YAAYvD,MAAOsC,EAA9D,UACE,gBAAMkB,EAAGnB,SAOnB,KAAeoB,EAAAA,EAAAA,MAAKhB,I,sMClDL,SAASiB,EAAeC,GACrC,IAAMC,EAAaC,GAAAA,CAAMF,GAAWG,OAAO,cACrCC,EAAQF,GAAAA,CAAM,IAAIG,MAAQF,OAAO,cAEvC,OADgBD,GAAAA,CAAME,GAAOE,KAAKL,EAAY,OAChC,EACLA,EAEAC,GAAAA,CAAMF,GAAWO,UAV5BL,IAAAA,OAAa,MACbA,IAAAA,OAAaM,KCGN,IAAMC,GAAmB,cAAH,mBAAG,EAC5BC,EAAAA,EAAAA,IAAW,aAAc,UADA,s5BAmCvBA,EAAAA,EAAAA,IAAW,aAAc,UAnCF,4CAsCdC,EAAAA,EAAAA,IAAU,IAtCI,yEA6ChBA,EAAAA,EAAAA,IAAU,IA7CM,MAuDvBC,EAAwB,SAAC,GAA4B,IAA1BC,EAA0B,EAA1BA,KAAMC,EAAoB,EAApBA,KAAMC,EAAc,EAAdA,QACrCC,GAAqBjD,EAAAA,EAAAA,cACzB,SAACkD,GACCA,EAAEC,kBACF1B,EAAO,QAAPA,KAAA,cAAmBqB,EAAKnB,OAE1B,CAACmB,IAEH,OACE,QAACJ,EAAD,CAAkBjE,UAAU,qBAA5B,WACE,eAAKC,QAASuE,EAAoBxE,UAAU,OAA5C,WACE,eAAK0C,IAAS,OAAJ2B,QAAI,IAAJA,GAAAA,EAAMM,KAAN,OAAaN,QAAb,IAAaA,OAAb,EAAaA,EAAMM,KAAOC,EAAAA,GAAkB/B,IAAI,eAC1D,gBAAM7C,UAAU,qBAAhB,iDAEF,eAAKA,UAAU,YAAf,WACE,eAAKA,UAAU,aAAf,WACE,gBAAMA,UAAU,OAAhB,gBAAwBqE,QAAxB,IAAwBA,OAAxB,EAAwBA,EAAMQ,OAC7BN,IAAW,gBAAMvE,UAAU,eAAhB,SAAgCuD,EAAee,QAE5DC,GAAU,sBAAIA,KAAe,gBAAMvE,UAAU,OAAhB,SAAwBuD,EAAee,YAM7E,GAAehB,EAAAA,EAAAA,MAAKc,I,yGChFPU,GAAsB,kBAAH,mBAAG,EAC/BZ,EAAAA,EAAAA,IAAW,SAAU,SAAU,UADH,6EAO1BA,EAAAA,EAAAA,IAAW,SAAU,SAAU,UAPL,yIAaTa,EAAAA,GAbS,+IA8B1BC,EAA2B,SAAC,GAAuB,YAArBzC,EAAqB,EAArBA,MAAO0C,EAAc,EAAdA,QACzC,OACE,QAACH,EAAD,YACE,eAAK9E,UAAU,cAAf,WACE,iCAAMuC,GAAS0C,SAAf,aAAK,EAAoBnC,SACzB,QAAC,IAAD,CAAWwB,KAAI,UAAG/B,GAAS0C,SAAZ,aAAE,EAAoBzB,UAAYa,KAAI,UAAG9B,GAAS0C,SAAZ,aAAE,EAAoBZ,WAE7E,QAAC,IAAD,KACA,eAAKrE,UAAU,YAAY0C,IAAG,UAAGH,GAAS0C,SAAZ,aAAE,EAAoBtC,gBAK1D,KAAeW,EAAAA,EAAAA,MAAK0B,I,6DClCpB,IAfoB,SAACE,GAAa,OACUrE,EAAAA,EAAAA,WAAS,GAA5CsE,EADyB,KACTC,EADS,KAYhC,OATAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAW,IAAIC,sBAAqB,gBAAEC,GAAF,sBAAaJ,EAAgBI,EAAML,mBAG7E,OADAG,EAASG,QAAQP,EAAIQ,SACd,WACLJ,EAASK,gBAEV,IAEIR,I,mHCVIS,GAAsB,gBAAH,mBAAG,CAAH,2SAWDC,EAAAA,GAXC,4OA2BDC,EAAAA,GA3BC,yBA8BTC,EAAAA,GA9BS,qB,uDCQ1BC,EAA2B,WAAM,IAC7BC,GAAUC,EAAAA,EAAAA,aAAVD,MAD6B,GAEPpF,EAAAA,EAAAA,UAAmB,IAA1CsF,EAF8B,KAErBC,EAFqB,QAGCvF,EAAAA,EAAAA,UAAmB,IAAlDwF,EAH8B,KAGjBC,EAHiB,KAIvBC,GAAaC,EAAAA,EAAAA,IACpB,OAALP,QAAK,IAALA,GAAAA,EAAOQ,QAAP,wBACcR,QADd,IACcA,OADd,EACcA,EAAOhD,KADrB,mBAC6BgD,QAD7B,IAC6BA,OAD7B,EAC6BA,EAAOQ,SAC3B,OAALR,QAAK,IAALA,GAAAA,EAAOS,UAAP,0BACYT,QADZ,IACYA,OADZ,EACYA,EAAOS,WACnB,KACJC,EAAAA,EACAC,EAAAA,IAPMC,KAsBR,OAZAxB,EAAAA,EAAAA,YAAU,WACR,GAAIkB,EAAU,SACNJ,GACI,OAARI,QAAQ,IAARA,GAAA,UAAAA,EAAU9D,eAAV,mBACIqE,MAAM,uEADV,eAEIC,KAAK,KACNC,MAAM,OAAQ,GACnBV,EAAeW,MAAMC,KAAK,CAAEC,OAAQhB,EAAQgB,SAAU,SAACC,EAAGC,GAAJ,MAAU,WAAaA,EAAI,OACjFjB,EAAWD,MAEZ,CAACI,KAGF,QAACX,EAAD,WACE,eAAK5F,UAAU,qBAAf,WACE,cACEC,QAAS,WACPqH,SAAS,CAAEC,IAAK,KAElBvH,UAAU,oBAJZ,gBAMGuG,QANH,IAMGA,OANH,EAMGA,EAAUzD,SAEb,QAAC,IAAD,CACE0E,MAAK,OAAEnB,QAAF,IAAEA,OAAF,EAAEA,EAAaoB,OAAO,CAAC,YAAa,YAAa,UAAW,iBACjEzH,UAAU,oBACV0H,iBAAiB,aACjBC,OAAQ,IAJV,WAME,aAAGC,KAAK,aAAR,UACE,0CAPJ,OASGzB,QATH,IASGA,OATH,EASGA,EAAS0B,KAAI,SAACT,EAAGC,GAChB,OACE,aAAWO,KAAI,kBAAaP,EAAI,GAAhC,UACGS,EAAAA,EAAAA,IAAgBV,IADXC,OAMN,OAALpB,QAAK,IAALA,OAAA,EAAAA,EAAOQ,WACN,aAAGmB,KAAK,aAAR,UACE,8DAGE,OAAL3B,QAAK,IAALA,OAAA,EAAAA,EAAOQ,WACN,aAAGmB,KAAK,aAAR,UACE,oEAGE,OAAL3B,QAAK,IAALA,OAAA,EAAAA,EAAOQ,WACN,aAAGmB,KAAK,WAAR,UACE,wDAGJ,aAAGA,KAAK,gBAAR,SAA8B,OAAL3B,QAAK,IAALA,GAAAA,EAAOQ,SAAU,4DAAkB,wDAC5D,aAAGxG,QAAS,kBAAM+C,EAAO,QAAPA,QAAlB,UACE,+DAQZ,GAAeM,EAAAA,EAAAA,MAAK0C,GCtFd+B,GAAoB,eAAH,mBAAG,CAAH,SACZC,EAAAA,GADY,IAEjB,sDAFiB,KAGnBC,EAAAA,EAAAA,IAAW,OAAQ,WAHA,wBAMb,sHANa,SAQX,8EARW,gCAYb,wCAZa,yBAeAlC,EAAAA,GAfA,KAgBf,gDAhBe,MAmCvB,EAX+B,SAAC,GAA0B,IAAxBmC,EAAwB,EAAxBA,QAASC,EAAe,EAAfA,SACzC,OACE,QAACJ,EAAD,YACE,eAAK7C,IAAKgD,EAASlI,UAAU,SAA7B,SACGmI,KAEH,QAAC,EAAD,S,0DC1BN,IAPgB,SAACC,GAAD,OACdC,IAAAA,IACOD,EAAK,CACRE,iBAAiB,IAElBC,MAAK,SAACC,GAAD,OAAcA,EAAS3B,KAAKA,U","sources":["webpack://_N_E/./components/ConfirmToastify.tsx","webpack://_N_E/./components/Maps/CountryMap.tsx","webpack://_N_E/./components/Maps/Pin.tsx","webpack://_N_E/./utils/dateCalculator.ts","webpack://_N_E/./components/NameSpace.tsx","webpack://_N_E/./components/Post/PostThubnail.tsx","webpack://_N_E/./hooks/useOnScreen.ts","webpack://_N_E/./components/Post/PostAsideNav/styles.tsx","webpack://_N_E/./components/Post/PostAsideNav/index.tsx","webpack://_N_E/./layout/PostLayout.tsx","webpack://_N_E/./utils/fetcher.ts"],"sourcesContent":["import { toast } from \"react-toastify\";\r\n\r\nconst ConfirmToastForm = ({\r\n  onClickConfirm,\r\n  closeToast,\r\n  message,\r\n  type,\r\n}: {\r\n  onClickConfirm: () => void;\r\n  closeToast?: any;\r\n  message: string;\r\n  type: string;\r\n}) => (\r\n  <div style={{ cursor: \"default\" }}>\r\n    <h4 style={{ marginLeft: \"0.3rem\" }}>{message}</h4>\r\n    <div className=\"confirm-btn-wrapper\">\r\n      <button\r\n        onClick={() => {\r\n          onClickConfirm();\r\n          closeToast();\r\n        }}\r\n      >\r\n        네 {type}\r\n      </button>\r\n      <button onClick={closeToast}>아니요</button>\r\n    </div>\r\n  </div>\r\n);\r\nexport const toastConfirmMessage = (onClickConfirm: () => void, message: string, type: string) => {\r\n  toast(<ConfirmToastForm onClickConfirm={onClickConfirm} message={message} type={type} />, {\r\n    position: \"top-center\",\r\n    hideProgressBar: true,\r\n    closeOnClick: false,\r\n    pauseOnHover: true,\r\n    draggable: true,\r\n    progress: undefined,\r\n  });\r\n};\r\n","import React, { FC, useCallback, useState } from \"react\";\r\nimport ReactMapGL, { Marker } from \"react-map-gl\";\r\nimport Pin from \"./Pin\";\r\n\r\ninterface IProps {\r\n  lat: number;\r\n  lng: number;\r\n}\r\n\r\nconst CountryMap: FC<IProps> = ({ lat, lng }) => {\r\n  const [marker, setMarker] = useState({\r\n    latitude: lat || 37.50529626491968,\r\n    longitude: lng || 126.98047832475031,\r\n  });\r\n  const [viewport, setViewport] = useState({\r\n    width: \"100%\",\r\n    height: 400,\r\n    latitude: lat || 37.50529626491968,\r\n    longitude: lng || 126.98047832475031,\r\n    zoom: 6,\r\n  });\r\n\r\n  const handleViewportChange = useCallback(\r\n    (newViewport) =>\r\n      setViewport((prev) => {\r\n        return { ...prev, zoom: newViewport.zoom };\r\n      }),\r\n    []\r\n  );\r\n  return (\r\n    <ReactMapGL\r\n      className=\"map-gl\"\r\n      style={{ marginBottom: \"4rem\" }}\r\n      {...viewport}\r\n      mapboxApiAccessToken={process.env.NEXT_PUBLIC_MAPBOX_API_KEY}\r\n      onViewportChange={handleViewportChange}\r\n      mapStyle=\"mapbox://sprites/mapbox/basic-v8\"\r\n    >\r\n      <Marker\r\n        longitude={marker.longitude}\r\n        latitude={marker.latitude}\r\n        offsetTop={-20}\r\n        offsetLeft={-10}\r\n      >\r\n        <Pin size={20} />\r\n      </Marker>\r\n    </ReactMapGL>\r\n  );\r\n};\r\n\r\nexport default CountryMap;\r\n","import styled from \"@emotion/styled\";\r\nimport { IStory } from \"@typings/db\";\r\nimport { Popover } from \"antd\";\r\nimport { NO_IMAGE_URL } from \"config\";\r\nimport router from \"next/router\";\r\nimport React, { FC, memo, useCallback, useState } from \"react\";\r\nimport tw from \"twin.macro\";\r\n\r\nconst ICON = `M20.2,15.7L20.2,15.7c1.1-1.6,1.8-3.6,1.8-5.7c0-5.6-4.5-10-10-10S2,4.5,2,10c0,2,0.6,3.9,1.6,5.4c0,0.1,0.1,0.2,0.2,0.3\r\n  c0,0,0.1,0.1,0.1,0.2c0.2,0.3,0.4,0.6,0.7,0.9c2.6,3.1,7.4,7.6,7.4,7.6s4.8-4.5,7.4-7.5c0.2-0.3,0.5-0.6,0.7-0.9\r\n  C20.1,15.8,20.2,15.8,20.2,15.7z`;\r\n\r\nconst pinStyle = {\r\n  fill: \"#d00\",\r\n  stroke: \"none\",\r\n};\r\ninterface IProps {\r\n  size: number;\r\n  story?: IStory;\r\n  isUserInfoPage?: boolean;\r\n}\r\n\r\nconst Pin: FC<IProps> = ({ size, story, isUserInfoPage }) => {\r\n  return (\r\n    <>\r\n      {isUserInfoPage ? (\r\n        <Popover\r\n          className=\"marker-popup\"\r\n          content={\r\n            <img\r\n              style={{ width: \"250px\", height: \"180px\" }}\r\n              src={story?.thumbnail || NO_IMAGE_URL}\r\n              alt=\"story_thumbnail\"\r\n            />\r\n          }\r\n          title={\r\n            <a\r\n              style={{ padding: \"0.5rem 0\" }}\r\n              onClick={() => router.push(`/story/${story?.code}/${story?.id}`)}\r\n            >\r\n              {story?.region}\r\n            </a>\r\n          }\r\n        >\r\n          <svg className=\"pin\" height={size} viewBox=\"0 0 24 24\" style={pinStyle}>\r\n            <path d={ICON} />\r\n          </svg>\r\n        </Popover>\r\n      ) : (\r\n        <svg className=\"pin\" height={size} viewBox=\"0 0 24 24\" style={pinStyle}>\r\n          <path d={ICON} />\r\n        </svg>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default memo(Pin);\r\n","import dayjs from \"dayjs\";\r\nimport relativeTime from \"dayjs/plugin/relativeTime\";\r\nimport \"dayjs/locale/ko\";\r\n\r\ndayjs.locale(\"ko\");\r\ndayjs.extend(relativeTime);\r\n\r\nexport default function dateCalculator(createdAt: Date) {\r\n  const createdDay = dayjs(createdAt).format(\"YYYY-MM-DD\");\r\n  const today = dayjs(new Date()).format(\"YYYY-MM-DD\");\r\n  const dayDiff = dayjs(today).diff(createdDay, \"day\");\r\n  if (dayDiff > 0) {\r\n    return createdDay;\r\n  } else {\r\n    return dayjs(createdAt).fromNow();\r\n  }\r\n}\r\n","import { IUser } from \"@typings/db\";\r\nimport React, { FC, memo, useCallback } from \"react\";\r\nimport { DEFAULT_ICON_URL, FLEX_STYLE, RGB_BLACK } from \"config\";\r\nimport styled from \"@emotion/styled\";\r\nimport tw from \"twin.macro\";\r\nimport router from \"next/router\";\r\nimport dateCalculator from \"utils/dateCalculator\";\r\n\r\nexport const NameSpaceWrapper = styled.div`\r\n  ${FLEX_STYLE(\"flex-start\", \"center\")};\r\n  ${tw`cursor-pointer`}\r\n  &:hover {\r\n    p {\r\n      ${tw`underline`}\r\n    }\r\n  }\r\n  .icon {\r\n    ${tw`relative cursor-pointer mr-3`};\r\n    img {\r\n      ${tw`w-10 h-10 rounded-full`};\r\n    }\r\n    .goto-profile-popup {\r\n      ${tw`absolute py-1 px-2 -left-5 -top-8 bg-gray-500 rounded shadow-lg hidden text-center text-xs font-bold text-white`}\r\n      white-space: nowrap;\r\n    }\r\n    &:hover {\r\n      img {\r\n        ${tw`opacity-30`};\r\n      }\r\n      .profile-popup {\r\n        ${tw`block`}\r\n      }\r\n    }\r\n  }\r\n  p {\r\n    ${tw`mt-2`}\r\n    font-size:0.83rem;\r\n  }\r\n  span {\r\n    display: inline-block;\r\n  }\r\n  .name-title {\r\n    ${tw`text-sm`}\r\n    ${FLEX_STYLE(\"flex-start\", \"center\")};\r\n    .comment-date {\r\n      margin-left: 0.6rem;\r\n      color: ${RGB_BLACK(0.3)};\r\n      font-size: 0.75rem;\r\n    }\r\n  }\r\n  .date {\r\n    padding-top: 0.2rem;\r\n    font-size: 0.7rem;\r\n    color: ${RGB_BLACK(0.3)};\r\n  }\r\n`;\r\n\r\ninterface IProps {\r\n  user: IUser;\r\n  date: Date;\r\n  comment?: string;\r\n}\r\n\r\nconst NameSpace: FC<IProps> = ({ user, date, comment }) => {\r\n  const onClickGotoProfile = useCallback(\r\n    (e) => {\r\n      e.stopPropagation();\r\n      router.push(`/me/${user.id}`);\r\n    },\r\n    [user]\r\n  );\r\n  return (\r\n    <NameSpaceWrapper className=\"name-space-wrapper\">\r\n      <div onClick={onClickGotoProfile} className=\"icon\">\r\n        <img src={user?.icon ? user?.icon : DEFAULT_ICON_URL} alt=\"user-icon\" />\r\n        <span className=\"goto-profile-popup\">프로필 보기</span>\r\n      </div>\r\n      <div className=\"user-info\">\r\n        <div className=\"name-title\">\r\n          <span className=\"name\">{user?.name}</span>\r\n          {comment && <span className=\"comment-date\">{dateCalculator(date)}</span>}\r\n        </div>\r\n        {comment ? <p>{comment}</p> : <span className=\"date\">{dateCalculator(date)}</span>}\r\n      </div>\r\n    </NameSpaceWrapper>\r\n  );\r\n};\r\n\r\nexport default memo(NameSpace);\r\n","import NameSpace from \"@components/NameSpace\";\r\nimport { IArticle, IStory } from \"@typings/db\";\r\nimport { Divider } from \"antd\";\r\nimport React, { FC, memo } from \"react\";\r\nimport styled from \"@emotion/styled\";\r\nimport { FLEX_STYLE, SM_SIZE } from \"config\";\r\nimport tw from \"twin.macro\";\r\n\r\nexport const PostThubnailWrapper = styled.section`\r\n  ${FLEX_STYLE(\"center\", \"center\", \"column\")};\r\n  ${tw`mb-16`}\r\n  .thumbnail {\r\n    ${tw`mt-8 w-3/4`}\r\n  }\r\n  .story-title {\r\n    ${FLEX_STYLE(\"center\", \"center\", \"column\")};\r\n    ${tw`my-8`}\r\n    h1 {\r\n      ${tw`mb-8 font-bold leading-10 text-center`}\r\n    }\r\n  }\r\n  @media (max-width: ${SM_SIZE}) {\r\n    .story-title {\r\n      ${tw`my-4`}\r\n      h1 {\r\n        ${tw`text-xl mb-4`}\r\n      }\r\n    }\r\n    .thumbnail {\r\n      ${tw`w-full`}\r\n    }\r\n  }\r\n`;\r\ninterface IProps {\r\n  story?: IStory;\r\n  article?: IArticle;\r\n}\r\n\r\nconst PostThubnail: FC<IProps> = ({ story, article }) => {\r\n  return (\r\n    <PostThubnailWrapper>\r\n      <div className=\"story-title\">\r\n        <h1>{(story || article)?.title}</h1>\r\n        <NameSpace date={(story || article)?.createdAt!} user={(story || article)?.user!} />\r\n      </div>\r\n      <Divider />\r\n      <img className=\"thumbnail\" src={(story || article)?.thumbnail} />\r\n    </PostThubnailWrapper>\r\n  );\r\n};\r\n\r\nexport default memo(PostThubnail);\r\n","import { useState, useEffect } from \"react\";\r\n\r\nconst useOnScreen = (ref: any) => {\r\n  const [isIntersecting, setIntersecting] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const observer = new IntersectionObserver(([entry]) => setIntersecting(entry.isIntersecting));\r\n\r\n    observer.observe(ref.current);\r\n    return () => {\r\n      observer.disconnect();\r\n    };\r\n  }, []);\r\n\r\n  return isIntersecting;\r\n};\r\n\r\nexport default useOnScreen;\r\n","import styled from \"@emotion/styled\";\r\nimport { BLUE_COLOR, GRAY_COLOR, LG_SIZE } from \"config\";\r\nimport tw from \"twin.macro\";\r\n\r\nexport const PostAsideNavWrapper = styled.aside`\r\n  ${tw`mt-4`}\r\n  .aside-story-title {\r\n    ${tw`mb-4 text-lg font-bold cursor-pointer`}\r\n  }\r\n  .aside-quick-viewer {\r\n    ${tw`p-2 rounded-xl  sticky top-20`}\r\n  }\r\n  .aside-header-list {\r\n    ${tw`block pb-4`}\r\n    h1,h2,h3 {\r\n      border-left: 2px solid ${GRAY_COLOR};\r\n    }\r\n    h1 {\r\n      ${tw`py-3 pl-4`}\r\n      font-size: 0.9rem;\r\n      font-weight: bold;\r\n    }\r\n    h2,\r\n    h3 {\r\n      ${tw`text-sm pb-2 pl-8`}\r\n    }\r\n  }\r\n  .is-current {\r\n    h1,\r\n    h2,\r\n    h3 {\r\n      border-left: 2px solid ${BLUE_COLOR};\r\n    }\r\n  }\r\n  @media (max-width: ${LG_SIZE}) {\r\n    ${tw`hidden`}\r\n  }\r\n`;\r\n","import React, { FC, memo, useState } from \"react\";\r\nimport { PostAsideNavWrapper } from \"./styles\";\r\nimport useSWR from \"swr\";\r\nimport fetcher from \"utils/fetcher\";\r\nimport router, { useRouter } from \"next/router\";\r\nimport { IArticle, IStory } from \"@typings/db\";\r\nimport { useEffect } from \"react\";\r\nimport Scrollspy from \"react-scrollspy\";\r\nimport ReactHtmlParser from \"react-html-parser\";\r\nimport { noRevalidate } from \"config\";\r\ninterface IProps {}\r\n\r\nconst PostAsideNav: FC<IProps> = () => {\r\n  const { query } = useRouter();\r\n  const [headers, setHeaders] = useState<string[]>([]);\r\n  const [hdClassList, setHdClassList] = useState<string[]>([]);\r\n  const { data: postData } = useSWR<IStory | IArticle>(\r\n    query?.storyId\r\n      ? `/story/${query?.code}/${query?.storyId}`\r\n      : query?.articleId\r\n      ? `/article/${query?.articleId}`\r\n      : null,\r\n    fetcher,\r\n    noRevalidate\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (postData) {\r\n      const headers =\r\n        postData?.content\r\n          ?.match(/<h1([^])*?.*?<\\/h1>|<h2([^])*?.*?<\\/h2>|<h3([^])*?.*?<\\/h3>/g)\r\n          ?.join(\",\")\r\n          .split(\",\") || [];\r\n      setHdClassList(Array.from({ length: headers.length }, (v, i) => \"header_\" + (i + 1)));\r\n      setHeaders(headers);\r\n    }\r\n  }, [postData]);\r\n\r\n  return (\r\n    <PostAsideNavWrapper>\r\n      <div className=\"aside-quick-viewer\">\r\n        <h3\r\n          onClick={() => {\r\n            scrollTo({ top: 0 });\r\n          }}\r\n          className=\"aside-story-title\"\r\n        >\r\n          {postData?.title}\r\n        </h3>\r\n        <Scrollspy\r\n          items={hdClassList?.concat([\"main_post\", \"user_info\", \"comment\", \"article_list\"])}\r\n          className=\"aside-header-list\"\r\n          currentClassName=\"is-current\"\r\n          offset={100}\r\n        >\r\n          <a href=\"#main_post\">\r\n            <h1>본문</h1>\r\n          </a>\r\n          {headers?.map((v, i) => {\r\n            return (\r\n              <a key={i} href={`#header_${i + 1}`}>\r\n                {ReactHtmlParser(v as string)}\r\n              </a>\r\n            );\r\n          })}\r\n\r\n          {query?.storyId && (\r\n            <a href=\"#user_info\">\r\n              <h1>연기대 정보</h1>\r\n            </a>\r\n          )}\r\n          {query?.storyId && (\r\n            <a href=\"#user_info\">\r\n              <h2>작성자 프로필</h2>\r\n            </a>\r\n          )}\r\n          {query?.storyId && (\r\n            <a href=\"#comment\">\r\n              <h2>댓글 보기</h2>\r\n            </a>\r\n          )}\r\n          <a href=\"#article_list\">{query?.storyId ? <h2>다른 연대기</h2> : <h1>다른 기사</h1>}</a>\r\n          <a onClick={() => router.back()}>\r\n            <h1>뒤로가기</h1>\r\n          </a>\r\n        </Scrollspy>\r\n      </div>\r\n    </PostAsideNavWrapper>\r\n  );\r\n};\r\n\r\nexport default memo(PostAsideNav);\r\n","import { FC, RefObject } from \"react\";\r\nimport styled from \"@emotion/styled/macro\";\r\nimport { GRID_STYLE, LG_SIZE, XLG_SIZE } from \"config\";\r\nimport tw from \"twin.macro\";\r\nimport PostAsideNav from \"@components/Post/PostAsideNav\";\r\nconst PostLayoutWrapper = styled.main`\r\n  width: ${XLG_SIZE};\r\n  ${tw`mx-auto p-8`};\r\n  ${GRID_STYLE(\"2rem\", \"4fr 1fr\")};\r\n  .layout {\r\n    .main-title {\r\n      ${tw`text-center mt-12 mb-6 text-lg font-bold`};\r\n      span {\r\n        ${tw`block text-sm mt-2`};\r\n      }\r\n    }\r\n    .main-title:first-of-type {\r\n      ${tw`mt-0 mb-6`}\r\n    }\r\n  }\r\n  @media (max-width: ${LG_SIZE}) {\r\n    ${tw`block w-full p-2`}\r\n  }\r\n`;\r\n\r\ninterface IProps {\r\n  postRef?: RefObject<HTMLDivElement> | null;\r\n}\r\n\r\nconst PostLayout: FC<IProps> = ({ postRef, children }) => {\r\n  return (\r\n    <PostLayoutWrapper>\r\n      <div ref={postRef} className=\"layout\">\r\n        {children}\r\n      </div>\r\n      <PostAsideNav />\r\n    </PostLayoutWrapper>\r\n  );\r\n};\r\n\r\nexport default PostLayout;\r\n","import axios from \"axios\";\n\nconst fetcher = (url: string) =>\n  axios\n    .get(url, {\n      withCredentials: true,\n    })\n    .then((response) => response.data.data);\n\nexport default fetcher;\n"],"names":["ConfirmToastForm","onClickConfirm","closeToast","message","type","style","cursor","marginLeft","className","onClick","toastConfirmMessage","toast","position","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","lat","lng","useState","latitude","longitude","marker","width","height","zoom","viewport","setViewport","handleViewportChange","useCallback","newViewport","prev","marginBottom","mapboxApiAccessToken","process","onViewportChange","mapStyle","offsetTop","offsetLeft","size","ICON","pinStyle","fill","stroke","Pin","story","isUserInfoPage","content","src","thumbnail","NO_IMAGE_URL","alt","title","padding","router","code","id","region","viewBox","d","memo","dateCalculator","createdAt","createdDay","dayjs","format","today","Date","diff","fromNow","relativeTime","NameSpaceWrapper","FLEX_STYLE","RGB_BLACK","NameSpace","user","date","comment","onClickGotoProfile","e","stopPropagation","icon","DEFAULT_ICON_URL","name","PostThubnailWrapper","SM_SIZE","PostThubnail","article","ref","isIntersecting","setIntersecting","useEffect","observer","IntersectionObserver","entry","observe","current","disconnect","PostAsideNavWrapper","GRAY_COLOR","BLUE_COLOR","LG_SIZE","PostAsideNav","query","useRouter","headers","setHeaders","hdClassList","setHdClassList","postData","useSWR","storyId","articleId","fetcher","noRevalidate","data","match","join","split","Array","from","length","v","i","scrollTo","top","items","concat","currentClassName","offset","href","map","ReactHtmlParser","PostLayoutWrapper","XLG_SIZE","GRID_STYLE","postRef","children","url","axios","withCredentials","then","response"],"sourceRoot":""}