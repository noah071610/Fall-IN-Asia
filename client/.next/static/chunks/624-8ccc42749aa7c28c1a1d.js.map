{"version":3,"file":"static/chunks/624-8ccc42749aa7c28c1a1d.js","mappings":"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","sources":["webpack://_N_E/./components/Cards/ArticleColumnCard/styles.tsx","webpack://_N_E/./components/Cards/ArticleColumnCard/index.tsx","webpack://_N_E/./utils/dateCalculator.ts","webpack://_N_E/./components/NameSpace.tsx","webpack://_N_E/./sections/MainPage/MainAsideLeftNav/styles.tsx","webpack://_N_E/./sections/MainPage/MainAsideLeftNav/index.tsx","webpack://_N_E/./sections/MainPage/MainAsideRightList/styles.tsx","webpack://_N_E/./sections/MainPage/MainAsideRightList/index.tsx","webpack://_N_E/./sections/MainPage/MainPoster.tsx","webpack://_N_E/./layout/MainLayout.tsx","webpack://_N_E/./sections/MainPage/MainPopularArticleSlide.tsx","webpack://_N_E/./sections/MainPage/MomentList/styles.tsx","webpack://_N_E/./components/Cards/MomentCard/styles.tsx","webpack://_N_E/./components/Cards/MomentCard/index.tsx","webpack://_N_E/./sections/MainPage/MomentList/index.tsx"],"sourcesContent":["import styled from \"@emotion/styled\";\r\nimport { ELLIPSIS_STYLE, FLEX_STYLE, GRAY_COLOR, SM_SIZE } from \"config\";\r\nimport tw from \"twin.macro\";\r\n\r\nexport const ArticleColumnCardWrapper = styled.article`\r\n  ${tw`bg-white cursor-pointer pb-8 shadow-md`}\r\n  transition:0.3s all;\r\n  &:hover {\r\n    ${tw`shadow-lg`}\r\n    .image-wrapper {\r\n      img {\r\n        transform: scale(1.15);\r\n      }\r\n    }\r\n  }\r\n  .image-wrapper {\r\n    ${tw`mb-4 overflow-hidden relative`}\r\n    img {\r\n      ${tw`w-full`}\r\n      height:180px;\r\n      transition: 0.3s all;\r\n    }\r\n    .like-comment {\r\n      ${tw`absolute bottom-2 right-2 bg-white py-1 px-2 opacity-50 rounded-xl`}\r\n      li {\r\n        ${tw`p-1 cursor-pointer`}\r\n        .count {\r\n          margin: 0 0.15rem;\r\n        }\r\n        .anticon {\r\n          font-size: 1.2rem;\r\n        }\r\n      }\r\n    }\r\n  }\r\n  .box-card-info {\r\n    padding: 0 1rem;\r\n  }\r\n  p {\r\n    ${tw`m-4 mb-0 overflow-hidden`};\r\n    ${tw`text-sm font-bold`}\r\n    ${ELLIPSIS_STYLE(1.7, 2, \"46px\")}\r\n  }\r\n  @media (max-width: ${SM_SIZE}) {\r\n    ${tw`pb-6 mb-3`}\r\n    p {\r\n      ${ELLIPSIS_STYLE(1.7, 2, \"auto\")}\r\n    }\r\n  }\r\n`;\r\n","import { CommentOutlined, HeartOutlined } from \"@ant-design/icons\";\r\nimport NameSpace from \"@components/NameSpace\";\r\nimport React, { FC, useCallback } from \"react\";\r\nimport { ArticleColumnCardWrapper } from \"./styles\";\r\nimport { IStory } from \"@typings/db\";\r\nimport router from \"next/router\";\r\n\r\ninterface IProps {\r\n  story: IStory;\r\n  isMain?: boolean;\r\n}\r\n\r\nconst ArticleColumnCard: FC<IProps> = ({ story, isMain }) => {\r\n  const onClickArticleCard = useCallback(() => {\r\n    router.push(`/story/${story?.code}/${story?.id}`);\r\n  }, []);\r\n\r\n  return (\r\n    <ArticleColumnCardWrapper\r\n      className=\"article-card-column-wrapper\"\r\n      onClick={onClickArticleCard}\r\n      style={isMain ? { boxShadow: \"none\", borderRadius: \"15px\" } : {}}\r\n    >\r\n      <div\r\n        style={isMain ? { borderTopLeftRadius: \"15px\", borderTopRightRadius: \"15px\" } : {}}\r\n        className=\"image-wrapper\"\r\n      >\r\n        <img\r\n          style={isMain ? { borderTopLeftRadius: \"15px\", borderTopRightRadius: \"15px\" } : {}}\r\n          src={story?.thumbnail}\r\n          alt=\"story-image\"\r\n        />\r\n        <ul className=\"like-comment\">\r\n          <li>\r\n            <CommentOutlined />\r\n            <span className=\"count\">{story?.comments?.length}</span>\r\n          </li>\r\n          <li>\r\n            <HeartOutlined />\r\n            <span className=\"count\">{story?.likedUser?.length}</span>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n      <div className=\"box-card-info\">\r\n        <NameSpace date={story?.createdAt} user={story?.user} />\r\n      </div>\r\n      <p>{story?.title}</p>\r\n    </ArticleColumnCardWrapper>\r\n  );\r\n};\r\n\r\nexport default ArticleColumnCard;\r\n","import dayjs from \"dayjs\";\r\nimport relativeTime from \"dayjs/plugin/relativeTime\";\r\nimport \"dayjs/locale/ko\";\r\n\r\ndayjs.locale(\"ko\");\r\ndayjs.extend(relativeTime);\r\n\r\nexport default function dateCalculator(createdAt: Date) {\r\n  const createdDay = dayjs(createdAt).format(\"YYYY-MM-DD\");\r\n  const today = dayjs(new Date()).format(\"YYYY-MM-DD\");\r\n  const dayDiff = dayjs(today).diff(createdDay, \"day\");\r\n  if (dayDiff > 0) {\r\n    return createdDay;\r\n  } else {\r\n    return dayjs(createdAt).fromNow();\r\n  }\r\n}\r\n","import { IUser } from \"@typings/db\";\r\nimport React, { FC, memo, useCallback } from \"react\";\r\nimport { DEFAULT_ICON_URL, FLEX_STYLE, RGB_BLACK } from \"config\";\r\nimport styled from \"@emotion/styled\";\r\nimport tw from \"twin.macro\";\r\nimport router from \"next/router\";\r\nimport dateCalculator from \"utils/dateCalculator\";\r\n\r\nexport const NameSpaceWrapper = styled.div`\r\n  ${FLEX_STYLE(\"flex-start\", \"center\")};\r\n  ${tw`cursor-pointer`}\r\n  &:hover {\r\n    p {\r\n      ${tw`underline`}\r\n    }\r\n  }\r\n  .icon {\r\n    ${tw`relative cursor-pointer mr-3`};\r\n    img {\r\n      ${tw`w-10 h-10 rounded-full`};\r\n    }\r\n    .goto-profile-popup {\r\n      ${tw`absolute py-1 px-2 -left-5 -top-8 bg-gray-500 rounded shadow-lg hidden text-center text-xs font-bold text-white`}\r\n      white-space: nowrap;\r\n    }\r\n    &:hover {\r\n      img {\r\n        ${tw`opacity-30`};\r\n      }\r\n      .profile-popup {\r\n        ${tw`block`}\r\n      }\r\n    }\r\n  }\r\n  p {\r\n    ${tw`mt-2`}\r\n    font-size:0.83rem;\r\n  }\r\n  span {\r\n    display: inline-block;\r\n  }\r\n  .name-title {\r\n    ${tw`text-sm`}\r\n    ${FLEX_STYLE(\"flex-start\", \"center\")};\r\n    .comment-date {\r\n      margin-left: 0.6rem;\r\n      color: ${RGB_BLACK(0.3)};\r\n      font-size: 0.75rem;\r\n    }\r\n  }\r\n  .date {\r\n    padding-top: 0.2rem;\r\n    font-size: 0.7rem;\r\n    color: ${RGB_BLACK(0.3)};\r\n  }\r\n`;\r\n\r\ninterface IProps {\r\n  user: IUser;\r\n  date: Date;\r\n  comment?: string;\r\n}\r\n\r\nconst NameSpace: FC<IProps> = ({ user, date, comment }) => {\r\n  const onClickGotoProfile = useCallback(\r\n    (e) => {\r\n      e.stopPropagation();\r\n      router.push(`/me/${user.id}`);\r\n    },\r\n    [user]\r\n  );\r\n  return (\r\n    <NameSpaceWrapper className=\"name-space-wrapper\">\r\n      <div onClick={onClickGotoProfile} className=\"icon\">\r\n        <img src={user?.icon ? user?.icon : DEFAULT_ICON_URL} alt=\"user-icon\" />\r\n        <span className=\"goto-profile-popup\">프로필 보기</span>\r\n      </div>\r\n      <div className=\"user-info\">\r\n        <div className=\"name-title\">\r\n          <span className=\"name\">{user?.name}</span>\r\n          {comment && <span className=\"comment-date\">{dateCalculator(date)}</span>}\r\n        </div>\r\n        {comment ? <p>{comment}</p> : <span className=\"date\">{dateCalculator(date)}</span>}\r\n      </div>\r\n    </NameSpaceWrapper>\r\n  );\r\n};\r\n\r\nexport default memo(NameSpace);\r\n","import styled from \"@emotion/styled\";\r\nimport { FLEX_STYLE, GRAY_COLOR } from \"config\";\r\nimport tw from \"twin.macro\";\r\n\r\nexport const MainAsideLeftNavWrapper = styled.nav`\r\n  @media (max-width: 900px) {\r\n    ${tw`hidden`}\r\n  }\r\n  ${tw`bg-white rounded-2xl h-full p-4 sticky`}\r\n  top:5rem;\r\n  width: 18%;\r\n  .country {\r\n    .country-img {\r\n      ${tw`cursor-pointer inline-block w-full rounded-2xl`}\r\n      img {\r\n        ${tw`w-full h-28 shadow-md rounded-2xl`}\r\n      }\r\n    }\r\n    .country-desc {\r\n      margin: 1rem 0;\r\n      a {\r\n        ${tw`font-bold`};\r\n        font-size: 1.4rem;\r\n      }\r\n      div {\r\n        ${tw`font-bold`};\r\n        margin-top: 0.5rem;\r\n        span {\r\n          display: block;\r\n          margin-bottom: 0.3rem;\r\n        }\r\n      }\r\n    }\r\n  }\r\n  ul {\r\n    ${tw`block text-base pt-4 `}\r\n    li {\r\n      ${tw`py-3 px-2 block cursor-pointer rounded-2xl mb-1 `}\r\n      ${FLEX_STYLE(\"flex-start\", \"center\")};\r\n      .icon {\r\n        ${tw`w-5 h-5 mr-4`}\r\n      }\r\n      span {\r\n        ${tw`text-sm`}\r\n      }\r\n      &:hover {\r\n        background: ${GRAY_COLOR};\r\n      }\r\n    }\r\n  }\r\n  .menu-active {\r\n    background: ${GRAY_COLOR};\r\n  }\r\n`;\r\n","import React, { FC, useCallback } from \"react\";\r\nimport { MainAsideLeftNavWrapper } from \"./styles\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faExclamationCircle,\r\n  faGlobe,\r\n  faHandshake,\r\n  faPlaneDeparture,\r\n  faUsers,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport Link from \"next/link\";\r\nimport router, { useRouter } from \"next/router\";\r\nimport useSWR from \"swr\";\r\nimport fetcher from \"utils/fetcher\";\r\nimport { ICountry } from \"@typings/db\";\r\nimport { noRevalidate, WORLD_IMAGE } from \"config\";\r\n\r\ninterface IProps {}\r\n\r\nconst MainAsideLeftNav: FC<IProps> = () => {\r\n  const { query } = useRouter();\r\n  const { data: country } = useSWR<ICountry>(\r\n    query?.code ? `/country/${query?.code}` : null,\r\n    fetcher,\r\n    noRevalidate\r\n  );\r\n\r\n  const onClickCountry = useCallback(() => {\r\n    if (query?.code) {\r\n      router.push(`/country/${query?.code}`);\r\n    } else {\r\n      router.push(`/`);\r\n    }\r\n  }, [query]);\r\n  return (\r\n    <MainAsideLeftNavWrapper>\r\n      <div className=\"country\">\r\n        <div onClick={onClickCountry} className=\"country-img\">\r\n          <img src={country?.image_src || WORLD_IMAGE} />\r\n        </div>\r\n        <div className=\"country-desc\">\r\n          <a onClick={onClickCountry}>{country?.name || \"아시아 전체\"}</a>\r\n          {country && (\r\n            <div>\r\n              <span>포스팅수 : {country?.moments?.length + country?.stories?.length}</span>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <ul>\r\n        <Link href={country ? `/country/${country.code}?type=community` : \"/?type=community\"}>\r\n          <a>\r\n            <li className={query?.type === \"community\" ? \"menu-active\" : \"\"}>\r\n              <FontAwesomeIcon className=\"icon\" icon={faHandshake} />\r\n              <span>한인 커뮤니티</span>\r\n            </li>\r\n          </a>\r\n        </Link>\r\n        <Link href={country ? `/country/${country.code}?type=trip` : \"/?type=trip\"}>\r\n          <a>\r\n            <li className={query?.type === \"trip\" ? \"menu-active\" : \"\"}>\r\n              <FontAwesomeIcon className=\"icon\" icon={faPlaneDeparture} />\r\n              <span>여행정보 공유</span>\r\n            </li>\r\n          </a>\r\n        </Link>\r\n        <Link href={country ? `/country/${country.code}?type=scam+alert` : \"/?type=scam+alert\"}>\r\n          <a>\r\n            <li className={query?.type === \"scam alert\" ? \"menu-active\" : \"\"}>\r\n              <FontAwesomeIcon className=\"icon\" icon={faExclamationCircle} />\r\n              <span>사기 경보</span>\r\n            </li>\r\n          </a>\r\n        </Link>\r\n        <Link href={country ? `/country/${country.code}?type=accompany` : \"/?type=accompany\"}>\r\n          <a>\r\n            <li className={query?.type === \"accompany\" ? \"menu-active\" : \"\"}>\r\n              <FontAwesomeIcon className=\"icon\" icon={faUsers} />\r\n              <span>동행자 모집</span>\r\n            </li>\r\n          </a>\r\n        </Link>\r\n        {country ? (\r\n          <Link href=\"/\">\r\n            <a>\r\n              <li>\r\n                <FontAwesomeIcon className=\"icon\" icon={faGlobe} />\r\n                <span>아시아 전체</span>\r\n              </li>\r\n            </a>\r\n          </Link>\r\n        ) : (\r\n          <Link href=\"/country/select\">\r\n            <a>\r\n              <li>\r\n                <FontAwesomeIcon className=\"icon\" icon={faGlobe} />\r\n                <span>국가선택</span>\r\n              </li>\r\n            </a>\r\n          </Link>\r\n        )}\r\n      </ul>\r\n    </MainAsideLeftNavWrapper>\r\n  );\r\n};\r\n\r\nexport default MainAsideLeftNav;\r\n","import styled from \"@emotion/styled\";\r\nimport { ELLIPSIS_STYLE } from \"config\";\r\nimport tw from \"twin.macro\";\r\n\r\nexport const MainAsideRightListWrapper = styled.aside`\r\n  @media (max-width: 900px) {\r\n    ${tw`hidden`}\r\n  }\r\n  ${tw`bg-white rounded-2xl h-full py-6 px-4 sticky`}\r\n  top:5rem;\r\n  width: 22%;\r\n  .aside-title {\r\n    ${tw`text-sm font-bold`};\r\n    ${tw`mt-12 mb-4`}\r\n  }\r\n  .aside-title:first-of-type {\r\n    ${tw`mt-0 mb-4`}\r\n  }\r\n  li {\r\n    ${tw`w-full cursor-pointer`}\r\n    .image-wrapper {\r\n      ${tw`flex overflow-hidden rounded-md mb-4`}\r\n      img {\r\n        transition: 0.3s all;\r\n        ${tw`w-16 h-16 rounded-md mr-4`}\r\n      }\r\n    }\r\n    h4 {\r\n      margin-bottom: 0.5rem;\r\n    }\r\n    p {\r\n      ${ELLIPSIS_STYLE(1.3, 2, \"40px\")};\r\n      ${tw`font-bold`};\r\n      font-size: 0.94rem;\r\n    }\r\n  }\r\n`;\r\n","import ArticleSmallCard from \"@components/Cards/ArticleSmallCard\";\r\nimport React, { FC, useState } from \"react\";\r\nimport { MainAsideRightListWrapper } from \"./styles\";\r\nimport useSWR from \"swr\";\r\nimport fetcher from \"utils/fetcher\";\r\nimport { IMoment, IStory } from \"@typings/db\";\r\n\r\ninterface IProps {}\r\n\r\nconst MainAsideRightList: FC<IProps> = () => {\r\n  const { data: latestMoments } = useSWR<IMoment[]>(\"/moment/latest\", fetcher);\r\n  const { data: latestStories } = useSWR<IStory[]>(\"/story/latest\", fetcher);\r\n  return (\r\n    <MainAsideRightListWrapper>\r\n      <h2 className=\"aside-title\">최근 연대기</h2>\r\n      {latestStories?.map((v, i) => (\r\n        <ArticleSmallCard story={v} key={i} />\r\n      ))}\r\n      <h2 className=\"aside-title\">최근 모멘트</h2>\r\n      {latestMoments?.map((v, i) => (\r\n        <ArticleSmallCard moment={v} key={i} />\r\n      ))}\r\n    </MainAsideRightListWrapper>\r\n  );\r\n};\r\n\r\nexport default MainAsideRightList;\r\n","import PosterCard from \"@components/Cards/PosterCard\";\r\nimport React, { FC } from \"react\";\r\nimport Slider from \"react-slick\";\r\nimport styled from \"@emotion/styled\";\r\nimport { SM_SIZE, XLG_SIZE } from \"config\";\r\nimport tw from \"twin.macro\";\r\nimport { NextArrow, PrevArrow } from \"@components/SliderArrow\";\r\n\r\nconst MainPosterWrapper = styled.section`\r\n  width: ${XLG_SIZE};\r\n  ${tw`mx-auto rounded-2xl`}\r\n  padding-top:6.5rem;\r\n  .slick-arrow {\r\n    display: none !important;\r\n  }\r\n  @media (max-width: 900px) {\r\n    ${tw`w-full px-4`}\r\n  }\r\n  @media (max-width: ${SM_SIZE}) {\r\n    ${tw`pt-16 px-0 m-0`}\r\n  }\r\n  .slick-active {\r\n    z-index: 999;\r\n  }\r\n`;\r\n\r\nconst settings = {\r\n  dots: false,\r\n  fade: true,\r\n  infinite: true,\r\n  speed: 300,\r\n  autoplay: true,\r\n  autoplaySpeed: 5000,\r\n  slidesToShow: 1,\r\n  slidesToScroll: 1,\r\n  nextArrow: <NextArrow />,\r\n  prevArrow: <PrevArrow />,\r\n};\r\n\r\ninterface IProps {}\r\n\r\nconst MainPoster: FC<IProps> = () => {\r\n  return (\r\n    <MainPosterWrapper>\r\n      <Slider {...settings}>\r\n        <PosterCard\r\n          image=\"https://user-images.githubusercontent.com/74864925/129447142-48c58d87-d5e8-46ba-9052-8d1b8e1c383e.png\"\r\n          isMain={true}\r\n          path=\"/\"\r\n          title=\"Share your infomation\"\r\n          desc=\"모멘트 : 여행이라는 망망대해에서 길을 잃었나요? 물어봐요! 돈드는거 아니잖아요~\"\r\n        />\r\n        <PosterCard\r\n          image=\"https://user-images.githubusercontent.com/74864925/129452165-e9675084-15d1-4891-a9cb-bae6bf9eaf33.png\"\r\n          isMain={true}\r\n          link=\"https://www.0404.go.kr/dev/newest_list.mofa\"\r\n          title=\"I trust We can get over covid-19\"\r\n          desc=\"해외안전여행 : 외교부에서 코로나19 입국제한 여부를 확인하세요.\"\r\n        />\r\n        <PosterCard\r\n          image=\"https://user-images.githubusercontent.com/74864925/129446624-f357679e-af98-41f7-a9ac-4f3dc434a551.png\"\r\n          isMain={true}\r\n          path=\"/story\"\r\n          title=\"Leave and Share your memory\"\r\n          desc=\"연대기 : 당신의 여정에는 어떤 일이 있었나요?\"\r\n        />\r\n      </Slider>\r\n    </MainPosterWrapper>\r\n  );\r\n};\r\n\r\nexport default MainPoster;\r\n","import React, { FC } from \"react\";\r\nimport styled from \"@emotion/styled\";\r\nimport { SM_SIZE, XLG_SIZE } from \"config\";\r\nimport tw from \"twin.macro\";\r\nimport MainAsideLeftNav from \"@sections/MainPage/MainAsideLeftNav\";\r\nimport MainAsideRightList from \"@sections/MainPage/MainAsideRightList\";\r\nimport MainPoster from \"@sections/MainPage/MainPoster\";\r\n\r\nconst MainLayoutWrapper = styled.main`\r\n  ${tw`bg-gray-100`}\r\n  .layout {\r\n    width: ${XLG_SIZE};\r\n    ${tw`mx-auto pt-8 pb-32 flex`}\r\n    .layout-middle {\r\n      ${tw`w-3/5 px-8`}\r\n      .main-title {\r\n        ${tw`text-base font-bold mt-8 mb-4`}\r\n      }\r\n      .main-title:first-of-type {\r\n        ${tw`mt-0 mb-4`}\r\n      }\r\n    }\r\n  }\r\n  @media (max-width: 900px) {\r\n    .layout {\r\n      ${tw`w-full px-4`}\r\n      .layout-middle {\r\n        ${tw`w-full px-0`}\r\n        .main-title {\r\n          ${tw`text-sm mt-7 mb-3`}\r\n        }\r\n      }\r\n    }\r\n  }\r\n  @media (max-width: ${SM_SIZE}) {\r\n    .layout {\r\n      ${tw`px-2`}\r\n    }\r\n  }\r\n`;\r\n\r\ninterface MainLayoutProps {}\r\n\r\nconst MainLayout: FC<MainLayoutProps> = ({ children }) => {\r\n  return (\r\n    <MainLayoutWrapper>\r\n      <MainPoster />\r\n      <div className=\"layout\">\r\n        <MainAsideLeftNav />\r\n        <div className=\"layout-middle\">{children}</div>\r\n        <MainAsideRightList />\r\n      </div>\r\n    </MainLayoutWrapper>\r\n  );\r\n};\r\n\r\nexport default MainLayout;\r\n","import React, { FC, memo, useCallback } from \"react\";\r\nimport { PlusCircleOutlined } from \"@ant-design/icons\";\r\nimport router from \"next/router\";\r\nimport useSWR from \"swr\";\r\nimport fetcher from \"utils/fetcher\";\r\nimport { noRevalidate, SM_SIZE } from \"config\";\r\nimport { ICountry, IStory } from \"@typings/db\";\r\nimport ArticleColumnCard from \"@components/Cards/ArticleColumnCard\";\r\nimport styled from \"@emotion/styled\";\r\nimport { FLEX_STYLE, RGB_BLACK } from \"config\";\r\nimport tw from \"twin.macro\";\r\nimport Slider from \"react-slick\";\r\nimport { NextArrow, PrevArrow } from \"@components/SliderArrow\";\r\n\r\nconst popularSlideSettings = {\r\n  dots: false,\r\n  infinite: false,\r\n  slidesToShow: 2,\r\n  slidesToScroll: 1,\r\n  autoplay: false,\r\n  speed: 300,\r\n  nextArrow: <NextArrow />,\r\n  prevArrow: <PrevArrow />,\r\n  responsive: [\r\n    {\r\n      breakpoint: 576,\r\n      settings: {\r\n        slidesToShow: 1,\r\n      },\r\n    },\r\n  ],\r\n};\r\n\r\nconst MainPopularArticleSlideWrapper = styled(Slider)`\r\n  .slick-slide {\r\n    padding: 0.5rem;\r\n  }\r\n  .more-card {\r\n    ${tw`cursor-pointer relative  rounded-2xl`}\r\n    height:330px;\r\n    .more-icon {\r\n      ${tw`absolute top-1/2 left-1/2 text-gray-300`}\r\n      transform:translate(-50%,-50%);\r\n      ${FLEX_STYLE(\"center\", \"center\", \"column\")};\r\n      .anticon {\r\n        font-size: 3rem;\r\n        margin-bottom: 1rem;\r\n      }\r\n    }\r\n  }\r\n  @media (max-width: ${SM_SIZE}) {\r\n    .slick-slide {\r\n      ${tw`p-0`}\r\n    }\r\n  }\r\n`;\r\n\r\nconst NoStoryWrapper = styled.div``;\r\n\r\ninterface IProps {\r\n  country?: ICountry;\r\n}\r\n\r\nconst MainPopularArticleSlide: FC<IProps> = ({ country }) => {\r\n  const { data: popularArticles } = useSWR<IStory[]>(\r\n    `/story/popular?code=${country?.code || \"\"}`,\r\n    fetcher,\r\n    noRevalidate\r\n  );\r\n  const onClickMoreCard = useCallback(() => {\r\n    router.push(`/story`);\r\n  }, [country]);\r\n  return (\r\n    <>\r\n      {popularArticles && popularArticles.length > 0 ? (\r\n        <MainPopularArticleSlideWrapper {...popularSlideSettings}>\r\n          {popularArticles?.map((v, i) => {\r\n            return <ArticleColumnCard key={i} isMain={true} story={v} />;\r\n          })}\r\n          <div onClick={onClickMoreCard} className=\"more-card\">\r\n            <div className=\"more-icon\">\r\n              <PlusCircleOutlined />\r\n              <span>더보기</span>\r\n            </div>\r\n          </div>\r\n        </MainPopularArticleSlideWrapper>\r\n      ) : (\r\n        <NoStoryWrapper>아직 {country?.name}관련 연대기가 없어요.😰</NoStoryWrapper>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default memo(MainPopularArticleSlide);\r\n","import styled from \"@emotion/styled\";\r\nimport { BLUE_COLOR, FLEX_STYLE } from \"config\";\r\nimport tw from \"twin.macro\";\r\n\r\nexport const MomentListWrapper = styled.section`\r\n  .content-wrapper {\r\n    ${tw`mt-4 pb-4 rounded-2xl bg-white`}\r\n    .content-filter {\r\n      padding: 1rem;\r\n      ${FLEX_STYLE(\"flex-end\", \"center\")}\r\n      button {\r\n        ${tw`px-0 pb-1 mx-2`}\r\n        &:hover {\r\n          font-weight: bold;\r\n          color: ${BLUE_COLOR};\r\n        }\r\n      }\r\n    }\r\n    .no-post {\r\n      ${FLEX_STYLE(\"center\", \"center\", \"column\")}\r\n      ${tw`py-8`}\r\n      img {\r\n        ${tw`w-1/5 opacity-30`}\r\n      }\r\n    }\r\n  }\r\n  .article-card-wrapper:last-of-type {\r\n    background: red;\r\n  }\r\n`;\r\n","import styled from \"@emotion/styled\";\r\nimport { BLUE_COLOR, BORDER_THIN, FLEX_STYLE, GRAY_COLOR, RED_COLOR, SM_SIZE } from \"config\";\r\nimport tw from \"twin.macro\";\r\n\r\nexport const MomentCardWrapper = styled.article`\r\n  ${tw`py-8 mx-6`}\r\n  ${BORDER_THIN(\"border-bottom\")};\r\n  .article-header {\r\n    a {\r\n      transition: none;\r\n      &:hover {\r\n        ${tw`font-bold`}\r\n        color: ${BLUE_COLOR};\r\n      }\r\n    }\r\n  }\r\n  .article-top {\r\n    ${FLEX_STYLE(\"space-between\", \"flex-start\")};\r\n    ${tw`pb-4 pl-1`}\r\n  }\r\n  .article {\r\n    .content {\r\n      ${tw`cursor-pointer font-bold pl-1 pb-4 leading-7 hover:underline`}\r\n    }\r\n    .moment-image-wrapper {\r\n      ${tw`cursor-pointer mb-4 flex`}\r\n      .moment-image {\r\n        ${tw`rounded-2xl w-36 h-36 mr-2`}\r\n      }\r\n      .moment-more-image {\r\n        ${tw`w-36 h-36 bg-gray-300 rounded-2xl`}\r\n        ${FLEX_STYLE(\"center\", \"center\")};\r\n        span {\r\n          ${tw`text-white font-bold text-3xl`}\r\n        }\r\n      }\r\n    }\r\n  }\r\n  .article-footer {\r\n    li {\r\n      ${tw`cursor-pointer p-1`}\r\n      .count {\r\n        ${tw`mx-1`}\r\n      }\r\n      .anticon {\r\n        font-size: 1rem;\r\n      }\r\n      &:hover {\r\n        background: ${GRAY_COLOR};\r\n        border-radius: 5px;\r\n      }\r\n    }\r\n  }\r\n  .liked {\r\n    .anticon {\r\n      color: ${RED_COLOR};\r\n    }\r\n  }\r\n  @media (max-width: ${SM_SIZE}) {\r\n    ${tw`pt-4 pb-6 mx-4`}\r\n    .article {\r\n      .moment-image-wrapper {\r\n        .moment-image {\r\n          ${tw`rounded-xl w-24 h-24 mr-2`}\r\n        }\r\n        .moment-more-image {\r\n          ${tw`w-24 h-24 rounded-xl`}\r\n          span {\r\n            ${tw`text-2xl`}\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import { CommentOutlined, HeartFilled, HeartOutlined, PlusCircleOutlined } from \"@ant-design/icons\";\r\nimport NameSpace from \"@components/NameSpace\";\r\nimport { IMoment } from \"@typings/db\";\r\nimport React, { FC, memo, useCallback, useEffect, useState } from \"react\";\r\nimport { MomentCardWrapper } from \"./styles\";\r\nimport { toastErrorMessage, toastSuccessMessage } from \"config\";\r\nimport router from \"next/router\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { RootState } from \"slices\";\r\nimport html2textConverter from \"utils/html2textConverter\";\r\nimport axios from \"axios\";\r\nimport { getUserInfoAction } from \"actions/user\";\r\n\r\ninterface IProps {\r\n  moment: IMoment;\r\n  isLast?: boolean;\r\n  revalidateMoments: () => void;\r\n}\r\n\r\nconst MomentCard: FC<IProps> = ({ revalidateMoments, moment, isLast }) => {\r\n  const dispatch = useDispatch();\r\n  const { user } = useSelector((state: RootState) => state.user);\r\n  const [userLike, setUserLike] = useState(0);\r\n  const [liked, setLiked] = useState(false);\r\n  useEffect(() => {\r\n    if (user && moment) {\r\n      if (user.likeMoment?.find((v: any) => v.momentId === moment?.id)) {\r\n        setLiked(true);\r\n      } else {\r\n        setLiked(false);\r\n      }\r\n    }\r\n  }, [user, moment]);\r\n\r\n  const onClickLikeOrDisLike = useCallback(\r\n    (value: string) => {\r\n      if (!user) {\r\n        toastErrorMessage(\"로그인이 필요합니다.\");\r\n        return;\r\n      }\r\n      axios\r\n        .patch(`/moment/${value}/${moment?.id}`)\r\n        .then(() => {\r\n          if (value === \"like\") {\r\n            toastSuccessMessage(\"좋아요!💓\");\r\n            setUserLike((prev) => prev + 1);\r\n          } else {\r\n            toastSuccessMessage(\"좋아요 취소💔\");\r\n            setUserLike((prev) => prev - 1);\r\n          }\r\n          dispatch(getUserInfoAction());\r\n        })\r\n        .catch((error) => {\r\n          toastErrorMessage(error);\r\n          throw error;\r\n        });\r\n    },\r\n    [user, moment]\r\n  );\r\n\r\n  const onClickCountryTag = useCallback(() => {\r\n    router.push(`/country/${moment.code}`);\r\n  }, []);\r\n  const onClickTypeTag = useCallback(() => {\r\n    router.push(`/country/${moment.code}/?type=${moment.type}`);\r\n  }, []);\r\n  const onClickGotoPost = useCallback(() => {\r\n    router.push(`/country/${moment.code}/${moment.id}`);\r\n  }, []);\r\n\r\n  return (\r\n    <MomentCardWrapper style={isLast ? { borderBottom: \"none\" } : {}}>\r\n      <div className=\"article-top\">\r\n        <NameSpace user={moment?.user} date={moment?.createdAt} />\r\n        <div className=\"article-header\">\r\n          <a onClick={onClickCountryTag}>{moment?.country?.name}</a>/\r\n          <a onClick={onClickTypeTag}>{moment?.type}</a>\r\n        </div>\r\n      </div>\r\n      <div className=\"article\">\r\n        {moment?.images?.length > 0 && (\r\n          <div\r\n            onClick={() => router.push(`/country/${moment?.code}/${moment?.id}`)}\r\n            className=\"moment-image-wrapper\"\r\n          >\r\n            {moment?.images?.slice(0, 2).map((v, i) => {\r\n              return <img className=\"moment-image\" key={i} src={v.image_src} />;\r\n            })}\r\n            {moment?.images?.length > 2 && (\r\n              <div className=\"moment-more-image\">\r\n                <PlusCircleOutlined />\r\n              </div>\r\n            )}\r\n          </div>\r\n        )}\r\n        <div\r\n          onClick={() => router.push(`/country/${moment?.code}/${moment?.id}`)}\r\n          className=\"content\"\r\n        >\r\n          {html2textConverter(moment?.content as string)}\r\n        </div>\r\n        <ul className=\"article-footer\">\r\n          <li onClick={onClickGotoPost}>\r\n            <CommentOutlined />\r\n            <span className=\"count\">{moment?.comments?.length}</span>\r\n            <span>댓글</span>\r\n          </li>\r\n          <li\r\n            onClick={\r\n              liked ? () => onClickLikeOrDisLike(\"dislike\") : () => onClickLikeOrDisLike(\"like\")\r\n            }\r\n            className={liked ? \"liked\" : \"\"}\r\n          >\r\n            {liked ? <HeartFilled /> : <HeartOutlined />}\r\n            <span className=\"count\">{moment?.likedUser?.length + userLike}</span>\r\n            <span>좋아요</span>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    </MomentCardWrapper>\r\n  );\r\n};\r\n\r\nexport default memo(MomentCard);\r\n","import React, { FC, memo, useEffect, useState } from \"react\";\r\nimport { useRef } from \"react\";\r\nimport { IMoment } from \"@typings/db\";\r\nimport { MomentListWrapper } from \"./styles\";\r\nimport useOnScreen from \"@hooks/useOnScreen\";\r\nimport MomentCard from \"@components/Cards/MomentCard\";\r\nimport { BLUE_COLOR, NO_POST_URL } from \"config\";\r\n\r\ninterface IProps {\r\n  moments: IMoment[][] | undefined;\r\n  setSize: (f: (size: number) => number) => Promise<IMoment[][] | undefined>;\r\n  setFilter: (filter: string) => void;\r\n  filter: string;\r\n  revalidateMoments: () => void;\r\n}\r\n\r\nconst MomentList: FC<IProps> = ({ revalidateMoments, filter, moments, setSize, setFilter }) => {\r\n  const [isReachingEnd, setIsReachingEnd] = useState(true);\r\n  const ref = useRef(null);\r\n  const isVisible = useOnScreen(ref);\r\n  const isEmpty = moments?.[0]?.length === 0;\r\n\r\n  useEffect(() => {\r\n    if (moments) {\r\n      setIsReachingEnd(moments[moments.length - 1]?.length < 10);\r\n    }\r\n  }, [moments]);\r\n  useEffect(() => {\r\n    if (isVisible && !isReachingEnd && !isEmpty) {\r\n      setSize((prev) => prev + 1).then(() => {});\r\n    }\r\n  }, [isVisible]);\r\n\r\n  const momentsData = moments ? moments?.flat() : [];\r\n\r\n  return (\r\n    <MomentListWrapper>\r\n      <div className=\"content-wrapper\">\r\n        <div className=\"content-filter\">\r\n          <button\r\n            style={filter === \"\" ? { fontWeight: \"bold\", color: BLUE_COLOR } : {}}\r\n            onClick={() => setFilter(\"\")}\r\n          >\r\n            최신순\r\n          </button>\r\n          <button\r\n            style={filter === \"popular\" ? { fontWeight: \"bold\", color: BLUE_COLOR } : {}}\r\n            onClick={() => setFilter(\"popular\")}\r\n          >\r\n            인기순\r\n          </button>\r\n          <button\r\n            style={filter === \"view\" ? { fontWeight: \"bold\", color: BLUE_COLOR } : {}}\r\n            onClick={() => setFilter(\"view\")}\r\n          >\r\n            조회순\r\n          </button>\r\n          <button\r\n            style={filter === \"comment\" ? { fontWeight: \"bold\", color: BLUE_COLOR } : {}}\r\n            onClick={() => setFilter(\"comment\")}\r\n          >\r\n            댓글많은순\r\n          </button>\r\n        </div>\r\n        {momentsData.length > 0 ? (\r\n          momentsData?.map((v, i) => {\r\n            if (momentsData.length - 1 === i) {\r\n              return (\r\n                <MomentCard\r\n                  revalidateMoments={revalidateMoments}\r\n                  isLast={true}\r\n                  key={i}\r\n                  moment={v}\r\n                />\r\n              );\r\n            }\r\n            return <MomentCard revalidateMoments={revalidateMoments} key={i} moment={v} />;\r\n          })\r\n        ) : (\r\n          <div className=\"no-post\">\r\n            <img src={NO_POST_URL} />\r\n            <h4>아직 모멘트가 없어요😥</h4>\r\n          </div>\r\n        )}\r\n        <div ref={ref} />\r\n      </div>\r\n    </MomentListWrapper>\r\n  );\r\n};\r\n\r\nexport default memo(MomentList);\r\n"],"names":["ArticleColumnCardWrapper","ELLIPSIS_STYLE","SM_SIZE","story","isMain","onClickArticleCard","useCallback","router","code","id","className","onClick","style","boxShadow","borderRadius","borderTopLeftRadius","borderTopRightRadius","src","thumbnail","alt","CommentOutlined","comments","length","HeartOutlined","likedUser","NameSpace","date","createdAt","user","title","dateCalculator","createdDay","dayjs","format","today","Date","diff","fromNow","relativeTime","NameSpaceWrapper","FLEX_STYLE","RGB_BLACK","comment","onClickGotoProfile","e","stopPropagation","icon","DEFAULT_ICON_URL","name","memo","MainAsideLeftNavWrapper","GRAY_COLOR","query","useRouter","country","useSWR","fetcher","noRevalidate","data","onClickCountry","image_src","WORLD_IMAGE","moments","stories","href","type","faHandshake","faPlaneDeparture","faExclamationCircle","faUsers","faGlobe","MainAsideRightListWrapper","latestMoments","latestStories","map","v","i","ArticleSmallCard","moment","MainPosterWrapper","XLG_SIZE","settings","dots","fade","infinite","speed","autoplay","autoplaySpeed","slidesToShow","slidesToScroll","nextArrow","prevArrow","PosterCard","image","path","desc","link","MainLayoutWrapper","children","popularSlideSettings","responsive","breakpoint","MainPopularArticleSlideWrapper","Slider","NoStoryWrapper","MainPopularArticleSlide","popularArticles","onClickMoreCard","MomentListWrapper","BLUE_COLOR","MomentCardWrapper","BORDER_THIN","RED_COLOR","MomentCard","revalidateMoments","isLast","dispatch","useDispatch","useSelector","state","useState","userLike","setUserLike","liked","setLiked","useEffect","likeMoment","find","momentId","onClickLikeOrDisLike","value","axios","then","toastSuccessMessage","prev","getUserInfoAction","error","toastErrorMessage","onClickCountryTag","onClickTypeTag","onClickGotoPost","borderBottom","images","slice","PlusCircleOutlined","html2textConverter","content","HeartFilled","MomentList","filter","setSize","setFilter","isReachingEnd","setIsReachingEnd","ref","useRef","isVisible","useOnScreen","isEmpty","momentsData","flat","fontWeight","color","NO_POST_URL"],"sourceRoot":""}