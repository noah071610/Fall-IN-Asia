{"version":3,"file":"static/chunks/211-6b8e838c156f0962721c.js","mappings":"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","sources":["webpack://_N_E/./components/Cards/ArticleSmallCard/styles.tsx","webpack://_N_E/./components/Cards/ArticleSmallCard/index.tsx","webpack://_N_E/./components/Cards/PosterCard.tsx","webpack://_N_E/./components/SliderArrow.tsx","webpack://_N_E/./hooks/useOnScreen.ts"],"sourcesContent":["import { css } from \"@emotion/react\";\r\nimport { ELLIPSIS_STYLE, FLEX_STYLE, GRID_STYLE } from \"config\";\r\nimport tw from \"twin.macro\";\r\n\r\nexport const ArticleSmallCardWrapper = (isSearchPage?: boolean) => css`\r\n  ${tw`w-full cursor-pointer mb-6`}\r\n  ${isSearchPage && tw`shadow-md px-4 pt-4 pb-8 mb-0`}\r\n  transition:0.3s all;\r\n  &:hover {\r\n    ${isSearchPage && tw`shadow-lg`}\r\n  }\r\n  .memont-small-top {\r\n    ${GRID_STYLE(\"1rem\", \"4.3rem 2.5fr\")};\r\n    margin-bottom: 1rem;\r\n    .image-wrapper {\r\n      ${tw`flex overflow-hidden rounded-md`}\r\n      img {\r\n        ${tw`rounded-full `}\r\n        width:4.3rem;\r\n        height: 4.3rem;\r\n      }\r\n    }\r\n    .small-card-info {\r\n      ${FLEX_STYLE(\"center\", \"flex-start\", \"column\")}\r\n      span {\r\n        ${tw`block mb-1 text-xs`}\r\n      }\r\n    }\r\n  }\r\n  h2 {\r\n    ${tw`pl-1 font-bold hover:underline`}\r\n    ${ELLIPSIS_STYLE(1.65, 2, \"auto\")};\r\n    font-size: 0.8rem;\r\n  }\r\n`;\r\n","import html2textConverter from \"utils/html2textConverter\";\r\nimport { IArticle, IMoment, IStory } from \"@typings/db\";\r\nimport router from \"next/router\";\r\nimport React, { FC, useCallback, useMemo } from \"react\";\r\nimport { ArticleSmallCardWrapper } from \"./styles\";\r\nimport dayjs from \"dayjs\";\r\n\r\ninterface IProps {\r\n  moment?: IMoment;\r\n  story?: IStory;\r\n  article?: IArticle;\r\n  isSearchPage?: boolean;\r\n}\r\nconst ArticleSmallCard: FC<IProps> = ({ isSearchPage, moment, story, article }) => {\r\n  const onClickArticleSmallCard = useCallback(() => {\r\n    if (moment) {\r\n      router.push(`/country/${moment?.code}/${moment?.id}`);\r\n    } else {\r\n      router.push(`/story/${story?.code}/${story?.id}`);\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <article css={ArticleSmallCardWrapper(isSearchPage)} onClick={onClickArticleSmallCard}>\r\n      <div className=\"memont-small-top\">\r\n        <div className=\"image-wrapper\">\r\n          <img\r\n            style={story || article ? { borderRadius: \"5px\" } : {}}\r\n            src={moment?.user?.icon || (story || article)?.thumbnail}\r\n            alt=\"card-image\"\r\n          />\r\n        </div>\r\n        <div className=\"small-card-info\">\r\n          <span>\r\n            {story && `${story?.country?.name}/연대기`}\r\n            {article && `${article?.country?.name}/${article?.type}`}\r\n            {moment && `${moment?.country?.name}/${moment?.type}`}\r\n          </span>\r\n          {(moment || story) && <span>{(moment || story)?.user?.name}</span>}\r\n          <span>{dayjs((moment || story || article)?.createdAt).format(\"YYYY/MM/DD\")}</span>\r\n        </div>\r\n      </div>\r\n      <h2>{html2textConverter(moment?.content || story?.title || article?.title)}</h2>\r\n    </article>\r\n  );\r\n};\r\n\r\nexport default ArticleSmallCard;\r\n","import { css } from \"@emotion/react\";\r\nimport { SM_SIZE, WORLD_IMAGE } from \"config\";\r\nimport router from \"next/router\";\r\nimport React, { FC, useCallback } from \"react\";\r\nimport tw from \"twin.macro\";\r\n\r\nconst PosterCardWrapper = (isMain?: boolean) => css`\r\n  ${tw`w-full relative overflow-hidden cursor-pointer`}\r\n  ${isMain ? tw`rounded-2xl h-60` : tw`h-80`}\r\n  background-repeat: no-repeat;\r\n  background-position: center;\r\n  background-size: 100% 100%;\r\n  .poster-content {\r\n    ${tw`absolute z-10 bottom-6 left-8`}\r\n    h1 {\r\n      ${tw`text-white mb-4 text-5xl`}\r\n      font-family: 'Shadows Into Light', cursive;\r\n    }\r\n    p {\r\n      ${tw`text-white pr-16`}\r\n    }\r\n  }\r\n  .poster-overlay {\r\n    ${tw`w-full h-full absolute top-0 left-0`}\r\n    background: linear-gradient(0deg, rgba(0, 0, 0, 0.25) 32%, rgba(23, 21, 21, 0) 48%);\r\n  }\r\n  @media (max-width: ${SM_SIZE}) {\r\n    ${isMain ? tw`rounded-none h-48` : tw`h-48`}\r\n\r\n    .poster-content {\r\n      ${tw`bottom-8 left-4`}\r\n      h1 {\r\n        ${tw`text-2xl mb-2`}\r\n      }\r\n      p {\r\n        ${tw`text-xs`}\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\ninterface IProps {\r\n  isMain?: boolean;\r\n  image: string;\r\n  title: string;\r\n  desc: string;\r\n  link?: string;\r\n  path?: string;\r\n}\r\n\r\nconst PosterCard: FC<IProps> = ({ isMain, image, title, desc, link, path }) => {\r\n  const onClickPoster = useCallback(\r\n    (e) => {\r\n      e.stopPropagation();\r\n      if (path) {\r\n        router.push(path);\r\n        return;\r\n      }\r\n      if (link) {\r\n        window.open(link, \"_blank\");\r\n        return;\r\n      }\r\n    },\r\n    [path, link]\r\n  );\r\n\r\n  return (\r\n    <div\r\n      onClick={(e) => onClickPoster(e)}\r\n      css={PosterCardWrapper(isMain)}\r\n      style={{\r\n        backgroundImage: `url(${image || WORLD_IMAGE}\r\n      )`,\r\n      }}\r\n    >\r\n      <div className=\"poster-content\">\r\n        <h1>{title}</h1>\r\n        <p>{desc}</p>\r\n      </div>\r\n      <div className=\"poster-overlay\" />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PosterCard;\r\n","import styled from \"@emotion/styled\";\r\nimport { faArrowCircleLeft, faArrowCircleRight } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { BLUE_COLOR, SM_SIZE } from \"config\";\r\nimport tw from \"twin.macro\";\r\n\r\nconst SliderRightArrow = styled.a`\r\n  ${tw`block z-10 top-1/2 right-0 absolute text-4xl text-white p-4 opacity-50 `}\r\n  transform: translateY(-50%);\r\n  transition: 0.3s all;\r\n  &:hover {\r\n    ${tw`text-white opacity-100`}\r\n    transform: translate(10%, -50%);\r\n  }\r\n  @media (max-width: ${SM_SIZE}) {\r\n    ${tw`right-0 pr-0`}\r\n  }\r\n`;\r\n\r\nconst SliderLeftArrow = styled.a`\r\n  ${tw`block z-10 top-1/2 left-0 absolute text-4xl text-white p-4 opacity-50`}\r\n  transform: translateY(-50%);\r\n  transition: 0.3s all;\r\n  &:hover {\r\n    transform: translate(-10%, -50%);\r\n    ${tw`text-white opacity-100`}\r\n  }\r\n  @media (max-width: ${SM_SIZE}) {\r\n    ${tw`left-0 pl-0`}\r\n  }\r\n`;\r\n\r\nexport const NextArrow = (props: any) => {\r\n  const { onClick, slideCount, currentSlide } = props;\r\n  return (\r\n    <>\r\n      {slideCount - 1 !== currentSlide && (\r\n        <SliderRightArrow onClick={onClick}>\r\n          <FontAwesomeIcon icon={faArrowCircleRight} />\r\n        </SliderRightArrow>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport const PrevArrow = (props: any) => {\r\n  const { onClick, slideCount, currentSlide } = props;\r\n  return (\r\n    <>\r\n      {currentSlide !== 0 && (\r\n        <SliderLeftArrow onClick={onClick}>\r\n          <FontAwesomeIcon icon={faArrowCircleLeft} />\r\n        </SliderLeftArrow>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n","import { useState, useEffect } from \"react\";\r\n\r\nconst useOnScreen = (ref: any) => {\r\n  const [isIntersecting, setIntersecting] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const observer = new IntersectionObserver(([entry]) => setIntersecting(entry.isIntersecting));\r\n\r\n    observer.observe(ref.current);\r\n    return () => {\r\n      observer.disconnect();\r\n    };\r\n  }, []);\r\n\r\n  return isIntersecting;\r\n};\r\n\r\nexport default useOnScreen;\r\n"],"names":["ArticleSmallCardWrapper","isSearchPage","css","GRID_STYLE","FLEX_STYLE","ELLIPSIS_STYLE","moment","story","article","onClickArticleSmallCard","useCallback","router","code","id","onClick","className","style","borderRadius","src","user","icon","thumbnail","alt","country","name","type","dayjs","createdAt","format","html2textConverter","content","title","PosterCardWrapper","isMain","SM_SIZE","image","desc","link","path","onClickPoster","e","stopPropagation","window","open","backgroundImage","WORLD_IMAGE","SliderRightArrow","SliderLeftArrow","NextArrow","props","slideCount","currentSlide","faArrowCircleRight","PrevArrow","faArrowCircleLeft","ref","useState","isIntersecting","setIntersecting","useEffect","observer","IntersectionObserver","entry","observe","current","disconnect"],"sourceRoot":""}