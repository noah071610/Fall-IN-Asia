{"version":3,"file":"static/chunks/pages/story-14ec47770152ee363f9a.js","mappings":"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","sources":["webpack://_N_E/./components/Cards/ArticleColumnCard/styles.tsx","webpack://_N_E/./components/Cards/ArticleColumnCard/index.tsx","webpack://_N_E/./utils/dateCalculator.ts","webpack://_N_E/./components/NameSpace.tsx","webpack://_N_E/./components/TopNavigation.tsx","webpack://_N_E/./hooks/useOnScreen.ts","webpack://_N_E/./layout/XLGLayout.tsx","webpack://_N_E/./sections/StoryPage/StoryPoster.tsx","webpack://_N_E/./components/Cards/ArticleCard/index.tsx","webpack://_N_E/./components/Cards/ArticleCard/styles.tsx","webpack://_N_E/./pages/story/index.tsx","webpack://_N_E/./sections/StoryPage/StoryArticleList.tsx","webpack://_N_E/?38b8"],"sourcesContent":["import styled from \"@emotion/styled\";\r\nimport { ELLIPSIS_STYLE, FLEX_STYLE, GRAY_COLOR, SM_SIZE } from \"config\";\r\nimport tw from \"twin.macro\";\r\n\r\nexport const ArticleColumnCardWrapper = styled.article`\r\n  ${tw`bg-white cursor-pointer pb-8 shadow-md`}\r\n  transition:0.3s all;\r\n  &:hover {\r\n    ${tw`shadow-lg`}\r\n    .image-wrapper {\r\n      img {\r\n        transform: scale(1.15);\r\n      }\r\n    }\r\n  }\r\n  .image-wrapper {\r\n    ${tw`mb-4 overflow-hidden relative`}\r\n    img {\r\n      ${tw`w-full`}\r\n      height:180px;\r\n      transition: 0.3s all;\r\n    }\r\n    .like-comment {\r\n      ${tw`absolute bottom-2 right-2 bg-white py-1 px-2 opacity-50 rounded-xl`}\r\n      li {\r\n        ${tw`p-1 cursor-pointer`}\r\n        .count {\r\n          margin: 0 0.15rem;\r\n        }\r\n        .anticon {\r\n          font-size: 1.2rem;\r\n        }\r\n      }\r\n    }\r\n  }\r\n  .box-card-info {\r\n    padding: 0 1rem;\r\n  }\r\n  p {\r\n    ${tw`m-4 mb-0 overflow-hidden`};\r\n    ${tw`text-sm font-bold`}\r\n    ${ELLIPSIS_STYLE(1.7, 2, \"46px\")}\r\n  }\r\n  @media (max-width: ${SM_SIZE}) {\r\n    ${tw`pb-6 mb-3`}\r\n    p {\r\n      ${ELLIPSIS_STYLE(1.7, 2, \"auto\")}\r\n    }\r\n  }\r\n`;\r\n","import { CommentOutlined, HeartOutlined } from \"@ant-design/icons\";\r\nimport NameSpace from \"@components/NameSpace\";\r\nimport React, { FC, useCallback } from \"react\";\r\nimport { ArticleColumnCardWrapper } from \"./styles\";\r\nimport { IStory } from \"@typings/db\";\r\nimport router from \"next/router\";\r\n\r\ninterface IProps {\r\n  story: IStory;\r\n  isMain?: boolean;\r\n}\r\n\r\nconst ArticleColumnCard: FC<IProps> = ({ story, isMain }) => {\r\n  const onClickArticleCard = useCallback(() => {\r\n    router.push(`/story/${story?.code}/${story?.id}`);\r\n  }, []);\r\n\r\n  return (\r\n    <ArticleColumnCardWrapper\r\n      className=\"article-card-column-wrapper\"\r\n      onClick={onClickArticleCard}\r\n      style={isMain ? { boxShadow: \"none\", borderRadius: \"15px\" } : {}}\r\n    >\r\n      <div\r\n        style={isMain ? { borderTopLeftRadius: \"15px\", borderTopRightRadius: \"15px\" } : {}}\r\n        className=\"image-wrapper\"\r\n      >\r\n        <img\r\n          style={isMain ? { borderTopLeftRadius: \"15px\", borderTopRightRadius: \"15px\" } : {}}\r\n          src={story?.thumbnail}\r\n          alt=\"story-image\"\r\n        />\r\n        <ul className=\"like-comment\">\r\n          <li>\r\n            <CommentOutlined />\r\n            <span className=\"count\">{story?.comments?.length}</span>\r\n          </li>\r\n          <li>\r\n            <HeartOutlined />\r\n            <span className=\"count\">{story?.likedUser?.length}</span>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n      <div className=\"box-card-info\">\r\n        <NameSpace date={story?.createdAt} user={story?.user} />\r\n      </div>\r\n      <p>{story?.title}</p>\r\n    </ArticleColumnCardWrapper>\r\n  );\r\n};\r\n\r\nexport default ArticleColumnCard;\r\n","import dayjs from \"dayjs\";\r\nimport relativeTime from \"dayjs/plugin/relativeTime\";\r\nimport \"dayjs/locale/ko\";\r\n\r\ndayjs.locale(\"ko\");\r\ndayjs.extend(relativeTime);\r\n\r\nexport default function dateCalculator(createdAt: Date) {\r\n  const createdDay = dayjs(createdAt).format(\"YYYY-MM-DD\");\r\n  const today = dayjs(new Date()).format(\"YYYY-MM-DD\");\r\n  const dayDiff = dayjs(today).diff(createdDay, \"day\");\r\n  if (dayDiff > 0) {\r\n    return createdDay;\r\n  } else {\r\n    return dayjs(createdAt).fromNow();\r\n  }\r\n}\r\n","import { IUser } from \"@typings/db\";\r\nimport React, { FC, memo, useCallback } from \"react\";\r\nimport { DEFAULT_ICON_URL, FLEX_STYLE, RGB_BLACK } from \"config\";\r\nimport styled from \"@emotion/styled\";\r\nimport tw from \"twin.macro\";\r\nimport router from \"next/router\";\r\nimport dateCalculator from \"utils/dateCalculator\";\r\n\r\nexport const NameSpaceWrapper = styled.div`\r\n  ${FLEX_STYLE(\"flex-start\", \"center\")};\r\n  ${tw`cursor-pointer`}\r\n  &:hover {\r\n    p {\r\n      ${tw`underline`}\r\n    }\r\n  }\r\n  .icon {\r\n    ${tw`relative cursor-pointer mr-3`};\r\n    img {\r\n      ${tw`w-10 h-10 rounded-full`};\r\n    }\r\n    .goto-profile-popup {\r\n      ${tw`absolute py-1 px-2 -left-5 -top-8 bg-gray-500 rounded shadow-lg hidden text-center text-xs font-bold text-white`}\r\n      white-space: nowrap;\r\n    }\r\n    &:hover {\r\n      img {\r\n        ${tw`opacity-30`};\r\n      }\r\n      .profile-popup {\r\n        ${tw`block`}\r\n      }\r\n    }\r\n  }\r\n  p {\r\n    ${tw`mt-2`}\r\n    font-size:0.83rem;\r\n  }\r\n  span {\r\n    display: inline-block;\r\n  }\r\n  .name-title {\r\n    ${tw`text-sm`}\r\n    ${FLEX_STYLE(\"flex-start\", \"center\")};\r\n    .comment-date {\r\n      margin-left: 0.6rem;\r\n      color: ${RGB_BLACK(0.3)};\r\n      font-size: 0.75rem;\r\n    }\r\n  }\r\n  .date {\r\n    padding-top: 0.2rem;\r\n    font-size: 0.7rem;\r\n    color: ${RGB_BLACK(0.3)};\r\n  }\r\n`;\r\n\r\ninterface IProps {\r\n  user: IUser;\r\n  date: Date;\r\n  comment?: string;\r\n}\r\n\r\nconst NameSpace: FC<IProps> = ({ user, date, comment }) => {\r\n  const onClickGotoProfile = useCallback(\r\n    (e) => {\r\n      e.stopPropagation();\r\n      router.push(`/me/${user.id}`);\r\n    },\r\n    [user]\r\n  );\r\n  return (\r\n    <NameSpaceWrapper className=\"name-space-wrapper\">\r\n      <div onClick={onClickGotoProfile} className=\"icon\">\r\n        <img src={user?.icon ? user?.icon : DEFAULT_ICON_URL} alt=\"user-icon\" />\r\n        <span className=\"goto-profile-popup\">프로필 보기</span>\r\n      </div>\r\n      <div className=\"user-info\">\r\n        <div className=\"name-title\">\r\n          <span className=\"name\">{user?.name}</span>\r\n          {comment && <span className=\"comment-date\">{dateCalculator(date)}</span>}\r\n        </div>\r\n        {comment ? <p>{comment}</p> : <span className=\"date\">{dateCalculator(date)}</span>}\r\n      </div>\r\n    </NameSpaceWrapper>\r\n  );\r\n};\r\n\r\nexport default memo(NameSpace);\r\n","import React, { FC } from \"react\";\r\nimport styled from \"@emotion/styled\";\r\nimport { BLUE_COLOR, BORDER_THIN, FLEX_STYLE, SM_SIZE } from \"config\";\r\nimport tw from \"twin.macro\";\r\nimport { SwiperSlide, Swiper } from \"swiper/react\";\r\n\r\nconst TopNavigationWrapper = styled.nav`\r\n  ${tw`sticky`}\r\n  top:3rem;\r\n  z-index: 1;\r\n  ${BORDER_THIN(\"border-bottom\")};\r\n  .nav-outer {\r\n    ${tw`mx-2  bg-white`}\r\n  }\r\n  .nav-inner-list {\r\n    ${tw` mx-auto`}\r\n    width:100%;\r\n    ${FLEX_STYLE(\"center\", \"center\")};\r\n    li {\r\n      ${tw`p-4 cursor-pointer`}\r\n    }\r\n    .active-list {\r\n      font-weight: bold;\r\n      border-bottom: 0.25rem solid ${BLUE_COLOR};\r\n      padding-bottom: 0.75rem;\r\n    }\r\n  }\r\n  .nav-outer-small {\r\n    ${tw`hidden`}\r\n  }\r\n  @media (max-width: ${SM_SIZE}) {\r\n    .nav-outer {\r\n      ${tw`hidden`}\r\n    }\r\n    .nav-outer-small {\r\n      ${tw`grid bg-white`}\r\n      span {\r\n        ${tw`py-4 px-0 cursor-pointer`}\r\n        ${FLEX_STYLE(\"center\", \"center\")};\r\n      }\r\n      .active-list {\r\n        font-weight: bold;\r\n        border-bottom: 0.15rem solid ${BLUE_COLOR};\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\ninterface IProps {\r\n  list: any[];\r\n  onClickList: (value: string) => void;\r\n  filter: string;\r\n}\r\n\r\nconst TopNavigation: FC<IProps> = ({ filter, list, onClickList }) => {\r\n  return (\r\n    <TopNavigationWrapper>\r\n      <div className=\"nav-outer\">\r\n        <div className=\"nav-inner-list\">\r\n          {list?.map((v, i) => {\r\n            return (\r\n              <li\r\n                className={filter === v.value ? \"active-list\" : \"\"}\r\n                onClick={() => onClickList(v.value)}\r\n                key={i}\r\n              >\r\n                {v.name}\r\n              </li>\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n      <Swiper slidesPerView={4.4} freeMode={true} className=\"nav-outer-small\">\r\n        {list?.map((v, i) => {\r\n          return (\r\n            <SwiperSlide\r\n              className={filter === v.value ? \"active-list\" : \"\"}\r\n              onClick={() => onClickList(v.value)}\r\n              key={i}\r\n            >\r\n              <span>{v.name}</span>\r\n            </SwiperSlide>\r\n          );\r\n        })}\r\n      </Swiper>\r\n    </TopNavigationWrapper>\r\n  );\r\n};\r\n\r\nexport default TopNavigation;\r\n","import { useState, useEffect } from \"react\";\r\n\r\nconst useOnScreen = (ref: any) => {\r\n  const [isIntersecting, setIntersecting] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const observer = new IntersectionObserver(([entry]) => setIntersecting(entry.isIntersecting));\r\n\r\n    observer.observe(ref.current);\r\n    return () => {\r\n      observer.disconnect();\r\n    };\r\n  }, []);\r\n\r\n  return isIntersecting;\r\n};\r\n\r\nexport default useOnScreen;\r\n","import { FC, RefObject } from \"react\";\r\nimport styled from \"@emotion/styled/macro\";\r\nimport { XLG_SIZE } from \"config\";\r\nimport tw from \"twin.macro\";\r\nconst XLGLayoutWrapper = styled.main`\r\n  width: ${XLG_SIZE};\r\n  ${tw`mx-auto py-8`};\r\n  .main-title {\r\n    ${tw`text-lg font-bold mt-12 mb-6`};\r\n    span {\r\n      ${tw`block text-sm mt-2`};\r\n    }\r\n  }\r\n  .main-title:first-of-type {\r\n    ${tw`mt-0 mb-6`}\r\n  }\r\n  @media (max-width: 1300px) {\r\n    ${tw`w-full px-2`}\r\n  }\r\n`;\r\n\r\ninterface XLGLayoutProps {\r\n  postRef?: RefObject<HTMLDivElement> | null;\r\n}\r\n\r\nconst XLGLayout: FC<XLGLayoutProps> = ({ postRef, children }) => {\r\n  return <XLGLayoutWrapper ref={postRef}>{children}</XLGLayoutWrapper>;\r\n};\r\n\r\nexport default XLGLayout;\r\n","import React, { FC } from \"react\";\r\nimport styled from \"@emotion/styled\";\r\nimport { FLEX_STYLE, SM_SIZE } from \"config\";\r\nimport tw from \"twin.macro\";\r\n\r\ninterface IProps {\r\n  image?: string;\r\n  name?: string;\r\n}\r\nconst StoryPosterWrapper = styled.section`\r\n  ${tw`relative w-full h-80`}\r\n  background-repeat: no-repeat;\r\n  ${FLEX_STYLE(\"center\", \"center\")};\r\n  .title {\r\n    ${tw`text-3xl font-bold text-white cursor-pointer z-10`};\r\n  }\r\n  @media (max-width: ${SM_SIZE}) {\r\n    ${tw`h-52`}\r\n    .title {\r\n      ${tw`text-lg px-4 text-center`}\r\n    }\r\n  }\r\n`;\r\nconst StoryPoster: FC<IProps> = ({ name, image }) => {\r\n  return (\r\n    <StoryPosterWrapper\r\n      style={\r\n        image\r\n          ? {\r\n              background: `url(${image}\r\n          )`,\r\n              backgroundPosition: \"10% 40%\",\r\n              backgroundSize: \"100% 230%\",\r\n            }\r\n          : {\r\n              background: `url(https://user-images.githubusercontent.com/74864925/126781509-8008fa80-5bb8-4a90-bb9e-132357def1aa.jpg\r\n        )`,\r\n              backgroundPosition: \"top left\",\r\n              backgroundSize: \"100% 100%\",\r\n            }\r\n      }\r\n    >\r\n      <div className=\"overlay\" />\r\n      <h1 className=\"title\">\r\n        {name ? name + \" 연대기\" : \"당신의 여행에는 어떤 스토리가 있었나요?\"}\r\n      </h1>\r\n    </StoryPosterWrapper>\r\n  );\r\n};\r\n\r\nexport default StoryPoster;\r\n","import { CommentOutlined, HeartOutlined } from \"@ant-design/icons\";\r\nimport NameSpace from \"@components/NameSpace\";\r\nimport { IStory } from \"@typings/db\";\r\nimport { NO_IMAGE_URL } from \"config\";\r\nimport { FC, useCallback } from \"react\";\r\nimport { ArticleCardWrapper } from \"./styles\";\r\nimport router from \"next/router\";\r\nimport html2textConverter from \"utils/html2textConverter\";\r\n\r\ninterface IProps {\r\n  story: IStory;\r\n}\r\n\r\nconst ArticleCard: FC<IProps> = ({ story }) => {\r\n  const onClickArticleCard = useCallback(() => {\r\n    router.push(`/story/${story?.code}/${story?.id}`);\r\n  }, [story]);\r\n\r\n  return (\r\n    <article\r\n      className=\"article-card-wrapper\"\r\n      css={ArticleCardWrapper()}\r\n      onClick={onClickArticleCard}\r\n    >\r\n      <div className=\"image-wrapper\">\r\n        <img src={story?.thumbnail ? story.thumbnail : NO_IMAGE_URL} alt=\"article-thumbnail\" />\r\n        <ul className=\"like-comment\">\r\n          <li>\r\n            <CommentOutlined />\r\n            <span className=\"count\">{story?.comments.length}</span>\r\n          </li>\r\n          <li>\r\n            <HeartOutlined />\r\n            <span className=\"count\">{story?.likedUser.length}</span>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n      <div className=\"story-main\">\r\n        <h2>{story?.title}</h2>\r\n        <div className=\"story-info\">\r\n          <NameSpace date={story?.createdAt} user={story?.user} />\r\n        </div>\r\n        <div className=\"story-content\">{html2textConverter(story?.content)}</div>\r\n      </div>\r\n    </article>\r\n  );\r\n};\r\n\r\nexport default ArticleCard;\r\n","import { css } from \"@emotion/react\";\r\nimport { ELLIPSIS_STYLE, FLEX_STYLE, GRID_STYLE } from \"config\";\r\nimport tw from \"twin.macro\";\r\n\r\nexport const ArticleCardWrapper = () => css`\r\n  ${tw`cursor-pointer mb-4`}\r\n  ${GRID_STYLE(\"2rem\", \"1.5fr 2.5fr\")}\r\n  &:hover {\r\n    .image-wrapper {\r\n      img {\r\n        transform: scale(1.15);\r\n      }\r\n    }\r\n  }\r\n  .image-wrapper {\r\n    ${tw`rounded-md overflow-hidden relative`};\r\n    img {\r\n      ${tw`rounded-md h-60 w-full`};\r\n      transition: 0.3s all;\r\n    }\r\n    .like-comment {\r\n      ${tw`absolute bottom-4 right-4 bg-white py-1 px-2 opacity-50 rounded-xl`}\r\n      li {\r\n        ${tw`p-1 cursor-pointer`}\r\n        .count {\r\n          margin: 0 0.3rem;\r\n        }\r\n        .anticon {\r\n          font-size: 1.2rem;\r\n        }\r\n      }\r\n    }\r\n  }\r\n  .story-info {\r\n    ${FLEX_STYLE(\"flex-start\", \"flex-end\")};\r\n  }\r\n  .story-content {\r\n    margin-top: 1rem;\r\n    ${ELLIPSIS_STYLE(1.8, 5, \"auto\")};\r\n  }\r\n  h2 {\r\n    ${tw`text-2xl font-bold mb-4 overflow-hidden`}\r\n    ${ELLIPSIS_STYLE(1.5, 1, \"auto\")};\r\n  }\r\n  @media (max-width: 1000px) {\r\n    ${GRID_STYLE(\"2rem\", \"repeat(2,1fr)\")}\r\n    h2 {\r\n      ${ELLIPSIS_STYLE(1.5, 2, \"auto\")};\r\n    }\r\n    .story-content {\r\n      ${ELLIPSIS_STYLE(1.8, 4, \"auto\")};\r\n    }\r\n  }\r\n`;\r\n","import React, { FC, useCallback, useEffect, useMemo, useState } from \"react\";\r\nimport styled from \"@emotion/styled\";\r\nimport XLGLayout from \"@layout/XLGLayout\";\r\nimport {\r\n  BORDER_THIN,\r\n  FLEX_STYLE,\r\n  LG_SIZE,\r\n  noRevalidate,\r\n  NO_POST_URL,\r\n  RGB_BLACK,\r\n  XLG_SIZE,\r\n} from \"config\";\r\nimport { wrapper } from \"configureStore\";\r\nimport { getUserInfoAction } from \"actions/user\";\r\nimport axios from \"axios\";\r\nimport router, { useRouter } from \"next/router\";\r\nimport useSWR, { useSWRInfinite } from \"swr\";\r\nimport { ICountry, IStory } from \"@typings/db\";\r\nimport fetcher from \"utils/fetcher\";\r\nimport CountryPreviewSlide from \"@components/CountryPreviewSlide\";\r\nimport StoryMainPoster from \"@sections/StoryPage/StoryPoster\";\r\nimport tw from \"twin.macro\";\r\nimport MainCountryAllview from \"@components/CountryAllview\";\r\nimport TopNavigation from \"@components/TopNavigation\";\r\nimport StoryArticleList from \"@sections/StoryPage/StoryArticleList\";\r\nimport ArticleCard from \"@components/Cards/ArticleCard\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { RootState } from \"slices\";\r\nimport ArticleColumnCard from \"@components/Cards/ArticleColumnCard\";\r\nimport Head from \"next/head\";\r\n\r\nconst StoryMainWrapper = styled.div`\r\n  padding-top: 4rem;\r\n  .country-list-wrapper {\r\n    ${tw`mx-auto py-4`}\r\n    width:${XLG_SIZE};\r\n  }\r\n  .story-top-section {\r\n    ${tw`pt-16`}\r\n  }\r\n  .more-story-btn {\r\n    ${tw`py-1 px-3 ml-4 rounded-lg text-xs font-bold hover:shadow-md`}\r\n    ${BORDER_THIN(\"border\")};\r\n  }\r\n  .popular-story-wrapper {\r\n    .article-card-wrapper {\r\n      ${tw`grid`}\r\n    }\r\n    .article-card-column-wrapper {\r\n      ${tw`hidden`}\r\n    }\r\n  }\r\n  .no-story-wrapper {\r\n    ${tw`rounded-xl select-none p-8 mt-8`}\r\n    height:500px;\r\n    ${FLEX_STYLE(\"center\", \"center\", \"column\")};\r\n    img {\r\n      ${tw`w-40 h-40 opacity-30 mb-4`}\r\n    }\r\n    h2 {\r\n      ${tw`text-base font-bold mb-4 text-center`}\r\n    }\r\n  }\r\n  @media (max-width: ${LG_SIZE}) {\r\n    .country-list-wrapper {\r\n      ${tw`px-2 w-full`}\r\n    }\r\n  }\r\n  @media (max-width: 460px) {\r\n    .popular-story-wrapper {\r\n      .article-card-wrapper {\r\n        ${tw`hidden`}\r\n      }\r\n      .article-card-column-wrapper {\r\n        ${tw`block`}\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\ninterface IProps {\r\n  initiaStories: IStory[][];\r\n  initialPopularStories: IStory[];\r\n}\r\n\r\nconst index: FC<IProps> = ({ initiaStories, initialPopularStories }) => {\r\n  const { query } = useRouter();\r\n  const { user } = useSelector((state: RootState) => state.user);\r\n  const [filter, setFilter] = useState(\"\");\r\n  const [onAllCountries, setAllCountries] = useState(false);\r\n  const [onMorePopularStory, setOnMorePopularStory] = useState(false);\r\n  const { data: popularStories } = useSWR<IStory[]>(\"/story/popular\", fetcher, {\r\n    initialData: initialPopularStories,\r\n    ...noRevalidate,\r\n  });\r\n  const { data: stories, setSize } = useSWRInfinite<IStory[]>(\r\n    (index) =>\r\n      `/story?page=${index + 1}&code=${query?.country || \"\"}&filter=${\r\n        filter === \"country\" ? \"\" : filter\r\n      }`,\r\n    fetcher,\r\n    {\r\n      initialData: initiaStories,\r\n      ...noRevalidate,\r\n    }\r\n  );\r\n\r\n  const storyPageNav = useMemo(() => {\r\n    const nav_list = [\r\n      { name: \"인기순\", value: \"popular\" },\r\n      { name: \"최신순\", value: \"\" },\r\n      { name: \"댓글많은순\", value: \"comment\" },\r\n      { name: \"조회순\", value: \"view\" },\r\n    ];\r\n    if (query?.country) {\r\n      nav_list.push({ name: \"국가전체보기\", value: \"all_country\" });\r\n    } else {\r\n      nav_list.push({ name: \"국가선택\", value: \"country\" });\r\n    }\r\n    if (user) {\r\n      nav_list.push({ name: \"연대기올리기\", value: \"post\" });\r\n    }\r\n    return nav_list;\r\n  }, [query, user]);\r\n\r\n  const { data: countries } = useSWR<ICountry[]>(`/country`, fetcher, noRevalidate);\r\n\r\n  const { data: country } = useSWR<ICountry>(\r\n    query?.country ? `/country/${query?.country}` : null,\r\n    fetcher,\r\n    noRevalidate\r\n  );\r\n\r\n  useEffect(() => {\r\n    setAllCountries(false);\r\n    setFilter(\"\");\r\n  }, [query]);\r\n\r\n  const onClickList = useCallback((value: string) => {\r\n    if (value === \"all_country\") {\r\n      router.push(\"/story\");\r\n      return;\r\n    }\r\n    if (value === \"post\") {\r\n      router.push(\"/story/post\");\r\n      return;\r\n    }\r\n    setFilter(value);\r\n    if (value === \"country\") {\r\n      setAllCountries((prev) => !prev);\r\n      scrollTo({ top: 461 });\r\n      return;\r\n    }\r\n    setAllCountries(false);\r\n  }, []);\r\n\r\n  const onClickMorePopularStoryBtn = useCallback(() => {\r\n    setOnMorePopularStory(true);\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <Head>\r\n        <title>Fall IN Asia - story</title>\r\n      </Head>\r\n      <StoryMainWrapper>\r\n        <StoryMainPoster name={country?.name} image={country?.image_src} />\r\n        {!query?.country && (\r\n          <div className=\"country-list-wrapper\">\r\n            <CountryPreviewSlide slidesPerView={6.2} isMain={false} />\r\n          </div>\r\n        )}\r\n        <TopNavigation filter={filter} onClickList={onClickList} list={storyPageNav} />\r\n        <XLGLayout>\r\n          {onAllCountries && (\r\n            <>\r\n              <h2 className=\"main-title\">국가선택</h2>\r\n              <MainCountryAllview isMain={false} countries={countries} />\r\n            </>\r\n          )}\r\n          <h2 style={{ display: \"flex\", alignItems: \"center\" }} className=\"main-title\">\r\n            인기연대기\r\n            {popularStories && !onMorePopularStory && popularStories?.length > 1 && (\r\n              <button className=\"more-story-btn\" onClick={onClickMorePopularStoryBtn}>\r\n                더보기\r\n              </button>\r\n            )}\r\n          </h2>\r\n          {popularStories && (\r\n            <>\r\n              <div className=\"popular-story-wrapper\">\r\n                <ArticleCard story={popularStories[0]} />\r\n                <ArticleColumnCard story={popularStories[0]} />\r\n                {onMorePopularStory &&\r\n                  popularStories?.slice(1).map((v, i) => {\r\n                    return <ArticleCard key={i} story={v} />;\r\n                  })}\r\n                {onMorePopularStory &&\r\n                  popularStories?.slice(1).map((v, i) => {\r\n                    return <ArticleColumnCard key={i} story={v} />;\r\n                  })}\r\n              </div>\r\n            </>\r\n          )}\r\n          <h2 className=\"main-title\">연대기</h2>\r\n          {stories && stories?.flat().length > 0 ? (\r\n            <StoryArticleList grid={4} gap=\"1.5rem\" setSize={setSize} stories={stories} />\r\n          ) : (\r\n            <div className=\"no-story-wrapper\">\r\n              <img src={NO_POST_URL} alt=\"no-post-img\" />\r\n              <h2>연대기가 없습니다. 첫 연대기에 주인공이 되어주세요!</h2>\r\n              <button className=\"story-post-btn\" onClick={() => router.push(\"/story/post\")}>\r\n                연대기 올리기\r\n              </button>\r\n            </div>\r\n          )}\r\n        </XLGLayout>\r\n      </StoryMainWrapper>\r\n    </>\r\n  );\r\n};\r\n\r\nexport const getServerSideProps = wrapper.getServerSideProps(\r\n  (store) =>\r\n    async ({ req, res, ...etc }) => {\r\n      const cookie = req ? req.headers.cookie : \"\";\r\n      axios.defaults.headers.Cookie = \"\";\r\n      if (req && cookie) {\r\n        axios.defaults.headers.Cookie = cookie;\r\n      }\r\n      await store.dispatch(getUserInfoAction());\r\n      let initialStories = await fetcher(`/story?page=1`);\r\n      initialStories = [initialStories];\r\n      let initialPopularStories = await fetcher(`/story/popular`);\r\n      return {\r\n        props: { initialStories, initialPopularStories },\r\n      };\r\n    }\r\n);\r\n\r\nexport default index;\r\n","import { IStory } from \"@typings/db\";\r\nimport React, { FC, memo, useCallback, useEffect, useState } from \"react\";\r\nimport { useRef } from \"react\";\r\nimport useOnScreen from \"@hooks/useOnScreen\";\r\nimport ArticleColumnCard from \"@components/Cards/ArticleColumnCard\";\r\nimport { GRID_STYLE, SM_SIZE } from \"config\";\r\nimport tw from \"twin.macro\";\r\nimport { css } from \"@emotion/react\";\r\nconst StoryArticleListWrapper = (grid: number, gap: string) => css`\r\n  @media (max-width: 1000px) {\r\n    grid-template-columns: repeat(3, 1fr);\r\n    gap: 0.5rem;\r\n  }\r\n  @media (max-width: 750px) {\r\n    grid-template-columns: repeat(2, 1fr);\r\n    gap: 0.5rem;\r\n  }\r\n  @media (max-width: 460px) {\r\n    display: block;\r\n  }\r\n  ${tw`relative`}\r\n  transition:0.3s all;\r\n  ${GRID_STYLE(gap, `repeat(${grid},1fr)`)};\r\n`;\r\ninterface IProps {\r\n  stories: IStory[][] | undefined;\r\n  setSize: (f: (size: number) => number) => Promise<IStory[][] | undefined>;\r\n  grid: number;\r\n  gap: string;\r\n}\r\n\r\nconst StoryArticleList: FC<IProps> = ({ stories, grid, gap, setSize }) => {\r\n  const [isReachingEnd, setIsReachingEnd] = useState(true);\r\n  const ref = useRef(null);\r\n  const isVisible = useOnScreen(ref);\r\n  const isEmpty = stories?.[0]?.length === 0;\r\n\r\n  useEffect(() => {\r\n    if (stories) {\r\n      setIsReachingEnd(stories[stories.length - 1]?.length < 10);\r\n    }\r\n  }, [stories]);\r\n  useEffect(() => {\r\n    if (isVisible && !isReachingEnd && !isEmpty) {\r\n      setSize((prev) => prev + 1).then(() => {});\r\n    }\r\n  }, [isVisible]);\r\n\r\n  const storiesData = stories ? stories?.flat() : [];\r\n\r\n  return (\r\n    <>\r\n      <div css={StoryArticleListWrapper(grid, gap)}>\r\n        <span id=\"article_list\" className=\"anchor-offset-controller\" />\r\n        {storiesData?.map((v: IStory, i) => {\r\n          return <ArticleColumnCard key={i} story={v} />;\r\n        })}\r\n      </div>\r\n      <div ref={ref} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default memo(StoryArticleList);\r\n","\n    (window.__NEXT_P = window.__NEXT_P || []).push([\n      \"/story\",\n      function () {\n        return require(\"private-next-pages/story/index.tsx\");\n      }\n    ]);\n  "],"names":["ArticleColumnCardWrapper","ELLIPSIS_STYLE","SM_SIZE","story","isMain","onClickArticleCard","useCallback","router","code","id","className","onClick","style","boxShadow","borderRadius","borderTopLeftRadius","borderTopRightRadius","src","thumbnail","alt","CommentOutlined","comments","length","HeartOutlined","likedUser","NameSpace","date","createdAt","user","title","dateCalculator","createdDay","dayjs","format","today","Date","diff","fromNow","relativeTime","NameSpaceWrapper","FLEX_STYLE","RGB_BLACK","comment","onClickGotoProfile","e","stopPropagation","icon","DEFAULT_ICON_URL","name","memo","TopNavigationWrapper","BORDER_THIN","BLUE_COLOR","filter","list","onClickList","map","v","i","value","slidesPerView","freeMode","ref","useState","isIntersecting","setIntersecting","useEffect","observer","IntersectionObserver","entry","observe","current","disconnect","XLGLayoutWrapper","XLG_SIZE","postRef","children","StoryPosterWrapper","image","background","backgroundPosition","backgroundSize","css","GRID_STYLE","NO_IMAGE_URL","html2textConverter","content","StoryMainWrapper","LG_SIZE","initiaStories","initialPopularStories","query","useRouter","useSelector","state","setFilter","onAllCountries","setAllCountries","onMorePopularStory","setOnMorePopularStory","popularStories","useSWR","fetcher","initialData","noRevalidate","data","useSWRInfinite","index","country","stories","setSize","storyPageNav","useMemo","nav_list","push","countries","prev","scrollTo","top","onClickMorePopularStoryBtn","image_src","CountryPreviewSlide","TopNavigation","XLGLayout","display","alignItems","ArticleColumnCard","slice","flat","StoryArticleList","grid","gap","NO_POST_URL","StoryArticleListWrapper","isReachingEnd","setIsReachingEnd","useRef","isVisible","useOnScreen","isEmpty","then","storiesData","window","__NEXT_P"],"sourceRoot":""}