{"version":3,"file":"static/chunks/pages/story/[code]/[storyId]-a045a5b0762fe6f1177b.js","mappings":"iNAIaA,GAA2B,kBAAH,mBAAG,CAAH,4jCAqC/BC,EAAAA,EAAAA,IAAe,IAAK,EAAG,QArCQ,wBAuCdC,EAAAA,GAvCc,qDA0C7BD,EAAAA,EAAAA,IAAe,IAAK,EAAG,QA1CM,O,WC+CrC,EAvCsC,SAAC,GAAsB,QAApBE,EAAoB,EAApBA,MAAOC,EAAa,EAAbA,OACxCC,GAAqBC,EAAAA,EAAAA,cAAY,WACrCC,EAAO,QAAPA,KAAA,wBAAsBJ,QAAtB,IAAsBA,OAAtB,EAAsBA,EAAOK,KAA7B,mBAAqCL,QAArC,IAAqCA,OAArC,EAAqCA,EAAOM,OAC3C,IAEH,OACE,QAACT,EAAD,CACEU,UAAU,8BACVC,QAASN,EACTO,MAAOR,EAAS,CAAES,UAAW,OAAQC,aAAc,QAAW,GAHhE,WAKE,eACEF,MAAOR,EAAS,CAAEW,oBAAqB,OAAQC,qBAAsB,QAAW,GAChFN,UAAU,gBAFZ,WAIE,eACEE,MAAOR,EAAS,CAAEW,oBAAqB,OAAQC,qBAAsB,QAAW,GAChFC,IAAG,OAAEd,QAAF,IAAEA,OAAF,EAAEA,EAAOe,UACZC,IAAI,iBAEN,cAAIT,UAAU,eAAd,WACE,yBACE,QAACU,EAAA,EAAD,KACA,gBAAMV,UAAU,QAAhB,gBAAyBP,QAAzB,IAAyBA,GAAzB,UAAyBA,EAAOkB,gBAAhC,aAAyB,EAAiBC,aAE5C,yBACE,QAACC,EAAA,EAAD,KACA,gBAAMb,UAAU,QAAhB,gBAAyBP,QAAzB,IAAyBA,GAAzB,UAAyBA,EAAOqB,iBAAhC,aAAyB,EAAkBF,mBAIjD,eAAKZ,UAAU,gBAAf,UACE,QAACe,EAAA,EAAD,CAAWC,KAAI,OAAEvB,QAAF,IAAEA,OAAF,EAAEA,EAAOwB,UAAWC,KAAI,OAAEzB,QAAF,IAAEA,OAAF,EAAEA,EAAOyB,UAElD,6BAAIzB,QAAJ,IAAIA,OAAJ,EAAIA,EAAO0B,a,uUCtCXC,GAAqB,kBAAH,oBAAG,CAAH,mDAEpBC,EAAAA,EAAAA,IAAW,SAAU,UAFD,yBAIlBA,EAAAA,EAAAA,IAAW,SAAU,UAJH,mhBA2BDC,EAAAA,GA3BC,yDAgCD9B,EAAAA,GAhCC,wCA0ClB+B,EAA0B,SAAC,GAAc,MAAZ9B,EAAY,EAAZA,MAC3B+B,GAAqB5B,EAAAA,EAAAA,cAAY,WACrCC,EAAO,QAAPA,KAAA,cAAmBJ,EAAMyB,KAAKnB,OAC7B,IACH,OACE,QAACqB,EAAD,WACE,eAAKpB,UAAU,qBAAf,WACE,gBAAMD,GAAG,YAAYC,UAAU,8BAC/B,eAAKC,QAASuB,EAAoBxB,UAAU,OAA5C,UACE,eAAKO,IAAU,OAALd,QAAK,IAALA,GAAA,UAAAA,EAAOyB,YAAP,SAAaO,KAAOhC,EAAMyB,KAAKO,KAAOC,EAAAA,GAAkBjB,IAAI,iBAExE,eAAKT,UAAU,OAAf,WACE,cAAIA,UAAU,OAAd,gBAAsBP,QAAtB,IAAsBA,OAAtB,EAAsBA,EAAOyB,KAAKS,QAClC,aAAG3B,UAAU,YAAb,gBAA0BP,QAA1B,IAA0BA,OAA1B,EAA0BA,EAAOyB,KAAKU,gBAExC,eAAK5B,UAAU,QAAf,UACE,kBAAQC,QAASuB,EAAjB,iEAOV,GAAeK,EAAAA,EAAAA,MAAKN,G,qBCrEPO,GAAwB,kBAAH,mBAAG,CAC/B,+FAD4B,6CAM5BC,EAAAA,EAAAA,IAAW,OAAQ,WANS,mCASxB,2KATwB,YAWtB,0JAXsB,8CAiBtB,oBAjBsB,4BAoBpB,eApBoB,8BAyBtB,iCAzBsB,WA4BlB,6DA5BkB,SA+BpBxC,EAAAA,EAAAA,IAAe,IAAK,EAAG,QA/BH,IAgClB,0CAhCkB,+BAuCxB8B,EAAAA,EAAAA,IAAW,aAAc,UAvCD,UA0CpB,mBA1CoB,cA6CpB,wBA7CoB,8BAmDxBA,EAAAA,EAAAA,IAAW,WAAY,UAnDC,UAsDpB,oBAtDoB,cAyDpB,uBAzDoB,kCA+D1B,eA/D0B,mEAsExB,kBAtEwB,gBAwExBU,EAAAA,EAAAA,IAAW,GAAI,aAxES,eA0EpB,mBA1EoB,wBA8ElB,gBA9EkB,kBAmFtB,wBAnFsB,6DCS5BC,EAA6B,SAAC,GAAe,YAAbC,EAAa,EAAbA,OAC5BC,GAAUC,EAAAA,EAAAA,aAAVD,MACME,GAAcC,EAAAA,EAAAA,IAAM,6BACjBH,QADiB,IACjBA,OADiB,EACjBA,EAAOI,QADU,YACCL,GACjCM,EAAAA,EACAC,EAAAA,IAHMC,KAMFC,GAAkB9C,EAAAA,EAAAA,cAAY,SAACG,EAAaD,GAChDD,EAAO,QAAPA,KAAA,iBAAsBC,EAAtB,YAA8BC,MAC7B,IACH,OACE,QAAC+B,EAAD,WACE,eAAK9B,UAAU,aAAf,WACE,eACEE,MAAgB,OAATkC,QAAS,IAATA,GAAAA,EAAWO,SAAW,GAAK,CAAEC,WAAYC,EAAAA,IAChD5C,QAAS,WAAM,SACJ,OAATmC,QAAS,IAATA,OAAA,EAAAA,EAAWO,WACTD,EAAe,OAACN,QAAD,IAACA,GAAD,UAACA,EAAWO,gBAAZ,aAAC,EAAqB5C,GAAtB,OAA0BqC,QAA1B,IAA0BA,GAA1B,UAA0BA,EAAWO,gBAArC,aAA0B,EAAqB7C,OAElEE,UAAU,sBANZ,WAQE,eAAKA,UAAU,gBAAf,UACE,eAAKO,KAAc,OAAT6B,QAAS,IAATA,GAAA,UAAAA,EAAWO,gBAAX,eAAqBnC,YAAasC,EAAAA,GAAcrC,IAAI,wBAEhE,eAAKT,UAAU,YAAf,WACE,QAAC+C,EAAA,EAAD,KACA,0BACE,2DACA,cAAI/C,UAAU,aAAd,UAAqC,OAAToC,QAAS,IAATA,GAAA,UAAAA,EAAWO,gBAAX,eAAqBxB,QAAS,iEAIhE,eACEjB,MAAgB,OAATkC,QAAS,IAATA,GAAAA,EAAWY,SAAW,GAAK,CAAEJ,WAAYC,EAAAA,IAChD5C,QAAS,WAAM,SACJ,OAATmC,QAAS,IAATA,OAAA,EAAAA,EAAWY,WACTN,EAAe,OAACN,QAAD,IAACA,GAAD,UAACA,EAAWY,gBAAZ,aAAC,EAAqBjD,GAAtB,OAA0BqC,QAA1B,IAA0BA,GAA1B,UAA0BA,EAAWY,gBAArC,aAA0B,EAAqBlD,OAElEE,UAAU,sBANZ,WAQE,eAAKA,UAAU,gBAAf,UACE,eAAKO,KAAc,OAAT6B,QAAS,IAATA,GAAA,UAAAA,EAAWY,gBAAX,eAAqBxC,YAAasC,EAAAA,GAAcrC,IAAI,wBAEhE,eAAKT,UAAU,YAAf,WACE,0BACE,2DACA,cAAIA,UAAU,aAAd,UAAqC,OAAToC,QAAS,IAATA,GAAA,UAAAA,EAAWY,gBAAX,eAAqB7B,QAAS,2DAE5D,QAAC8B,EAAA,EAAD,gBAQZ,GAAepB,EAAAA,EAAAA,MAAKG,GClEPkB,GAAqB,kBAAH,mBAAG,CAAH,uDAIzB7B,EAAAA,EAAAA,IAAW,aAAc,UAJA,oQAed8B,EAAAA,GAfc,Q,kECsF/B,EAxEgC,SAAC,GAA+B,MAA7B1D,EAA6B,EAA7BA,MAAO2D,EAAsB,EAAtBA,gBAClCC,GAAWC,EAAAA,EAAAA,MAD6C,GAEpCC,EAAAA,EAAAA,WAAS,GAA5BC,EAFuD,KAEhDC,EAFgD,KAGtDvC,GAASwC,EAAAA,EAAAA,KAAY,SAACC,GAAD,OAAsBA,EAAMzC,QAAjDA,KAHsD,GAIHmB,EAAAA,EAAAA,IAAM,0BACnD5C,QADmD,IACnDA,OADmD,EACnDA,EAAOM,GAD4C,mBAE/DwC,EAAAA,EACAC,EAAAA,IAHY7B,EAJgD,EAItD8B,KAA4BmB,EAJ0B,EAItCC,YAMxBC,EAAAA,EAAAA,YAAU,WACW,MAAf5C,GAAQzB,IACV,OAAIyB,QAAJ,IAAIA,GAAJ,UAAIA,EAAM6C,iBAAV,OAAI,EAAiBC,MAAK,SAACC,GAAD,OAAYA,EAAE3B,WAAF,OAAc7C,QAAd,IAAcA,OAAd,EAAcA,EAAOM,OACzD0D,GAAS,GAETA,GAAS,MAGZ,CAACvC,EAAMzB,IAEV,IAAMyE,GAAuBtE,EAAAA,EAAAA,cAC3B,SAACuE,GACMjD,EAILkD,IAAAA,MAAA,iBACmBD,EADnB,mBAC4B1E,QAD5B,IAC4BA,OAD5B,EAC4BA,EAAOM,KAChCsE,MAAK,WACU,SAAVF,GACFG,EAAAA,EAAAA,IAAoB,oCAEpBA,EAAAA,EAAAA,IAAoB,+CAEtBlB,IACAC,GAASkB,EAAAA,EAAAA,UATb,OAWS,SAACC,GAEN,MADAC,EAAAA,EAAAA,IAAkBD,GACZA,MAhBRC,EAAAA,EAAAA,IAAkB,8DAmBtB,CAACvD,EAAMzB,IAET,OACE,QAACyD,EAAD,YACE,gBAAMnD,GAAG,UAAUC,UAAU,8BAC7B,cAAIA,UAAU,iBAAd,WACE,yBACE,QAACU,EAAA,EAAD,KACA,gBAAMV,UAAU,QAAhB,gBAAyBW,QAAzB,IAAyBA,OAAzB,EAAyBA,EAAUC,UACnC,8CAEF,cACEX,QACEuD,EAAQ,kBAAMU,EAAqB,YAAa,kBAAMA,EAAqB,SAE7ElE,UAAWwD,EAAQ,QAAU,GAJ/B,UAMGA,GAAQ,QAACkB,EAAA,EAAD,KAAkB,QAAC7D,EAAA,EAAD,KAC3B,gBAAMb,UAAU,QAAhB,gBAAyBP,QAAzB,IAAyBA,GAAzB,UAAyBA,EAAOqB,iBAAhC,aAAyB,EAAkBF,UAC3C,uDAGJ,QAAC+D,EAAA,EAAD,CAAaf,mBAAoBA,EAAoBgB,SAAS,IAnBhE,OAoBGjE,QApBH,IAoBGA,OApBH,EAoBGA,EAAUkE,KAAI,SAACZ,EAAGa,GACjB,OAAO,QAACC,EAAA,EAAD,CAASnB,mBAAoBA,EAA4BoB,QAASf,GAAZa,U,+kBC1DrE,IAAMG,GAAmB,cAAH,oBAAG,CAAH,2CAGhB5D,EAAAA,EAAAA,IAAW,SAAU,UAHL,uQAQZA,EAAAA,EAAAA,IAAW,SAAU,UART,oG,KAyKtB,EAhJ0B,SAAC,GAAqC,IAAnC6D,EAAmC,EAAnCA,eAAgBC,EAAmB,EAAnBA,aACnCjD,GAAUC,EAAAA,EAAAA,aAAVD,MADsD,GAEtCqB,EAAAA,EAAAA,UAAS,IAA1B6B,EAFuD,KAEjDC,EAFiD,QAGhC9B,EAAAA,EAAAA,WAAS,GAAhC+B,EAHuD,KAG9CC,EAH8C,KAItDrE,GAASwC,EAAAA,EAAAA,KAAY,SAACC,GAAD,OAAsBA,EAAMzC,QAAjDA,KAJsD,GAMTmB,EAAAA,EAAAA,IAAM,wBAC/CH,QAD+C,IAC/CA,OAD+C,EAC/CA,EAAOpC,KADwC,mBAChCoC,QADgC,IAChCA,OADgC,EAChCA,EAAOI,QADyB,iBACT8C,GAChD7C,EAAAA,EAFyD,GAIvDiD,YAAaL,GACV3C,EAAAA,KALO/C,EANgD,EAMtDgD,KAAyBW,EAN6B,EAMzCS,WANyC,GAc3B4B,EAAAA,EAAAA,KACjC,SAACC,GAAD,4BAA0BA,EAAQ,EAAlC,oBAAmD,OAALxD,QAAK,IAALA,OAAA,EAAAA,EAAOyD,SAAU,MAC/DpD,EAAAA,EAF+C,GAI7CiD,YAAaN,GACV1C,EAAAA,KALOoD,EAdgD,EActDnD,KAAeoD,EAduC,EAcvCA,SASvB/B,EAAAA,EAAAA,YAAU,WACJgC,aAAaC,QAAQ,sBACvBV,EAAQS,aAAaC,QAAQ,wBAE9B,KAEHjC,EAAAA,EAAAA,YAAU,WACJrE,GACmBuG,SAASC,iBAC5B,+DAEaC,SAAQ,SAACjC,EAAGa,GACzB,IAAMqB,EAAOH,SAASI,cAAc,QACpCD,EAAKE,aAAa,KAAlB,iBAAkCvB,EAAI,IACtCqB,EAAKG,UAAUC,IAAI,4BACnBtC,EAAEqC,UAAUC,IAAI,wBAChBtC,EAAEuC,YAAYL,QAGjB,CAAC1G,KAEJqE,EAAAA,EAAAA,YAAU,WAAM,OACN,OAAJ5C,QAAI,IAAJA,OAAA,EAAAA,EAAMnB,OAAN,OAAaN,QAAb,IAAaA,GAAb,UAAaA,EAAOyB,YAApB,aAAa,EAAanB,IAC5BwF,GAAW,GAEXA,GAAW,KAEZ,CAACrE,EAAMzB,IAEV,IAAMgH,GAAiB7G,EAAAA,EAAAA,cAAY,WAC7BsB,GAAQoE,GACVzF,EAAO,QAAPA,KAAA,kCAAgCJ,QAAhC,IAAgCA,OAAhC,EAAgCA,EAAOK,KAAvC,2BAAuDL,QAAvD,IAAuDA,OAAvD,EAAuDA,EAAOM,OAE/D,CAACmB,EAAMoE,IAEJoB,GAAuB9G,EAAAA,EAAAA,cAAY,WACnCsB,GAAQoE,GACVlB,IAAAA,OAAA,wBACoB3E,QADpB,IACoBA,OADpB,EACoBA,EAAOM,KACxBsE,MAAK,YACJC,EAAAA,EAAAA,IAAoB,iGACpBzE,EAAO,QAAPA,KAAA,aAJJ,OAMS,SAAC2E,GAEN,MADAC,EAAAA,EAAAA,IAAkBD,GACZA,OAGX,CAACtD,EAAMoE,EAAS7F,IAEnB,OACE,yBACE,QAAC,UAAD,WACE,kCAAQA,QAAR,IAAQA,OAAR,EAAQA,EAAO0B,MAAf,wBAEF,QAAC8D,EAAD,WACE,QAAC0B,EAAA,EAAD,WACGlH,IACC,yBACE,QAACmH,EAAA,EAAD,CAAcnH,MAAOA,IACpB6F,IACC,yBACE,cAAItF,UAAU,aAAd,gFACA,eAAKA,UAAU,uBAAf,WACE,kBAAQC,QAASwG,EAAgBzG,UAAU,WAA3C,WACE,QAAC6G,EAAA,EAAD,IADF,sCAIA,kBACE5G,QAAS,kBACP6G,EAAAA,EAAAA,GACEJ,EACA,+EACA,0CAGJ1G,UAAU,aARZ,WAUE,QAAC+G,EAAA,EAAD,IAVF,4CAgBN,cAAI/G,UAAU,aAAd,8CACS,gCAAOP,QAAP,IAAOA,OAAP,EAAOA,EAAOuH,aAEvB,QAACC,EAAA,EAAD,CAAYC,IAAG,OAAEzH,QAAF,IAAEA,OAAF,EAAEA,EAAOyH,IAAKC,IAAG,OAAE1H,QAAF,IAAEA,OAAF,EAAEA,EAAO0H,OACzC,QAAC,IAAD,KACA,mBAASnH,UAAU,qBAAnB,WACE,gBAAMD,GAAG,YAAYC,UAAU,8BAC9BoH,EAAAA,EAAAA,IAAe,OAAC3H,QAAD,IAACA,OAAD,EAACA,EAAO4H,aAE1B,QAAC,EAAD,CAAa5H,MAAOA,KACpB,QAAC,EAAD,CAAgBwC,OAAM,OAAExC,QAAF,IAAEA,OAAF,EAAEA,EAAOyB,KAAKnB,MACpC,QAAC,EAAD,CAAaqD,gBAAiBA,EAAiB3D,MAAOA,QAG1D,eAAKS,MAAO,CAAEoH,OAAQ,WACtB,QAACC,EAAA,EAAD,CAAkBC,KAAM,EAAGC,IAAI,OAAO5B,QAASA,EAASD,QAASA,c,uGCrKrE8B,EAA0B,SAACF,EAAcC,GAAf,OAA+BE,EAAAA,EAAAA,IAA9B,2OAc7B5F,EAAAA,EAAAA,IAAW0F,EAAD,iBAAgBD,EAAhB,UAdkB,SAuB1BD,EAA+B,SAAC,GAAoC,MAAlC3B,EAAkC,EAAlCA,QAAS4B,EAAyB,EAAzBA,KAAMC,EAAmB,EAAnBA,IAAK5B,EAAc,EAAdA,QAAc,GAC9BtC,EAAAA,EAAAA,WAAS,GAA5CqE,EADiE,KAClDC,EADkD,KAElEC,GAAMC,EAAAA,EAAAA,QAAO,MACbC,GAAYC,EAAAA,EAAAA,GAAYH,GACxBI,EAAmC,KAAlB,OAAPtC,QAAO,IAAPA,GAAA,UAAAA,EAAU,UAAV,eAAchF,SAE9BkD,EAAAA,EAAAA,YAAU,WACK,MAAT8B,GACFiC,GAAiB,UAAAjC,EAAQA,EAAQhF,OAAS,UAAzB,eAA6BA,QAAS,MAExD,CAACgF,KACJ9B,EAAAA,EAAAA,YAAU,YACJkE,GAAcJ,GAAkBM,GAClCrC,GAAQ,SAACsC,GAAD,OAAUA,EAAO,KAAG9D,MAAK,iBAElC,CAAC2D,IAEJ,IAAMI,EAAcxC,EAAO,OAAGA,QAAH,IAAGA,OAAH,EAAGA,EAASyC,OAAS,GAEhD,OACE,yBACE,eAAKV,IAAKD,EAAwBF,EAAMC,GAAxC,WACE,gBAAM1H,GAAG,eAAeC,UAAU,6BADpC,OAEGoI,QAFH,IAEGA,OAFH,EAEGA,EAAavD,KAAI,SAACZ,EAAWa,GAC5B,OAAO,QAAC,IAAD,CAA2BrF,MAAOwE,GAAVa,UAGnC,eAAKgD,IAAKA,QAKhB,KAAejG,EAAAA,EAAAA,MAAK0F,I,uBC9Dfe,OAAOC,SAAWD,OAAOC,UAAY,IAAIC,KAAK,CAC7C,0BACA,WACE,OAAO,EAAQ,Y","sources":["webpack://_N_E/./components/Cards/ArticleColumnCard/styles.tsx","webpack://_N_E/./components/Cards/ArticleColumnCard/index.tsx","webpack://_N_E/./components/Post/PostProfile.tsx","webpack://_N_E/./components/Post/PostPagination/styles.tsx","webpack://_N_E/./components/Post/PostPagination/index.tsx","webpack://_N_E/./components/Post/PostComment/styles.tsx","webpack://_N_E/./components/Post/PostComment/index.tsx","webpack://_N_E/./pages/story/[code]/[storyId]/index.tsx","webpack://_N_E/./sections/StoryPage/StoryArticleList.tsx","webpack://_N_E/?d44b"],"sourcesContent":["import styled from \"@emotion/styled\";\r\nimport { ELLIPSIS_STYLE, FLEX_STYLE, GRAY_COLOR, SM_SIZE } from \"config\";\r\nimport tw from \"twin.macro\";\r\n\r\nexport const ArticleColumnCardWrapper = styled.article`\r\n  ${tw`bg-white cursor-pointer pb-8 shadow-md`}\r\n  transition:0.3s all;\r\n  &:hover {\r\n    ${tw`shadow-lg`}\r\n    .image-wrapper {\r\n      img {\r\n        transform: scale(1.15);\r\n      }\r\n    }\r\n  }\r\n  .image-wrapper {\r\n    ${tw`mb-4 overflow-hidden relative`}\r\n    img {\r\n      ${tw`w-full`}\r\n      height:180px;\r\n      transition: 0.3s all;\r\n    }\r\n    .like-comment {\r\n      ${tw`absolute bottom-2 right-2 bg-white py-1 px-2 opacity-50 rounded-xl`}\r\n      li {\r\n        ${tw`p-1 cursor-pointer`}\r\n        .count {\r\n          margin: 0 0.15rem;\r\n        }\r\n        .anticon {\r\n          font-size: 1.2rem;\r\n        }\r\n      }\r\n    }\r\n  }\r\n  .box-card-info {\r\n    padding: 0 1rem;\r\n  }\r\n  p {\r\n    ${tw`m-4 mb-0 overflow-hidden`};\r\n    ${tw`text-sm font-bold`}\r\n    ${ELLIPSIS_STYLE(1.7, 2, \"46px\")}\r\n  }\r\n  @media (max-width: ${SM_SIZE}) {\r\n    ${tw`pb-6 mb-3`}\r\n    p {\r\n      ${ELLIPSIS_STYLE(1.7, 2, \"auto\")}\r\n    }\r\n  }\r\n`;\r\n","import { CommentOutlined, HeartOutlined } from \"@ant-design/icons\";\r\nimport NameSpace from \"@components/NameSpace\";\r\nimport React, { FC, useCallback } from \"react\";\r\nimport { ArticleColumnCardWrapper } from \"./styles\";\r\nimport { IStory } from \"@typings/db\";\r\nimport router from \"next/router\";\r\n\r\ninterface IProps {\r\n  story: IStory;\r\n  isMain?: boolean;\r\n}\r\n\r\nconst ArticleColumnCard: FC<IProps> = ({ story, isMain }) => {\r\n  const onClickArticleCard = useCallback(() => {\r\n    router.push(`/story/${story?.code}/${story?.id}`);\r\n  }, []);\r\n\r\n  return (\r\n    <ArticleColumnCardWrapper\r\n      className=\"article-card-column-wrapper\"\r\n      onClick={onClickArticleCard}\r\n      style={isMain ? { boxShadow: \"none\", borderRadius: \"15px\" } : {}}\r\n    >\r\n      <div\r\n        style={isMain ? { borderTopLeftRadius: \"15px\", borderTopRightRadius: \"15px\" } : {}}\r\n        className=\"image-wrapper\"\r\n      >\r\n        <img\r\n          style={isMain ? { borderTopLeftRadius: \"15px\", borderTopRightRadius: \"15px\" } : {}}\r\n          src={story?.thumbnail}\r\n          alt=\"story-image\"\r\n        />\r\n        <ul className=\"like-comment\">\r\n          <li>\r\n            <CommentOutlined />\r\n            <span className=\"count\">{story?.comments?.length}</span>\r\n          </li>\r\n          <li>\r\n            <HeartOutlined />\r\n            <span className=\"count\">{story?.likedUser?.length}</span>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n      <div className=\"box-card-info\">\r\n        <NameSpace date={story?.createdAt} user={story?.user} />\r\n      </div>\r\n      <p>{story?.title}</p>\r\n    </ArticleColumnCardWrapper>\r\n  );\r\n};\r\n\r\nexport default ArticleColumnCard;\r\n","import React, { FC, memo, useCallback } from \"react\";\r\nimport { DEFAULT_ICON_URL, MD_SIZE, SM_SIZE } from \"config\";\r\nimport { IStory } from \"@typings/db\";\r\nimport router from \"next/router\";\r\nimport tw from \"twin.macro\";\r\nimport styled from \"@emotion/styled/macro\";\r\nimport { FLEX_STYLE } from \"config\";\r\n\r\nconst PostProfileWrapper = styled.section`\r\n  ${tw`mt-32 mb-16 w-full`}\r\n  ${FLEX_STYLE(\"center\", \"center\")};\r\n  .owner-info-wrapper {\r\n    ${FLEX_STYLE(\"center\", \"center\")};\r\n    ${tw`flex-col w-2/5 relative`}\r\n  }\r\n  .icon {\r\n    ${tw`cursor-pointer`}\r\n    img {\r\n      ${tw`w-20 h-20 rounded-full`}\r\n    }\r\n  }\r\n  .info {\r\n    .name {\r\n      ${tw`mt-4 text-center font-bold`}\r\n    }\r\n    .introduce {\r\n      ${tw`mt-3 text-xs leading-6 text-center`}\r\n    }\r\n  }\r\n  .links {\r\n    ${tw`mt-3`}\r\n    button {\r\n      ${tw`py-2 px-1.5 rounded-md hover:bg-gray-100`}\r\n    }\r\n  }\r\n  @media (max-width: ${MD_SIZE}) {\r\n    .owner-info-wrapper {\r\n      ${tw`w-4/5`}\r\n    }\r\n  }\r\n  @media (max-width: ${SM_SIZE}) {\r\n    .owner-info-wrapper {\r\n      ${tw`w-full`}\r\n    }\r\n  }\r\n`;\r\ninterface IProps {\r\n  story: IStory;\r\n}\r\n\r\nconst PostProfile: FC<IProps> = ({ story }) => {\r\n  const onClickGotoProfile = useCallback(() => {\r\n    router.push(`/me/${story.user.id}`);\r\n  }, []);\r\n  return (\r\n    <PostProfileWrapper>\r\n      <div className=\"owner-info-wrapper\">\r\n        <span id=\"user_info\" className=\"anchor-offset-controller\" />\r\n        <div onClick={onClickGotoProfile} className=\"icon\">\r\n          <img src={story?.user?.icon ? story.user.icon : DEFAULT_ICON_URL} alt=\"user_icon\" />\r\n        </div>\r\n        <div className=\"info\">\r\n          <h2 className=\"name\">{story?.user.name}</h2>\r\n          <p className=\"introduce\">{story?.user.introduce}</p>\r\n        </div>\r\n        <div className=\"links\">\r\n          <button onClick={onClickGotoProfile}>프로필 구경가기</button>\r\n        </div>\r\n      </div>\r\n    </PostProfileWrapper>\r\n  );\r\n};\r\n\r\nexport default memo(PostProfile);\r\n","import styled from \"@emotion/styled/macro\";\r\nimport { ELLIPSIS_STYLE, FLEX_STYLE, GRID_STYLE, MD_SIZE } from \"config\";\r\nimport tw from \"twin.macro\";\r\n\r\nexport const PostPaginationWrapper = styled.section`\r\n  ${tw`w-2/3 mx-auto mt-4 mb-20`}\r\n  .ant-divider {\r\n    margin: 1rem 0;\r\n  }\r\n  .pagination {\r\n    ${GRID_STYLE(\"1rem\", \"1fr 1fr\")};\r\n    .side-post {\r\n      transition: 0.3s all;\r\n      ${tw`cursor-pointer shadow-md`}\r\n      &:hover {\r\n        ${tw`shadow-lg`}\r\n        img {\r\n          transform: scale(1.1);\r\n        }\r\n      }\r\n      .image-wrapper {\r\n        ${tw`overflow-hidden`}\r\n        img {\r\n          transition: 0.3s all;\r\n          ${tw`w-full`}\r\n          height:180px;\r\n        }\r\n      }\r\n      .post-desc {\r\n        ${tw`w-full p-5`}\r\n        div {\r\n          h3 {\r\n            ${tw`text-xs mb-2`}\r\n          }\r\n          h4 {\r\n            ${ELLIPSIS_STYLE(1.7, 2, \"46px\")}\r\n            ${tw`mb-1 font-bold`}\r\n          }\r\n        }\r\n      }\r\n    }\r\n    .prev-post {\r\n      .post-desc {\r\n        ${FLEX_STYLE(\"flex-start\", \"center\")};\r\n        h3,\r\n        h4 {\r\n          ${tw`text-left`}\r\n        }\r\n        .anticon {\r\n          ${tw`mr-3`}\r\n        }\r\n      }\r\n    }\r\n    .next-post {\r\n      .post-desc {\r\n        ${FLEX_STYLE(\"flex-end\", \"center\")};\r\n        h3,\r\n        h4 {\r\n          ${tw`text-right`}\r\n        }\r\n        .anticon {\r\n          ${tw`ml-3`}\r\n        }\r\n      }\r\n    }\r\n  }\r\n  @media (max-width: 750px) {\r\n    ${tw`w-full`}\r\n    .pagination {\r\n      gap: 0.5rem;\r\n    }\r\n  }\r\n  @media (max-width: 480px) {\r\n    .pagination {\r\n      ${tw`block`}\r\n      .side-post {\r\n        ${GRID_STYLE(\"\", \"1fr 1.5fr\")};\r\n        .post-desc {\r\n          ${tw`p-2`}\r\n        }\r\n        .image-wrapper {\r\n          img {\r\n            ${tw`h-32`}\r\n          }\r\n        }\r\n      }\r\n      .prev-post {\r\n        ${tw`mb-2`}\r\n        direction: rtl;\r\n        .post-desc {\r\n          flex-direction: row-reverse;\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import React, { FC, memo, useCallback, useState } from \"react\";\r\nimport { LeftOutlined, RightOutlined } from \"@ant-design/icons\";\r\nimport { IStory } from \"@typings/db\";\r\nimport router, { useRouter } from \"next/router\";\r\nimport { PostPaginationWrapper } from \"./styles\";\r\nimport useSWR from \"swr\";\r\nimport fetcher from \"utils/fetcher\";\r\nimport { GRAY_COLOR, noRevalidate, NO_IMAGE_URL } from \"config\";\r\n\r\ninterface IProps {\r\n  userId: number;\r\n}\r\n\r\nconst PostPagination: FC<IProps> = ({ userId }) => {\r\n  const { query } = useRouter();\r\n  const { data: sidePosts } = useSWR<{ prevPost: IStory; nextPost: IStory }>(\r\n    `/story/side/${query?.storyId}/${userId}`,\r\n    fetcher,\r\n    noRevalidate\r\n  );\r\n\r\n  const onClickStoryBtn = useCallback((id?: number, code?: string) => {\r\n    router.push(`/story/${code}/${id}`);\r\n  }, []);\r\n  return (\r\n    <PostPaginationWrapper>\r\n      <div className=\"pagination\">\r\n        <div\r\n          style={sidePosts?.prevPost ? {} : { background: GRAY_COLOR }}\r\n          onClick={() => {\r\n            sidePosts?.prevPost &&\r\n              onClickStoryBtn(sidePosts?.prevPost?.id, sidePosts?.prevPost?.code);\r\n          }}\r\n          className=\"side-post prev-post\"\r\n        >\r\n          <div className=\"image-wrapper\">\r\n            <img src={sidePosts?.prevPost?.thumbnail || NO_IMAGE_URL} alt=\"pagination_image\" />\r\n          </div>\r\n          <div className=\"post-desc\">\r\n            <LeftOutlined />\r\n            <div>\r\n              <h3>이전연대기</h3>\r\n              <h4 className=\"post-title\">{sidePosts?.prevPost?.title || \"연대기가 없습니다.\"}</h4>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div\r\n          style={sidePosts?.nextPost ? {} : { background: GRAY_COLOR }}\r\n          onClick={() => {\r\n            sidePosts?.nextPost &&\r\n              onClickStoryBtn(sidePosts?.nextPost?.id, sidePosts?.nextPost?.code);\r\n          }}\r\n          className=\"side-post next-post\"\r\n        >\r\n          <div className=\"image-wrapper\">\r\n            <img src={sidePosts?.nextPost?.thumbnail || NO_IMAGE_URL} alt=\"pagination_image\" />\r\n          </div>\r\n          <div className=\"post-desc\">\r\n            <div>\r\n              <h3>다음연대기</h3>\r\n              <h4 className=\"post-title\">{sidePosts?.nextPost?.title || \"연대기가 없습니다.\"}</h4>\r\n            </div>\r\n            <RightOutlined />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </PostPaginationWrapper>\r\n  );\r\n};\r\n\r\nexport default memo(PostPagination);\r\n","import styled from \"@emotion/styled\";\r\nimport { FLEX_STYLE, RED_COLOR } from \"config\";\r\nimport tw from \"twin.macro\";\r\n\r\nexport const PostCommentWrapper = styled.section`\r\n  position: relative;\r\n  .comment-header {\r\n    ${tw`mt-12`}\r\n    ${FLEX_STYLE(\"flex-start\", \"center\")};\r\n    ${tw`text-xl font-bold`}\r\n    li {\r\n      ${tw`p-2 cursor-pointer hover:bg-gray-100 rounded-xl`}\r\n      .anticon,\r\n      .count {\r\n        margin-right: 0.5rem;\r\n      }\r\n    }\r\n    .liked {\r\n      .anticon {\r\n        color: ${RED_COLOR};\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import React, { FC, useCallback, useEffect, useState } from \"react\";\r\nimport { PostCommentWrapper } from \"./styles\";\r\nimport { IComment, IStory } from \"@typings/db\";\r\nimport { noRevalidate, toastErrorMessage, toastSuccessMessage } from \"config\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { RootState } from \"slices\";\r\nimport { CommentOutlined, HeartFilled, HeartOutlined } from \"@ant-design/icons\";\r\nimport CommentForm from \"@components/Comments/CommentForm\";\r\nimport Comment from \"@components/Comments/Comment\";\r\nimport axios from \"axios\";\r\nimport { getUserInfoAction } from \"actions/user\";\r\nimport fetcher from \"utils/fetcher\";\r\nimport useSWR from \"swr\";\r\ninterface IProps {\r\n  story: IStory;\r\n  revalidateStory: () => void;\r\n}\r\n\r\nconst PostComment: FC<IProps> = ({ story, revalidateStory }) => {\r\n  const dispatch = useDispatch();\r\n  const [liked, setLiked] = useState(false);\r\n  const { user } = useSelector((state: RootState) => state.user);\r\n  const { data: comments, revalidate: revalidateComments } = useSWR<IComment[]>(\r\n    `/comment/${story?.id}?postType=story`,\r\n    fetcher,\r\n    noRevalidate\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (user && story) {\r\n      if (user?.likeStory?.find((v: any) => v.storyId === story?.id)) {\r\n        setLiked(true);\r\n      } else {\r\n        setLiked(false);\r\n      }\r\n    }\r\n  }, [user, story]);\r\n\r\n  const onClickLikeOrDisLike = useCallback(\r\n    (value: string) => {\r\n      if (!user) {\r\n        toastErrorMessage(\"로그인이 필요합니다.\");\r\n        return;\r\n      }\r\n      axios\r\n        .patch(`/story/${value}/${story?.id}`)\r\n        .then(() => {\r\n          if (value === \"like\") {\r\n            toastSuccessMessage(\"좋아요!💓\");\r\n          } else {\r\n            toastSuccessMessage(\"좋아요 취소💔\");\r\n          }\r\n          revalidateStory();\r\n          dispatch(getUserInfoAction());\r\n        })\r\n        .catch((error) => {\r\n          toastErrorMessage(error);\r\n          throw error;\r\n        });\r\n    },\r\n    [user, story]\r\n  );\r\n  return (\r\n    <PostCommentWrapper>\r\n      <span id=\"comment\" className=\"anchor-offset-controller\" />\r\n      <ul className=\"comment-header\">\r\n        <li>\r\n          <CommentOutlined />\r\n          <span className=\"count\">{comments?.length}</span>\r\n          <span>댓글</span>\r\n        </li>\r\n        <li\r\n          onClick={\r\n            liked ? () => onClickLikeOrDisLike(\"dislike\") : () => onClickLikeOrDisLike(\"like\")\r\n          }\r\n          className={liked ? \"liked\" : \"\"}\r\n        >\r\n          {liked ? <HeartFilled /> : <HeartOutlined />}\r\n          <span className=\"count\">{story?.likedUser?.length}</span>\r\n          <span>좋아요</span>\r\n        </li>\r\n      </ul>\r\n      <CommentForm revalidateComments={revalidateComments} isStory={true} />\r\n      {comments?.map((v, i) => {\r\n        return <Comment revalidateComments={revalidateComments} key={i} comment={v} />;\r\n      })}\r\n    </PostCommentWrapper>\r\n  );\r\n};\r\n\r\nexport default PostComment;\r\n","import React, { FC, useCallback, useEffect, useRef, useState } from \"react\";\r\nimport styled from \"@emotion/styled\";\r\nimport { FLEX_STYLE, noRevalidate, toastErrorMessage, toastSuccessMessage } from \"config\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { RootState } from \"slices\";\r\nimport router, { useRouter } from \"next/router\";\r\nimport useSWR, { useSWRInfinite } from \"swr\";\r\nimport fetcher from \"utils/fetcher\";\r\nimport { IStory } from \"@typings/db\";\r\nimport { Divider } from \"antd\";\r\nimport { wrapper } from \"configureStore\";\r\nimport axios from \"axios\";\r\nimport { getUserInfoAction } from \"actions/user\";\r\nimport { DeleteOutlined, EditOutlined } from \"@ant-design/icons\";\r\nimport { toastConfirmMessage } from \"@components/ConfirmToastify\";\r\nimport tw from \"twin.macro\";\r\nimport PostLayout from \"@layout/PostLayout\";\r\nimport StoryArticleList from \"@sections/StoryPage/StoryArticleList\";\r\nimport ReactHtmlParser from \"react-html-parser\";\r\nimport PostThubnail from \"@components/Post/PostThubnail\";\r\nimport CountryMap from \"@components/Maps/CountryMap\";\r\nimport PostProfile from \"@components/Post/PostProfile\";\r\nimport PostPagination from \"@components/Post/PostPagination\";\r\nimport PostComment from \"@components/Post/PostComment\";\r\nimport Head from \"next/head\";\r\n\r\nconst StoryPostWrapper = styled.div`\r\n  padding-top: 6rem;\r\n  .story-manage-wrapper {\r\n    ${FLEX_STYLE(\"center\", \"center\")};\r\n    button {\r\n      ${tw`py-2 px-4 hover:bg-gray-100 rounded-xl`}\r\n      .anticon {\r\n        ${tw`mb-2 text-2xl`}\r\n        ${FLEX_STYLE(\"center\", \"center\")};\r\n      }\r\n    }\r\n  }\r\n  .post-content {\r\n    ${tw`pb-16 relative`}\r\n  }\r\n  .main-story-article {\r\n    user-select: none;\r\n  }\r\n`;\r\n\r\ninterface IProps {\r\n  initialStories: IStory[][];\r\n  initialStory: IStory;\r\n}\r\n\r\nconst index: FC<IProps> = ({ initialStories, initialStory }) => {\r\n  const { query } = useRouter();\r\n  const [uuid, setUUID] = useState(\"\");\r\n  const [isOwner, setIsOwner] = useState(false);\r\n  const { user } = useSelector((state: RootState) => state.user);\r\n\r\n  const { data: story, revalidate: revalidateStory } = useSWR<IStory>(\r\n    `/story/${query?.code}/${query?.storyId}?uuid=${uuid}`,\r\n    fetcher,\r\n    {\r\n      initialData: initialStory,\r\n      ...noRevalidate,\r\n    }\r\n  );\r\n  const { data: stories, setSize } = useSWRInfinite<IStory[]>(\r\n    (index) => `/story?page=${index + 1}&filter=${query?.filter || \"\"}`,\r\n    fetcher,\r\n    {\r\n      initialData: initialStories,\r\n      ...noRevalidate,\r\n    }\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (localStorage.getItem(\"client_identifier\")) {\r\n      setUUID(localStorage.getItem(\"client_identifier\")!);\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (story) {\r\n      let contentHeaders = document.querySelectorAll(\r\n        \".post-content > h1 , .post-content > h2 ,.post-content > h3\"\r\n      );\r\n      contentHeaders.forEach((v, i) => {\r\n        const span = document.createElement(\"span\");\r\n        span.setAttribute(\"id\", `header_${i + 1}`);\r\n        span.classList.add(\"anchor-offset-controller\");\r\n        v.classList.add(\"anchor-offset-parent\");\r\n        v.appendChild(span);\r\n      });\r\n    }\r\n  }, [story]);\r\n\r\n  useEffect(() => {\r\n    if (user?.id === story?.user?.id) {\r\n      setIsOwner(true);\r\n    } else {\r\n      setIsOwner(false);\r\n    }\r\n  }, [user, story]);\r\n\r\n  const onClickEditBtn = useCallback(() => {\r\n    if (user && isOwner) {\r\n      router.push(`/story/post?code=${story?.code}&storyId=${story?.id}`);\r\n    }\r\n  }, [user, isOwner]);\r\n\r\n  const onClickConfirmDelete = useCallback(() => {\r\n    if (user && isOwner) {\r\n      axios\r\n        .delete(`/story/${story?.id}`)\r\n        .then(() => {\r\n          toastSuccessMessage(\"연대기를 성공적으로 삭제했습니다.\");\r\n          router.push(`/story`);\r\n        })\r\n        .catch((error) => {\r\n          toastErrorMessage(error);\r\n          throw error;\r\n        });\r\n    }\r\n  }, [user, isOwner, story]);\r\n\r\n  return (\r\n    <>\r\n      <Head>\r\n        <title>{story?.title} - Fall IN Asia</title>\r\n      </Head>\r\n      <StoryPostWrapper>\r\n        <PostLayout>\r\n          {story && (\r\n            <>\r\n              <PostThubnail story={story} />\r\n              {isOwner && (\r\n                <>\r\n                  <h2 className=\"main-title\">연대기 관리 (작성자 전용)</h2>\r\n                  <div className=\"story-manage-wrapper\">\r\n                    <button onClick={onClickEditBtn} className=\"edit-btn\">\r\n                      <EditOutlined />\r\n                      연대기 수정\r\n                    </button>\r\n                    <button\r\n                      onClick={() =>\r\n                        toastConfirmMessage(\r\n                          onClickConfirmDelete,\r\n                          \"정말 이 연대기를 삭제할까요?\",\r\n                          \"삭제해주세요.\"\r\n                        )\r\n                      }\r\n                      className=\"delete-btn\"\r\n                    >\r\n                      <DeleteOutlined />\r\n                      연대기 삭제\r\n                    </button>\r\n                  </div>\r\n                </>\r\n              )}\r\n              <h2 className=\"main-title\">\r\n                연대기 위치 <span>{story?.region}</span>\r\n              </h2>\r\n              <CountryMap lat={story?.lat} lng={story?.lng} />\r\n              <Divider />\r\n              <article className=\"main-story-article\">\r\n                <span id=\"main_post\" className=\"anchor-offset-controller\" />\r\n                {ReactHtmlParser(story?.content as string)}\r\n              </article>\r\n              <PostProfile story={story} />\r\n              <PostPagination userId={story?.user.id} />\r\n              <PostComment revalidateStory={revalidateStory} story={story} />\r\n            </>\r\n          )}\r\n          <div style={{ height: \"3rem\" }} />\r\n          <StoryArticleList grid={3} gap=\"1rem\" setSize={setSize} stories={stories} />\r\n        </PostLayout>\r\n      </StoryPostWrapper>\r\n    </>\r\n  );\r\n};\r\n\r\nexport const getServerSideProps = wrapper.getServerSideProps((store) => async ({ req, params }) => {\r\n  const cookie = req ? req.headers.cookie : \"\";\r\n  axios.defaults.headers.Cookie = \"\";\r\n  if (req && cookie) {\r\n    axios.defaults.headers.Cookie = cookie;\r\n  }\r\n  await store.dispatch(getUserInfoAction());\r\n  const initialStory = await fetcher(`/story/${params?.code}/${params?.storyId}`);\r\n  let initialStories = await fetcher(`/story?code=${params?.code}&page=1`);\r\n  initialStories = [initialStories];\r\n  return {\r\n    props: { initialStory, initialStories },\r\n  };\r\n});\r\n\r\nexport default index;\r\n","import { IStory } from \"@typings/db\";\r\nimport React, { FC, memo, useCallback, useEffect, useState } from \"react\";\r\nimport { useRef } from \"react\";\r\nimport useOnScreen from \"@hooks/useOnScreen\";\r\nimport ArticleColumnCard from \"@components/Cards/ArticleColumnCard\";\r\nimport { GRID_STYLE, SM_SIZE } from \"config\";\r\nimport tw from \"twin.macro\";\r\nimport { css } from \"@emotion/react\";\r\nconst StoryArticleListWrapper = (grid: number, gap: string) => css`\r\n  @media (max-width: 1000px) {\r\n    grid-template-columns: repeat(3, 1fr);\r\n    gap: 0.5rem;\r\n  }\r\n  @media (max-width: 750px) {\r\n    grid-template-columns: repeat(2, 1fr);\r\n    gap: 0.5rem;\r\n  }\r\n  @media (max-width: 460px) {\r\n    display: block;\r\n  }\r\n  ${tw`relative`}\r\n  transition:0.3s all;\r\n  ${GRID_STYLE(gap, `repeat(${grid},1fr)`)};\r\n`;\r\ninterface IProps {\r\n  stories: IStory[][] | undefined;\r\n  setSize: (f: (size: number) => number) => Promise<IStory[][] | undefined>;\r\n  grid: number;\r\n  gap: string;\r\n}\r\n\r\nconst StoryArticleList: FC<IProps> = ({ stories, grid, gap, setSize }) => {\r\n  const [isReachingEnd, setIsReachingEnd] = useState(true);\r\n  const ref = useRef(null);\r\n  const isVisible = useOnScreen(ref);\r\n  const isEmpty = stories?.[0]?.length === 0;\r\n\r\n  useEffect(() => {\r\n    if (stories) {\r\n      setIsReachingEnd(stories[stories.length - 1]?.length < 10);\r\n    }\r\n  }, [stories]);\r\n  useEffect(() => {\r\n    if (isVisible && !isReachingEnd && !isEmpty) {\r\n      setSize((prev) => prev + 1).then(() => {});\r\n    }\r\n  }, [isVisible]);\r\n\r\n  const storiesData = stories ? stories?.flat() : [];\r\n\r\n  return (\r\n    <>\r\n      <div css={StoryArticleListWrapper(grid, gap)}>\r\n        <span id=\"article_list\" className=\"anchor-offset-controller\" />\r\n        {storiesData?.map((v: IStory, i) => {\r\n          return <ArticleColumnCard key={i} story={v} />;\r\n        })}\r\n      </div>\r\n      <div ref={ref} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default memo(StoryArticleList);\r\n","\n    (window.__NEXT_P = window.__NEXT_P || []).push([\n      \"/story/[code]/[storyId]\",\n      function () {\n        return require(\"private-next-pages/story/[code]/[storyId]/index.tsx\");\n      }\n    ]);\n  "],"names":["ArticleColumnCardWrapper","ELLIPSIS_STYLE","SM_SIZE","story","isMain","onClickArticleCard","useCallback","router","code","id","className","onClick","style","boxShadow","borderRadius","borderTopLeftRadius","borderTopRightRadius","src","thumbnail","alt","CommentOutlined","comments","length","HeartOutlined","likedUser","NameSpace","date","createdAt","user","title","PostProfileWrapper","FLEX_STYLE","MD_SIZE","PostProfile","onClickGotoProfile","icon","DEFAULT_ICON_URL","name","introduce","memo","PostPaginationWrapper","GRID_STYLE","PostPagination","userId","query","useRouter","sidePosts","useSWR","storyId","fetcher","noRevalidate","data","onClickStoryBtn","prevPost","background","GRAY_COLOR","NO_IMAGE_URL","LeftOutlined","nextPost","RightOutlined","PostCommentWrapper","RED_COLOR","revalidateStory","dispatch","useDispatch","useState","liked","setLiked","useSelector","state","revalidateComments","revalidate","useEffect","likeStory","find","v","onClickLikeOrDisLike","value","axios","then","toastSuccessMessage","getUserInfoAction","error","toastErrorMessage","HeartFilled","CommentForm","isStory","map","i","Comment","comment","StoryPostWrapper","initialStories","initialStory","uuid","setUUID","isOwner","setIsOwner","initialData","useSWRInfinite","index","filter","stories","setSize","localStorage","getItem","document","querySelectorAll","forEach","span","createElement","setAttribute","classList","add","appendChild","onClickEditBtn","onClickConfirmDelete","PostLayout","PostThubnail","EditOutlined","toastConfirmMessage","DeleteOutlined","region","CountryMap","lat","lng","ReactHtmlParser","content","height","StoryArticleList","grid","gap","StoryArticleListWrapper","css","isReachingEnd","setIsReachingEnd","ref","useRef","isVisible","useOnScreen","isEmpty","prev","storiesData","flat","window","__NEXT_P","push"],"sourceRoot":""}