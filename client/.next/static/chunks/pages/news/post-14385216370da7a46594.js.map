{"version":3,"file":"static/chunks/pages/news/post-14385216370da7a46594.js","mappings":"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","sources":["webpack://_N_E/./pages/news/post.tsx","webpack://_N_E/?96bb"],"sourcesContent":["import React, { FC, useCallback, useEffect, useMemo, useState } from \"react\";\r\nimport styled from \"@emotion/styled\";\r\nimport LGLayout from \"@layout/LGLayout\";\r\nimport Editor from \"@components/Editor/Editor\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { RootState } from \"slices\";\r\nimport {\r\n  BORDER_THIN,\r\n  FLEX_STYLE,\r\n  noRevalidate,\r\n  toastErrorMessage,\r\n  toastSuccessMessage,\r\n} from \"config\";\r\nimport router, { useRouter } from \"next/router\";\r\nimport CountrySelectMap from \"@components/Maps/CountrySelectMap\";\r\nimport AutoCompleteForm from \"@components/AutoCompleteForm\";\r\nimport useSWR from \"swr\";\r\nimport { ICoordinate, ICountry, IArticle } from \"@typings/db\";\r\nimport fetcher from \"utils/fetcher\";\r\nimport ImageDragger from \"@components/Editor/ImageDragger\";\r\nimport useInput from \"@hooks/useInput\";\r\nimport { toastConfirmMessage } from \"@components/ConfirmToastify\";\r\nimport tw from \"twin.macro\";\r\nimport { Select } from \"antd\";\r\nimport { wrapper } from \"configureStore\";\r\nimport axios from \"axios\";\r\nimport { getUserInfoAction } from \"actions/user\";\r\nimport { UploadFile } from \"antd/lib/upload/interface\";\r\nconst { Option } = Select;\r\n\r\nexport const ArticlePostWrapper = styled.div`\r\n  .title-input {\r\n    padding: 0.63rem 1rem;\r\n  }\r\n  .option-input {\r\n    ${tw`py-2 px-4 w-1/2`}\r\n  }\r\n  .autoComplete-form {\r\n    width: 20%;\r\n  }\r\n  .editor-btn-wrapper {\r\n    margin-top: 1rem;\r\n    ${FLEX_STYLE(\"flex-end\", \"center\")}\r\n    button {\r\n      ${tw`bg-white py-3 px-6 font-bold ml-2 rounded-xl hover:shadow-md`}\r\n      ${BORDER_THIN(\"border\")};\r\n      transition: 0.3s all;\r\n    }\r\n  }\r\n  .mapboxgl-ctrl-geocoder--button {\r\n    ${tw`rounded-full`}\r\n  }\r\n  .dragger {\r\n    height: 40vh;\r\n  }\r\n`;\r\ninterface IProps {}\r\n\r\nconst post: FC<IProps> = () => {\r\n  const { query } = useRouter();\r\n  const { user } = useSelector((state: RootState) => state.user);\r\n  const { data: editArticle } = useSWR<IArticle>(\r\n    query?.articleId ? `/article/${query?.articleId}` : null,\r\n    fetcher,\r\n    noRevalidate\r\n  );\r\n  const { data: countries } = useSWR<ICountry[]>(\"/country\", fetcher, noRevalidate);\r\n  const [type, setType] = useState(\"타입 선택\");\r\n  const [selectedCountry, setCountry] = useState(\"\");\r\n  const [title, onChangeTitle, setTitle] = useInput(\"\");\r\n  const [label, onChangeLabel, setLabel] = useInput<Number | string>(\"\");\r\n  const [prevThumbnail, setPrevThumbnail] = useState<string>();\r\n  const [fileList, setFileList] = useState<UploadFile[]>([]);\r\n  const [ranking, onChangeRanking, setRanking] = useInput(\"\");\r\n  const [region, setRegion] = useState(\"이름모를 어딘가\");\r\n  const [upImg, setUpImg] = useState(\"\");\r\n  const [content, setContent] = useState(\"\");\r\n  const [editPostId, setEditPostId] = useState<number | null>(null);\r\n  const [marker, setMarker] = useState<ICoordinate>({\r\n    latitude: 37.50529626491968,\r\n    longitude: 126.98047832475031,\r\n  });\r\n\r\n  const countryOptions = useMemo(\r\n    () =>\r\n      countries?.map((v, i) => {\r\n        return { value: v.name, code: v.code };\r\n      }),\r\n    [countries]\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (editArticle) {\r\n      setRegion(editArticle?.region);\r\n      setTitle(editArticle?.title);\r\n      setType(editArticle?.type);\r\n      setContent(editArticle?.content);\r\n      setCountry(editArticle?.country?.name);\r\n      setEditPostId(editArticle?.id);\r\n      setMarker({\r\n        latitude: editArticle?.lat,\r\n        longitude: editArticle?.lng,\r\n      });\r\n      setLabel(editArticle?.label || \"\");\r\n      setRanking(editArticle?.ranking || \"\");\r\n      if (editArticle?.thumbnail) {\r\n        setFileList([{ uid: `1`, name: `썸네일`, status: \"done\", url: editArticle.thumbnail }]);\r\n        setPrevThumbnail(editArticle.thumbnail);\r\n      }\r\n    }\r\n  }, [editArticle]);\r\n\r\n  useEffect(() => {\r\n    if (!user) {\r\n      router.back();\r\n    }\r\n    if (editArticle) {\r\n      if (user?.id !== editArticle?.user?.id) {\r\n        router.back();\r\n      }\r\n    }\r\n  }, [user, editArticle]);\r\n\r\n  const onClickSubmit = useCallback(() => {\r\n    if (!title) {\r\n      toastErrorMessage(\"제목을 작성해주세요.\");\r\n      return;\r\n    }\r\n    if (!region) {\r\n      toastErrorMessage(\"지도에서 지역을 선택해주세요.\");\r\n      return;\r\n    }\r\n    if (!content) {\r\n      toastErrorMessage(\"내용을 작성해주세요.\");\r\n      return;\r\n    }\r\n    if (type === \"타입 선택\") {\r\n      toastErrorMessage(\"타입을 선택해주세요.\");\r\n      return;\r\n    }\r\n    let form: FormData = new FormData();\r\n    if (upImg) {\r\n      form.append(\"image\", upImg);\r\n    }\r\n    if (label) {\r\n      form.append(\"label\", String(label));\r\n    }\r\n    if (ranking) {\r\n      form.append(\"ranking\", String(ranking));\r\n    }\r\n    form.append(\"title\", String(title));\r\n    form.append(\"region\", String(region));\r\n    form.append(\"type\", String(type));\r\n    form.append(\"content\", String(content));\r\n    form.append(\"lat\", String(marker.latitude));\r\n    form.append(\"lng\", String(marker.longitude));\r\n\r\n    let pickCountry = countryOptions?.find((v) => v.value === selectedCountry);\r\n    if (pickCountry) {\r\n      form.append(\"code\", String(pickCountry.code));\r\n    } else {\r\n      toastErrorMessage(\"유효하지 않은 국가입니다. 다시 확인해주세요.\");\r\n      return;\r\n    }\r\n    if (editArticle) {\r\n      form.append(\"articleId\", String(editArticle?.id));\r\n    }\r\n    axios\r\n      .post(`/article/${editArticle ? \"edit\" : \"\"}`, form)\r\n      .then((res) => {\r\n        const { articleId } = res.data.data;\r\n        router.push(`/news/${articleId}`);\r\n        setRegion(\"\");\r\n        setUpImg(\"\");\r\n        setTitle(\"\");\r\n        setType(\"타입 선택\");\r\n        setContent(\"\");\r\n        setCountry(\"\");\r\n        setLabel(\"\");\r\n        setRanking(\"\");\r\n        if (editArticle) {\r\n          toastSuccessMessage(\"기사를 수정했습니다.\");\r\n        } else {\r\n          toastSuccessMessage(\"기사를 성공적으로 작성했습니다.\");\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        toastErrorMessage(error);\r\n        throw error;\r\n      });\r\n  }, [\r\n    title,\r\n    region,\r\n    countryOptions,\r\n    selectedCountry,\r\n    content,\r\n    upImg,\r\n    marker,\r\n    editArticle,\r\n    type,\r\n    label,\r\n    ranking,\r\n  ]);\r\n\r\n  const handleTypeChange = useCallback((value: string) => {\r\n    setType(value);\r\n  }, []);\r\n\r\n  return (\r\n    <ArticlePostWrapper>\r\n      <LGLayout>\r\n        <h2 className=\"main-title\">제목</h2>\r\n        <input\r\n          value={title}\r\n          onChange={onChangeTitle}\r\n          placeholder=\"기사 제목 입력\"\r\n          className=\"basic-input title-input\"\r\n          type=\"text\"\r\n        />\r\n        <h2 className=\"main-title\">국가 지정</h2>\r\n        <AutoCompleteForm\r\n          countryOptions={countryOptions}\r\n          selectedCountry={selectedCountry}\r\n          setCountry={setCountry}\r\n        />\r\n        <h2 className=\"main-title\">라벨 설정(선택사항)</h2>\r\n        <input\r\n          value={label}\r\n          onChange={onChangeLabel}\r\n          placeholder=\"라벨 내용 입력\"\r\n          className=\"basic-input option-input\"\r\n          type=\"text\"\r\n        />\r\n        <h2 className=\"main-title\">순위 설정(선택사항)</h2>\r\n        <input\r\n          value={ranking}\r\n          onChange={onChangeRanking}\r\n          placeholder=\"숫자를 입력하세요\"\r\n          className=\"basic-input option-input\"\r\n          type=\"number\"\r\n        />\r\n        <h2 className=\"main-title\">타입 지정</h2>\r\n        <Select\r\n          className=\"type-selector\"\r\n          value={type}\r\n          onChange={handleTypeChange}\r\n          style={{ width: \"180px\" }}\r\n        >\r\n          <Option value=\"관광뉴스\">관광뉴스</Option>\r\n          <Option value=\"트렌드\">트렌드</Option>\r\n          <Option value=\"쇼핑\">쇼핑</Option>\r\n          <Option value=\"이색체험\">이색체험</Option>\r\n          <Option value=\"이벤트\">이벤트</Option>\r\n        </Select>\r\n        <h2 className=\"main-title\">지역 지정</h2>\r\n        <CountrySelectMap\r\n          lat={editArticle?.lat}\r\n          lng={editArticle?.lng}\r\n          marker={marker}\r\n          setMarker={setMarker}\r\n          setRegion={setRegion}\r\n        />\r\n        <h2 className=\"main-title\">선택 지역</h2>\r\n        <h3>{region}</h3>\r\n        <h2 className=\"main-title\">내용작성</h2>\r\n        <Editor prevContent={editArticle?.content} setContent={setContent} isStory={true} />\r\n        <h2 className=\"main-title\">\r\n          {editPostId ? \"썸네일 변경 (미선택시 기존 썸네일 사용)\" : \"썸네일 업로드\"}\r\n        </h2>\r\n        <ImageDragger\r\n          fileList={fileList}\r\n          setFileList={setFileList}\r\n          setPrevImageList={setPrevThumbnail}\r\n          setUpImg={setUpImg}\r\n          single={true}\r\n        />\r\n        <div className=\"editor-btn-wrapper\">\r\n          <button onClick={() => router.back()}>뒤로가기</button>\r\n          <button\r\n            onClick={() => {\r\n              if (\r\n                marker.latitude === 37.50529626491968 &&\r\n                marker.longitude === 126.98047832475031\r\n              ) {\r\n                toastConfirmMessage(\r\n                  onClickSubmit,\r\n                  \"지역 좌표를 입력하지 않으셨어요, 이상태로 진행할까요? (현재 좌표 : 대한민국 서울 , 이름모를 어딘가)\",\r\n                  \"진행해주세요\"\r\n                );\r\n              } else {\r\n                onClickSubmit();\r\n              }\r\n            }}\r\n          >\r\n            {editPostId ? \"기사 수정\" : \"기사 업로드\"}\r\n          </button>\r\n        </div>\r\n      </LGLayout>\r\n    </ArticlePostWrapper>\r\n  );\r\n};\r\n\r\nexport const getServerSideProps = wrapper.getServerSideProps((store) => async ({ req, query }) => {\r\n  const cookie = req ? req.headers.cookie : \"\";\r\n  axios.defaults.headers.Cookie = \"\";\r\n  if (req && cookie) {\r\n    axios.defaults.headers.Cookie = cookie;\r\n  }\r\n  await store.dispatch(getUserInfoAction());\r\n  return {\r\n    props: {},\r\n  };\r\n});\r\n\r\nexport default post;\r\n","\n    (window.__NEXT_P = window.__NEXT_P || []).push([\n      \"/news/post\",\n      function () {\n        return require(\"private-next-pages/news/post.tsx\");\n      }\n    ]);\n  "],"names":["Option","Select","ArticlePostWrapper","FLEX_STYLE","BORDER_THIN","query","useRouter","user","useSelector","state","editArticle","useSWR","articleId","fetcher","noRevalidate","data","countries","useState","type","setType","selectedCountry","setCountry","useInput","title","onChangeTitle","setTitle","label","onChangeLabel","setLabel","setPrevThumbnail","fileList","setFileList","ranking","onChangeRanking","setRanking","region","setRegion","upImg","setUpImg","content","setContent","editPostId","setEditPostId","latitude","longitude","marker","setMarker","countryOptions","useMemo","map","v","i","value","name","code","useEffect","country","id","lat","lng","thumbnail","uid","status","url","router","onClickSubmit","useCallback","form","FormData","append","String","pickCountry","find","axios","then","res","toastSuccessMessage","error","toastErrorMessage","handleTypeChange","className","onChange","placeholder","style","width","prevContent","isStory","setPrevImageList","single","onClick","toastConfirmMessage","window","__NEXT_P","push"],"sourceRoot":""}