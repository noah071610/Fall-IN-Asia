{"version":3,"file":"../pages/story/post.js","mappings":"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","sources":["webpack://fall-in-asia-clinet/./pages/story/post.tsx","webpack://fall-in-asia-clinet/external \"@emotion/react/jsx-runtime\"","webpack://fall-in-asia-clinet/external \"@emotion/styled/base\"","webpack://fall-in-asia-clinet/external \"@reduxjs/toolkit\"","webpack://fall-in-asia-clinet/external \"antd\"","webpack://fall-in-asia-clinet/external \"axios\"","webpack://fall-in-asia-clinet/external \"next-redux-wrapper\"","webpack://fall-in-asia-clinet/external \"next/router\"","webpack://fall-in-asia-clinet/external \"react\"","webpack://fall-in-asia-clinet/external \"react-map-gl\"","webpack://fall-in-asia-clinet/external \"react-map-gl-geocoder\"","webpack://fall-in-asia-clinet/external \"react-redux\"","webpack://fall-in-asia-clinet/external \"react-toastify\"","webpack://fall-in-asia-clinet/external \"swr\""],"sourcesContent":["import React, { FC, useCallback, useEffect, useMemo, useState } from \"react\";\r\nimport styled from \"@emotion/styled\";\r\nimport LGLayout from \"@layout/LGLayout\";\r\nimport Editor from \"@components/Editor/Editor\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { RootState } from \"slices\";\r\nimport {\r\n  BORDER_THIN,\r\n  FLEX_STYLE,\r\n  noRevalidate,\r\n  toastErrorMessage,\r\n  toastSuccessMessage,\r\n} from \"config\";\r\nimport router, { useRouter } from \"next/router\";\r\nimport CountrySelectMap from \"@components/Maps/CountrySelectMap\";\r\nimport AutoCompleteForm from \"@components/AutoCompleteForm\";\r\nimport useSWR from \"swr\";\r\nimport { ICoordinate, ICountry, IStory } from \"@typings/db\";\r\nimport fetcher from \"utils/fetcher\";\r\nimport ImageDragger from \"@components/Editor/ImageDragger\";\r\nimport useInput from \"@hooks/useInput\";\r\nimport { toastConfirmMessage } from \"@components/ConfirmToastify\";\r\nimport tw from \"twin.macro\";\r\nimport { getUserInfoAction } from \"actions/user\";\r\nimport axios from \"axios\";\r\nimport { wrapper } from \"configureStore\";\r\nimport { UploadFile } from \"antd/lib/upload/interface\";\r\n\r\nexport const StoryPostWrapper = styled.div`\r\n  .title-input {\r\n    padding: 0.63rem 1rem;\r\n  }\r\n  .autoComplete-form {\r\n    width: 20%;\r\n  }\r\n  .editor-btn-wrapper {\r\n    margin-top: 1rem;\r\n    ${FLEX_STYLE(\"flex-end\", \"center\")}\r\n    button {\r\n      ${tw`bg-white py-3 px-6 font-bold ml-2 rounded-xl hover:shadow-md`}\r\n      ${BORDER_THIN(\"border\")};\r\n      transition: 0.3s all;\r\n    }\r\n  }\r\n  .mapboxgl-ctrl-geocoder--button {\r\n    ${tw`rounded-full`}\r\n  }\r\n  .dragger {\r\n    height: 40vh;\r\n  }\r\n`;\r\ninterface IProps {}\r\n\r\nconst post: FC<IProps> = () => {\r\n  const { query } = useRouter();\r\n  const { user } = useSelector((state: RootState) => state.user);\r\n  const { data: countries } = useSWR<ICountry[]>(\"/country\", fetcher, noRevalidate);\r\n  const { data: editStory } = useSWR<IStory>(\r\n    query?.storyId ? `/story/${query?.code}/${query?.storyId}` : null,\r\n    fetcher,\r\n    noRevalidate\r\n  );\r\n  const [selectedCountry, setCountry] = useState(\"\");\r\n  const [title, onChangeTitle, setTitle] = useInput(\"\");\r\n  const [prevThumbnail, setPrevThumbnail] = useState<string>();\r\n  const [fileList, setFileList] = useState<UploadFile[]>([]);\r\n  const [region, setRegion] = useState(\"이름모를 어딘가\");\r\n  const [upImg, setUpImg] = useState(\"\");\r\n  const [content, setContent] = useState(\"\");\r\n  const [marker, setMarker] = useState<ICoordinate>({\r\n    latitude: 37.50529626491968,\r\n    longitude: 126.98047832475031,\r\n  });\r\n\r\n  const countryOptions = useMemo(\r\n    () =>\r\n      countries?.map((v, i) => {\r\n        return { value: v.name, code: v.code };\r\n      }),\r\n    [countries]\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (editStory) {\r\n      setRegion(editStory?.region);\r\n      setTitle(editStory?.title);\r\n      setContent(editStory?.content);\r\n      setCountry(editStory?.country?.name);\r\n      setMarker({\r\n        latitude: editStory?.lat,\r\n        longitude: editStory?.lng,\r\n      });\r\n      if (editStory?.thumbnail) {\r\n        setFileList([{ uid: `1`, name: `썸네일`, status: \"done\", url: editStory.thumbnail }]);\r\n        setPrevThumbnail(editStory.thumbnail);\r\n      }\r\n    }\r\n  }, [editStory]);\r\n\r\n  useEffect(() => {\r\n    if (!user) {\r\n      router.back();\r\n    }\r\n    if (editStory) {\r\n      if (user?.id !== editStory?.user?.id) {\r\n        router.back();\r\n      }\r\n    }\r\n  }, [user, editStory]);\r\n\r\n  const onClickSubmit = useCallback(() => {\r\n    if (!title) {\r\n      toastErrorMessage(\"제목을 작성해주세요.\");\r\n      return;\r\n    }\r\n    if (!region) {\r\n      toastErrorMessage(\"지도에서 지역을 선택해주세요.\");\r\n      return;\r\n    }\r\n    if (!content) {\r\n      toastErrorMessage(\"내용을 작성해주세요.\");\r\n      return;\r\n    }\r\n    let form: FormData = new FormData();\r\n    if (upImg) {\r\n      form.append(\"image\", upImg);\r\n    }\r\n    form.append(\"title\", String(title));\r\n    form.append(\"region\", String(region));\r\n    form.append(\"content\", String(content));\r\n    form.append(\"lat\", String(marker.latitude));\r\n    form.append(\"lng\", String(marker.longitude));\r\n\r\n    let pickCountry = countryOptions?.find((v) => v.value === selectedCountry);\r\n    if (pickCountry) {\r\n      form.append(\"code\", String(pickCountry.code));\r\n    } else {\r\n      toastErrorMessage(\"유효하지 않은 국가입니다. 다시 확인해주세요.\");\r\n      return;\r\n    }\r\n    if (editStory) {\r\n      form.append(\"storyId\", String(editStory?.id));\r\n    }\r\n    axios\r\n      .post(`/story/${editStory ? \"edit\" : \"\"}`, form)\r\n      .then((res) => {\r\n        const { storyId } = res.data.data;\r\n        router.push(`/story/${pickCountry?.code}/${storyId}`);\r\n        scrollTo({ top: 0 });\r\n        setRegion(\"\");\r\n        setUpImg(\"\");\r\n        setTitle(\"\");\r\n        setContent(\"\");\r\n        setCountry(\"\");\r\n        if (editStory) {\r\n          toastSuccessMessage(\"연대기를 수정했습니다.\");\r\n        } else {\r\n          toastSuccessMessage(\"연대기를 성공적으로 작성했습니다.\");\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        toastErrorMessage(error);\r\n        throw error;\r\n      });\r\n  }, [title, region, countryOptions, selectedCountry, content, upImg, marker, editStory]);\r\n\r\n  return (\r\n    <StoryPostWrapper>\r\n      <LGLayout>\r\n        <h2 className=\"main-title\">제목</h2>\r\n        <input\r\n          value={title}\r\n          onChange={onChangeTitle}\r\n          placeholder=\"연대기 제목 입력\"\r\n          className=\"basic-input title-input\"\r\n          type=\"text\"\r\n        />\r\n        <h2 className=\"main-title\">국가 지정</h2>\r\n        <AutoCompleteForm\r\n          countryOptions={countryOptions}\r\n          selectedCountry={selectedCountry}\r\n          setCountry={setCountry}\r\n        />\r\n        <h2 className=\"main-title\">지역 지정</h2>\r\n        <CountrySelectMap\r\n          lat={editStory?.lat}\r\n          lng={editStory?.lng}\r\n          marker={marker}\r\n          setMarker={setMarker}\r\n          setRegion={setRegion}\r\n        />\r\n        <h2 className=\"main-title\">선택 지역</h2>\r\n        <h3>{region}</h3>\r\n        <h2 className=\"main-title\">내용작성</h2>\r\n        <Editor prevContent={editStory?.content} setContent={setContent} isStory={true} />\r\n        <h2 className=\"main-title\">{editStory ? \"썸네일 변경\" : \"썸네일 업로드\"}</h2>\r\n        <ImageDragger\r\n          fileList={fileList}\r\n          setFileList={setFileList}\r\n          setPrevImageList={setPrevThumbnail}\r\n          setUpImg={setUpImg}\r\n          single={true}\r\n        />\r\n        <div className=\"editor-btn-wrapper\">\r\n          <button onClick={() => router.back()}>뒤로가기</button>\r\n          <button\r\n            onClick={() => {\r\n              if (\r\n                marker.latitude === 37.50529626491968 &&\r\n                marker.longitude === 126.98047832475031\r\n              ) {\r\n                toastConfirmMessage(\r\n                  onClickSubmit,\r\n                  \"지역 좌표를 입력하지 않으셨어요, 이상태로 진행할까요? (현재 좌표 : 대한민국 서울 , 이름모를 어딘가)\",\r\n                  \"진행해주세요\"\r\n                );\r\n              } else {\r\n                onClickSubmit();\r\n              }\r\n            }}\r\n          >\r\n            {editStory ? \"연대기 수정\" : \"연대기 업로드\"}\r\n          </button>\r\n        </div>\r\n      </LGLayout>\r\n    </StoryPostWrapper>\r\n  );\r\n};\r\n\r\nexport const getServerSideProps = wrapper.getServerSideProps((store) => async ({ req, query }) => {\r\n  const cookie = req ? req.headers.cookie : \"\";\r\n  axios.defaults.headers.Cookie = \"\";\r\n  if (req && cookie) {\r\n    axios.defaults.headers.Cookie = cookie;\r\n  }\r\n  await store.dispatch(getUserInfoAction());\r\n  return {\r\n    props: {},\r\n  };\r\n});\r\n\r\nexport default post;\r\n","module.exports = require(\"@emotion/react/jsx-runtime\");","module.exports = require(\"@emotion/styled/base\");","module.exports = require(\"@reduxjs/toolkit\");","module.exports = require(\"antd\");","module.exports = require(\"axios\");","module.exports = require(\"next-redux-wrapper\");","module.exports = require(\"next/router\");","module.exports = require(\"react\");","module.exports = require(\"react-map-gl\");","module.exports = require(\"react-map-gl-geocoder\");","module.exports = require(\"react-redux\");","module.exports = require(\"react-toastify\");","module.exports = require(\"swr\");"],"names":["React","useCallback","useEffect","useMemo","useState","LGLayout","Editor","useSelector","BORDER_THIN","FLEX_STYLE","noRevalidate","toastErrorMessage","toastSuccessMessage","router","useRouter","CountrySelectMap","AutoCompleteForm","useSWR","fetcher","ImageDragger","useInput","toastConfirmMessage","getUserInfoAction","axios","wrapper","StoryPostWrapper","post","query","user","state","data","countries","editStory","storyId","code","selectedCountry","setCountry","title","onChangeTitle","setTitle","prevThumbnail","setPrevThumbnail","fileList","setFileList","region","setRegion","upImg","setUpImg","content","setContent","marker","setMarker","latitude","longitude","countryOptions","map","v","i","value","name","country","lat","lng","thumbnail","uid","status","url","back","id","onClickSubmit","form","FormData","append","String","pickCountry","find","then","res","push","scrollTo","top","catch","error","getServerSideProps","store","req","cookie","headers","defaults","Cookie","dispatch","props"],"sourceRoot":""}