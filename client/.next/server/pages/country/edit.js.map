{"version":3,"file":"../pages/country/edit.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;;AAMA,MAAMa,IAAgB,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAuB;AAC9C,QAAM;AAAEC,IAAAA;AAAF,MAAYX,sDAAS,EAA3B;AACA,QAAM;AAAEY,IAAAA;AAAF,MAAWT,wDAAW,CAAEU,KAAD,IAAsBA,KAAK,CAACD,IAA7B,CAA5B;AACA,QAAM;AAAEE,IAAAA,IAAI,EAAEC;AAAR,MAAmBP,2CAAM,CAAW,WAAUG,KAAX,aAAWA,KAAX,uBAAWA,KAAK,CAAEK,IAAK,IAAGL,KAA1B,aAA0BA,KAA1B,uBAA0BA,KAAK,CAAEM,QAAS,IAApD,EAAyDV,4DAAzD;AAC7BW,IAAAA,WAAW,EAAER;AADgB,KAE1BZ,0DAF0B,EAA/B;AAKAD,EAAAA,gDAAS,CAAC,MAAM;AACd,QAAI,CAACe,IAAL,EAAW;AACTb,MAAAA,uDAAA;AACD;;AACD,QAAIgB,MAAJ,EAAY;AACV,UAAI,CAAAH,IAAI,SAAJ,IAAAA,IAAI,WAAJ,YAAAA,IAAI,CAAEQ,EAAN,OAAaL,MAAb,aAAaA,MAAb,uBAAaA,MAAM,CAAEH,IAAR,CAAaQ,EAA1B,CAAJ,EAAkC;AAChCrB,QAAAA,uDAAA;AACD;AACF;AACF,GATQ,EASN,CAACa,IAAD,EAAOG,MAAP,CATM,CAAT;AAWA,SACE,iEAAC,8DAAD;AAAA,eACE;AAAI,eAAS,EAAC,YAAd;AAAA;AAAA,MADF,EAEE,4DAAC,kFAAD;AAAmB,gBAAU,EAAEA;AAA/B,MAFF;AAAA,IADF;AAMD,CAzBD;;AA2BO,MAAMM,kBAAkB,GAAGjB,kGAAA,CAA4BkB,KAAD,IAAW,OAAO;AAAEC,EAAAA,GAAF;AAAOZ,EAAAA;AAAP,CAAP,KAA0B;AAChG,QAAMa,MAAM,GAAGD,GAAG,GAAGA,GAAG,CAACE,OAAJ,CAAYD,MAAf,GAAwB,EAA1C;AACAnB,EAAAA,sEAAA,GAAgC,EAAhC;;AACA,MAAIkB,GAAG,IAAIC,MAAX,EAAmB;AACjBnB,IAAAA,sEAAA,GAAgCmB,MAAhC;AACD;;AACD,QAAMF,KAAK,CAACM,QAAN,CAAetB,yEAAiB,EAAhC,CAAN;AACA,QAAMI,aAAa,GAAG,MAAMH,gEAAO,CAACI,KAAK,IAAK,WAAUA,KAAX,aAAWA,KAAX,uBAAWA,KAAK,CAAEK,IAAK,IAAGL,KAA1B,aAA0BA,KAA1B,uBAA0BA,KAAK,CAAEM,QAAS,SAApD,CAAnC;AACA,SAAO;AACLY,IAAAA,KAAK,EAAE;AAAEnB,MAAAA;AAAF;AADF,GAAP;AAGD,CAXiC,CAA3B;AAaP,iEAAeD,IAAf;;;;;;;AC1DA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA","sources":["webpack://fall-in-asia-clinet/./pages/country/edit.tsx","webpack://fall-in-asia-clinet/external \"@ant-design/icons\"","webpack://fall-in-asia-clinet/external \"@emotion/react/jsx-runtime\"","webpack://fall-in-asia-clinet/external \"@emotion/styled/base\"","webpack://fall-in-asia-clinet/external \"@reduxjs/toolkit\"","webpack://fall-in-asia-clinet/external \"antd\"","webpack://fall-in-asia-clinet/external \"axios\"","webpack://fall-in-asia-clinet/external \"next-redux-wrapper\"","webpack://fall-in-asia-clinet/external \"next/dynamic\"","webpack://fall-in-asia-clinet/external \"next/router\"","webpack://fall-in-asia-clinet/external \"react\"","webpack://fall-in-asia-clinet/external \"react-quill\"","webpack://fall-in-asia-clinet/external \"react-redux\"","webpack://fall-in-asia-clinet/external \"react-toastify\"","webpack://fall-in-asia-clinet/external \"swr\""],"sourcesContent":["import React, { FC, useEffect } from \"react\";\r\nimport { noRevalidate } from \"config\";\r\nimport router, { useRouter } from \"next/router\";\r\nimport LGLayout from \"@layout/LGLayout\";\r\nimport MomentPostingForm from \"@sections/MainPage/MomentPostingForm\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { RootState } from \"slices\";\r\nimport { wrapper } from \"configureStore\";\r\nimport axios from \"axios\";\r\nimport { getUserInfoAction } from \"actions/user\";\r\nimport fetcher from \"utils/fetcher\";\r\nimport { IMoment } from \"@typings/db\";\r\nimport useSWR from \"swr\";\r\n\r\ninterface IProps {\r\n  initialMoment: IMoment;\r\n}\r\n\r\nconst edit: FC<IProps> = ({ initialMoment }) => {\r\n  const { query } = useRouter();\r\n  const { user } = useSelector((state: RootState) => state.user);\r\n  const { data: moment } = useSWR<IMoment>(`/moment/${query?.code}/${query?.momentId}/0`, fetcher, {\r\n    initialData: initialMoment,\r\n    ...noRevalidate,\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (!user) {\r\n      router.back();\r\n    }\r\n    if (moment) {\r\n      if (user?.id !== moment?.user.id) {\r\n        router.back();\r\n      }\r\n    }\r\n  }, [user, moment]);\r\n\r\n  return (\r\n    <LGLayout>\r\n      <h2 className=\"main-title\">모멘트 수정</h2>\r\n      <MomentPostingForm editMoment={moment} />\r\n    </LGLayout>\r\n  );\r\n};\r\n\r\nexport const getServerSideProps = wrapper.getServerSideProps((store) => async ({ req, query }) => {\r\n  const cookie = req ? req.headers.cookie : \"\";\r\n  axios.defaults.headers.Cookie = \"\";\r\n  if (req && cookie) {\r\n    axios.defaults.headers.Cookie = cookie;\r\n  }\r\n  await store.dispatch(getUserInfoAction());\r\n  const initialMoment = await fetcher(query && `/moment/${query?.code}/${query?.momentId}?uuid=0`);\r\n  return {\r\n    props: { initialMoment },\r\n  };\r\n});\r\n\r\nexport default edit;\r\n","module.exports = require(\"@ant-design/icons\");","module.exports = require(\"@emotion/react/jsx-runtime\");","module.exports = require(\"@emotion/styled/base\");","module.exports = require(\"@reduxjs/toolkit\");","module.exports = require(\"antd\");","module.exports = require(\"axios\");","module.exports = require(\"next-redux-wrapper\");","module.exports = require(\"next/dynamic\");","module.exports = require(\"next/router\");","module.exports = require(\"react\");","module.exports = require(\"react-quill\");","module.exports = require(\"react-redux\");","module.exports = require(\"react-toastify\");","module.exports = require(\"swr\");"],"names":["React","useEffect","noRevalidate","router","useRouter","LGLayout","MomentPostingForm","useSelector","wrapper","axios","getUserInfoAction","fetcher","useSWR","edit","initialMoment","query","user","state","data","moment","code","momentId","initialData","back","id","getServerSideProps","store","req","cookie","headers","defaults","Cookie","dispatch","props"],"sourceRoot":""}