{"version":3,"file":"368.js","mappings":"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","sources":["webpack://fall-in-asia-clinet/./sections/MainPage/MomentPostingForm/styles.tsx","webpack://fall-in-asia-clinet/./sections/MainPage/MomentPostingForm/index.tsx"],"sourcesContent":["import styled from \"@emotion/styled\";\r\nimport { BORDER_THIN, FLEX_STYLE, GRAY_COLOR, RGB_BLACK, SM_SIZE } from \"config\";\r\nimport tw from \"twin.macro\";\r\n\r\nexport const MomentPostingFormWrapper = styled.section`\r\n  ${tw`rounded-2xl bg-white p-2`}\r\n  .selector-wrapper {\r\n    ${FLEX_STYLE(\"flex-start\", \"center\")};\r\n    margin-bottom: 1rem;\r\n  }\r\n\r\n  .autoComplete-form {\r\n    margin-right: 1rem;\r\n    width: 200px;\r\n  }\r\n  .country-selector {\r\n    margin-right: 1rem;\r\n  }\r\n  .posting-form-preview {\r\n    ${tw`rounded-2xl cursor-pointer py-2 px-4`}\r\n    ${FLEX_STYLE(\"space-between\", \"center\")}\r\n    transition: 0.3s all;\r\n    .anticon {\r\n      ${tw`text-xl p-2`}\r\n      transition: 0.3s all;\r\n    }\r\n    &:hover {\r\n      background: ${GRAY_COLOR};\r\n      .anticon {\r\n        transform: scale(1.15);\r\n      }\r\n    }\r\n  }\r\n  .title-wrapper {\r\n    ${tw`m-4 rounded-2xl`}\r\n    ${BORDER_THIN(\"border\")};\r\n    input {\r\n      ${tw`py-3 px-4 rounded-2xl`}\r\n    }\r\n  }\r\n  .posting-editor {\r\n    padding: 1rem;\r\n    .editor-btn-wrapper {\r\n      margin-top: 1rem;\r\n      ${FLEX_STYLE(\"flex-end\", \"center\")}\r\n      button {\r\n        ${tw`py-3 px-5 font-bold rounded-xl hover:bg-gray-100`}\r\n      }\r\n    }\r\n  }\r\n  @media (max-width: ${SM_SIZE}) {\r\n    .posting-editor {\r\n      ${tw`p-2`}\r\n    }\r\n  }\r\n`;\r\n","import { EditOutlined } from \"@ant-design/icons\";\r\nimport ImageDragger from \"@components/Editor/ImageDragger\";\r\nimport { Select } from \"antd\";\r\nimport { noRevalidate, toastErrorMessage, toastSuccessMessage } from \"config\";\r\nimport React, { FC, memo, useCallback, useEffect, useMemo, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { MomentPostingFormWrapper } from \"./styles\";\r\nimport router, { useRouter } from \"next/router\";\r\nimport useSWR from \"swr\";\r\nimport fetcher from \"utils/fetcher\";\r\nimport { ICountry, IMoment, IPrevImage } from \"@typings/db\";\r\nimport AutoCompleteForm from \"@components/AutoCompleteForm\";\r\nimport { RootState } from \"slices\";\r\nimport dynamic from \"next/dynamic\";\r\nimport axios from \"axios\";\r\nimport { UploadFile } from \"antd/lib/upload/interface\";\r\nimport { mainSlice } from \"slices/main\";\r\nconst { Option } = Select;\r\n\r\nconst EditorWithoutImage = dynamic(import(\"@components/Editor/EditorWithoutImage\"));\r\n\r\ninterface IProps {\r\n  editMoment?: IMoment;\r\n}\r\n\r\nconst MomentPostingForm: FC<IProps> = ({ editMoment }) => {\r\n  const { query } = useRouter();\r\n  const dispatch = useDispatch();\r\n  const { data: countries } = useSWR<ICountry[]>(\"/country\", fetcher, noRevalidate);\r\n  const [upImg, setUpImg] = useState<File[]>([]);\r\n  const [content, setContent] = useState(\"\");\r\n  const [type, setType] = useState(\"키워드 선택\");\r\n  const [selectedCountry, setCountry] = useState(\"\");\r\n  const [prevImageList, setPrevImageList] = useState<string[]>([]);\r\n  const [fileList, setFileList] = useState<UploadFile[]>([]);\r\n  const [onPostingForm, setOnPostingForm] = useState(false);\r\n  const { user } = useSelector((state: RootState) => state.user);\r\n\r\n  useEffect(() => {\r\n    if (editMoment) {\r\n      setContent(editMoment?.content);\r\n      setType(editMoment?.type);\r\n      setCountry(editMoment?.country?.name);\r\n      if (editMoment?.images.length > 0) {\r\n        const editMomentImageList: UploadFile[] = editMoment.images.map((v, i) => {\r\n          return { uid: `${i + 1}`, name: `이미지 ${i + 1}번`, status: \"done\", url: v.image_src };\r\n        });\r\n        setFileList(editMomentImageList);\r\n        setPrevImageList(editMoment?.images.map((v) => v.image_src));\r\n      }\r\n    }\r\n  }, [editMoment]);\r\n\r\n  const countryOptions = useMemo(\r\n    () =>\r\n      countries?.map((v, i) => {\r\n        return { value: v.name, code: v.code };\r\n      }),\r\n    [countries]\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (query?.code && countryOptions) {\r\n      let pickCountry = countryOptions?.find((v) => v.code === query?.code);\r\n      setCountry(pickCountry?.value as string);\r\n    }\r\n  }, [query, countryOptions]);\r\n\r\n  const onClickSubmit = useCallback(() => {\r\n    if (type === \"키워드 선택\") {\r\n      toastErrorMessage(\"키워드를 선택해주세요.\");\r\n      return;\r\n    }\r\n    if (!content) {\r\n      toastErrorMessage(\"내용을 작성해주세요.\");\r\n      return;\r\n    }\r\n    let form: FormData = new FormData();\r\n    upImg?.forEach((v) => {\r\n      form.append(\"image\", v);\r\n    });\r\n    prevImageList?.forEach((v) => {\r\n      form.append(\"prevImage\", v);\r\n    });\r\n    form.append(\"content\", String(content));\r\n    form.append(\"type\", String(type));\r\n\r\n    let pickCountry = countryOptions?.find((v) => v.value === selectedCountry);\r\n    if (pickCountry) {\r\n      form.append(\"code\", String(pickCountry.code));\r\n    } else {\r\n      toastErrorMessage(\"유효하지 않은 국가입니다. 다시 확인해주세요.\");\r\n      return;\r\n    }\r\n    if (editMoment) {\r\n      form.append(\"momentId\", String(editMoment?.id));\r\n    }\r\n    axios\r\n      .post(`/moment/${editMoment ? \"edit\" : \"\"}`, form)\r\n      .then((res) => {\r\n        const { momentId } = res.data.data;\r\n        router.push(`/country/${pickCountry?.code}/${momentId}`);\r\n        scrollTo({ top: 0 });\r\n        setContent(\"\");\r\n        setUpImg([]);\r\n        setType(\"키워드 선택\");\r\n        setOnPostingForm(false);\r\n        if (editMoment) {\r\n          toastSuccessMessage(\"모멘트를 수정했습니다.\");\r\n        } else {\r\n          toastSuccessMessage(\"모멘트를 성공적으로 작성했습니다.\");\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        toastErrorMessage(error);\r\n        throw error;\r\n      });\r\n  }, [upImg, content, type, selectedCountry, editMoment, prevImageList]);\r\n\r\n  const onClickOpenPostingForm = useCallback(() => {\r\n    if (!user) {\r\n      toastErrorMessage(\"로그인이 필요합니다.\");\r\n      dispatch(mainSlice.actions.toggleLoginModal());\r\n      return;\r\n    }\r\n    setOnPostingForm(true);\r\n  }, [user]);\r\n\r\n  const onClickPostingCancle = useCallback(() => {\r\n    if (editMoment) {\r\n      router.back();\r\n    } else {\r\n      setOnPostingForm(false);\r\n    }\r\n  }, [editMoment]);\r\n\r\n  const handleTypeChange = useCallback((value: string) => {\r\n    setType(value);\r\n  }, []);\r\n  return (\r\n    <MomentPostingFormWrapper>\r\n      {!onPostingForm && !editMoment && (\r\n        <div onClick={onClickOpenPostingForm} className=\"posting-form-preview\">\r\n          <span className=\"placeholder\">당신의 여행은 어땠나요?</span>\r\n          <a>\r\n            <EditOutlined />\r\n          </a>\r\n        </div>\r\n      )}\r\n      {(onPostingForm || editMoment) && (\r\n        <>\r\n          <div className=\"posting-editor\">\r\n            <div className=\"selector-wrapper\">\r\n              <AutoCompleteForm\r\n                countryOptions={countryOptions}\r\n                selectedCountry={selectedCountry}\r\n                setCountry={setCountry}\r\n                disabled={editMoment ? true : false}\r\n              />\r\n              <Select\r\n                className=\"type-selector\"\r\n                value={type}\r\n                onChange={handleTypeChange}\r\n                style={{ width: \"180px\" }}\r\n              >\r\n                <Option value=\"한인 커뮤니티\">한인 커뮤니티</Option>\r\n                <Option value=\"여행정보 공유\">여행정보 공유</Option>\r\n                <Option value=\"사기 경보\">사기 경보</Option>\r\n                <Option value=\"동행자 모집\">동행자 모집</Option>\r\n              </Select>\r\n            </div>\r\n            <EditorWithoutImage content={content} setContent={setContent} />{\" \"}\r\n            <ImageDragger\r\n              fileList={fileList}\r\n              setUpImg={setUpImg}\r\n              setFileList={setFileList}\r\n              setPrevImageList={setPrevImageList}\r\n            />\r\n            <div className=\"editor-btn-wrapper\">\r\n              <button onClick={onClickSubmit}>모멘트 올리기</button>\r\n              <button onClick={onClickPostingCancle}>취소</button>\r\n            </div>\r\n          </div>\r\n        </>\r\n      )}\r\n    </MomentPostingFormWrapper>\r\n  );\r\n};\r\n\r\nexport default memo(MomentPostingForm);\r\n"],"names":["BORDER_THIN","FLEX_STYLE","GRAY_COLOR","SM_SIZE","MomentPostingFormWrapper","EditOutlined","ImageDragger","Select","noRevalidate","toastErrorMessage","toastSuccessMessage","React","memo","useCallback","useEffect","useMemo","useState","useDispatch","useSelector","router","useRouter","useSWR","fetcher","AutoCompleteForm","dynamic","axios","mainSlice","Option","EditorWithoutImage","MomentPostingForm","editMoment","query","dispatch","data","countries","upImg","setUpImg","content","setContent","type","setType","selectedCountry","setCountry","prevImageList","setPrevImageList","fileList","setFileList","onPostingForm","setOnPostingForm","user","state","country","name","images","length","editMomentImageList","map","v","i","uid","status","url","image_src","countryOptions","value","code","pickCountry","find","onClickSubmit","form","FormData","forEach","append","String","id","post","then","res","momentId","push","scrollTo","top","catch","error","onClickOpenPostingForm","actions","toggleLoginModal","onClickPostingCancle","back","handleTypeChange","width"],"sourceRoot":""}