{"version":3,"file":"171.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAEA;AAEA;;AAGA,MAAMM,sBAAsB,GAAG;AAAH;AAAA;AAAA;AAAA;AAAA,MAA5B;;AASA,MAAMC,eAA2B,GAAG,CAAC;AAAEC,EAAAA,QAAF;AAAYC,EAAAA;AAAZ,CAAD,KAA2B;AAAA;;AAC7D,QAAM;AAAA,OAACC,aAAD;AAAA,OAAgBC;AAAhB,MAAoCN,+CAAQ,CAAC,IAAD,CAAlD;AACA,QAAMO,GAAG,GAAGR,6CAAM,CAAC,IAAD,CAAlB;AACA,QAAMS,SAAS,GAAGZ,oEAAW,CAACW,GAAD,CAA7B;AACA,QAAME,OAAO,GAAG,CAAAN,QAAQ,SAAR,IAAAA,QAAQ,WAAR,0BAAAA,QAAQ,CAAG,CAAH,CAAR,0DAAeO,MAAf,MAA0B,CAA1C;AAEAZ,EAAAA,gDAAS,CAAC,MAAM;AACd,QAAIK,QAAJ,EAAc;AAAA;;AACZG,MAAAA,gBAAgB,CAAC,cAAAH,QAAQ,CAACA,QAAQ,CAACO,MAAT,GAAkB,CAAnB,CAAR,wDAA+BA,MAA/B,IAAwC,EAAzC,CAAhB;AACD;AACF,GAJQ,EAIN,CAACP,QAAD,CAJM,CAAT;AAKAL,EAAAA,gDAAS,CAAC,MAAM;AACd,QAAIU,SAAS,IAAI,CAACH,aAAd,IAA+B,CAACI,OAApC,EAA6C;AAC3CL,MAAAA,OAAO,CAAEO,IAAD,IAAUA,IAAI,GAAG,CAAlB,CAAP,CAA4BC,IAA5B,CAAiC,MAAM,CAAE,CAAzC;AACD;AACF,GAJQ,EAIN,CAACJ,SAAD,CAJM,CAAT;AAMA,QAAMK,YAAY,GAAGV,QAAQ,GAAGA,QAAH,aAAGA,QAAH,uBAAGA,QAAQ,CAAEW,IAAV,EAAH,GAAsB,EAAnD;AACA,SACE,iEAAC,sBAAD;AAAA,eACE;AAAM,QAAE,EAAC,cAAT;AAAwB,eAAS,EAAC;AAAlC,MADF,EAEGD,YAFH,aAEGA,YAFH,uBAEGA,YAAY,CAAEE,GAAd,CAAkB,CAACC,CAAD,EAAcC,CAAd,KAA4B;AAC7C,aAAO,4DAAC,wEAAD;AAAkB,eAAO,EAAED;AAA3B,SAAeC,CAAf,CAAP;AACD,KAFA,CAFH,EAKE;AAAK,SAAG,EAAEV;AAAV,MALF;AAAA,IADF;AASD,CA3BD;;AA6BA,iEAAeL,eAAf","sources":["webpack://fall-in-asia-clinet/./sections/NewsPage/NewsArticleList.tsx"],"sourcesContent":["import NewsCard from \"@components/Cards/NewsCard\";\r\nimport styled from \"@emotion/styled\";\r\nimport useOnScreen from \"@hooks/useOnScreen\";\r\nimport { IArticle } from \"@typings/db\";\r\nimport React, { FC, useEffect, useRef, useState } from \"react\";\r\nimport tw from \"twin.macro\";\r\n\r\nconst NewsArticleListWrapper = styled.div`\r\n  ${tw`relative`}\r\n`;\r\n\r\ninterface IProps {\r\n  articles: IArticle[][] | undefined;\r\n  setSize: (f: (size: number) => number) => Promise<IArticle[][] | undefined>;\r\n}\r\n\r\nconst NewsArticleList: FC<IProps> = ({ articles, setSize }) => {\r\n  const [isReachingEnd, setIsReachingEnd] = useState(true);\r\n  const ref = useRef(null);\r\n  const isVisible = useOnScreen(ref);\r\n  const isEmpty = articles?.[0]?.length === 0;\r\n\r\n  useEffect(() => {\r\n    if (articles) {\r\n      setIsReachingEnd(articles[articles.length - 1]?.length < 10);\r\n    }\r\n  }, [articles]);\r\n  useEffect(() => {\r\n    if (isVisible && !isReachingEnd && !isEmpty) {\r\n      setSize((prev) => prev + 1).then(() => {});\r\n    }\r\n  }, [isVisible]);\r\n\r\n  const articlesData = articles ? articles?.flat() : [];\r\n  return (\r\n    <NewsArticleListWrapper>\r\n      <span id=\"article_list\" className=\"anchor-offset-controller\" />\r\n      {articlesData?.map((v: IArticle, i: number) => {\r\n        return <NewsCard key={i} article={v} />;\r\n      })}\r\n      <div ref={ref} />\r\n    </NewsArticleListWrapper>\r\n  );\r\n};\r\n\r\nexport default NewsArticleList;\r\n"],"names":["NewsCard","useOnScreen","React","useEffect","useRef","useState","NewsArticleListWrapper","NewsArticleList","articles","setSize","isReachingEnd","setIsReachingEnd","ref","isVisible","isEmpty","length","prev","then","articlesData","flat","map","v","i"],"sourceRoot":""}