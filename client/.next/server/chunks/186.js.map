{"version":3,"file":"186.js","mappings":"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","sources":["webpack://fall-in-asia-clinet/./components/Maps/CountryMap.tsx","webpack://fall-in-asia-clinet/./components/Post/PostThubnail.tsx","webpack://fall-in-asia-clinet/./hooks/useOnScreen.ts","webpack://fall-in-asia-clinet/./components/Post/PostAsideNav/styles.tsx","webpack://fall-in-asia-clinet/./components/Post/PostAsideNav/index.tsx","webpack://fall-in-asia-clinet/./layout/PostLayout.tsx"],"sourcesContent":["import React, { FC, useCallback, useState } from \"react\";\r\nimport ReactMapGL, { Marker } from \"react-map-gl\";\r\nimport Pin from \"./Pin\";\r\n\r\ninterface IProps {\r\n  lat: number;\r\n  lng: number;\r\n}\r\n\r\nconst CountryMap: FC<IProps> = ({ lat, lng }) => {\r\n  const [marker, setMarker] = useState({\r\n    latitude: lat || 37.50529626491968,\r\n    longitude: lng || 126.98047832475031,\r\n  });\r\n  const [viewport, setViewport] = useState({\r\n    width: \"100%\",\r\n    height: 400,\r\n    latitude: lat || 37.50529626491968,\r\n    longitude: lng || 126.98047832475031,\r\n    zoom: 6,\r\n  });\r\n\r\n  const handleViewportChange = useCallback(\r\n    (newViewport) =>\r\n      setViewport((prev) => {\r\n        return { ...prev, zoom: newViewport.zoom };\r\n      }),\r\n    []\r\n  );\r\n  return (\r\n    <ReactMapGL\r\n      className=\"map-gl\"\r\n      style={{ marginBottom: \"4rem\" }}\r\n      {...viewport}\r\n      mapboxApiAccessToken={process.env.NEXT_PUBLIC_MAPBOX_API_KEY}\r\n      onViewportChange={handleViewportChange}\r\n      mapStyle=\"mapbox://sprites/mapbox/basic-v8\"\r\n    >\r\n      <Marker\r\n        longitude={marker.longitude}\r\n        latitude={marker.latitude}\r\n        offsetTop={-20}\r\n        offsetLeft={-10}\r\n      >\r\n        <Pin size={20} />\r\n      </Marker>\r\n    </ReactMapGL>\r\n  );\r\n};\r\n\r\nexport default CountryMap;\r\n","import NameSpace from \"@components/NameSpace\";\r\nimport { IArticle, IStory } from \"@typings/db\";\r\nimport { Divider } from \"antd\";\r\nimport React, { FC, memo } from \"react\";\r\nimport styled from \"@emotion/styled\";\r\nimport { FLEX_STYLE, SM_SIZE } from \"config\";\r\nimport tw from \"twin.macro\";\r\n\r\nexport const PostThubnailWrapper = styled.section`\r\n  ${FLEX_STYLE(\"center\", \"center\", \"column\")};\r\n  ${tw`mb-16`}\r\n  .thumbnail {\r\n    ${tw`mt-8 w-3/4`}\r\n  }\r\n  .story-title {\r\n    ${FLEX_STYLE(\"center\", \"center\", \"column\")};\r\n    ${tw`my-8`}\r\n    h1 {\r\n      ${tw`mb-8 font-bold leading-10 text-center`}\r\n    }\r\n  }\r\n  @media (max-width: ${SM_SIZE}) {\r\n    .story-title {\r\n      ${tw`my-4`}\r\n      h1 {\r\n        ${tw`text-xl mb-4`}\r\n      }\r\n    }\r\n    .thumbnail {\r\n      ${tw`w-full`}\r\n    }\r\n  }\r\n`;\r\ninterface IProps {\r\n  story?: IStory;\r\n  article?: IArticle;\r\n}\r\n\r\nconst PostThubnail: FC<IProps> = ({ story, article }) => {\r\n  return (\r\n    <PostThubnailWrapper>\r\n      <div className=\"story-title\">\r\n        <h1>{(story || article)?.title}</h1>\r\n        <NameSpace date={(story || article)?.createdAt!} user={(story || article)?.user!} />\r\n      </div>\r\n      <Divider />\r\n      <img\r\n        className=\"thumbnail\"\r\n        src={(story || article)?.thumbnail.replace(/\\/thumb\\//, \"/original/\")}\r\n      />\r\n    </PostThubnailWrapper>\r\n  );\r\n};\r\n\r\nexport default memo(PostThubnail);\r\n","import { useState, useEffect } from \"react\";\r\n\r\nconst useOnScreen = (ref: any) => {\r\n  const [isIntersecting, setIntersecting] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const observer = new IntersectionObserver(([entry]) => setIntersecting(entry.isIntersecting));\r\n\r\n    observer.observe(ref.current);\r\n    return () => {\r\n      observer.disconnect();\r\n    };\r\n  }, []);\r\n\r\n  return isIntersecting;\r\n};\r\n\r\nexport default useOnScreen;\r\n","import styled from \"@emotion/styled\";\r\nimport { BLUE_COLOR, GRAY_COLOR, LG_SIZE } from \"config\";\r\nimport tw from \"twin.macro\";\r\n\r\nexport const PostAsideNavWrapper = styled.aside`\r\n  ${tw`mt-4`}\r\n  .aside-story-title {\r\n    ${tw`mb-4 text-lg font-bold cursor-pointer`}\r\n  }\r\n  .aside-quick-viewer {\r\n    ${tw`p-2 rounded-xl  sticky top-20`}\r\n  }\r\n  .aside-header-list {\r\n    ${tw`block pb-4`}\r\n    h1,h2,h3 {\r\n      border-left: 2px solid ${GRAY_COLOR};\r\n    }\r\n    h1 {\r\n      ${tw`py-3 pl-4`}\r\n      font-size: 0.9rem;\r\n      font-weight: bold;\r\n    }\r\n    h2,\r\n    h3 {\r\n      ${tw`text-sm pb-2 pl-8`}\r\n    }\r\n  }\r\n  .is-current {\r\n    h1,\r\n    h2,\r\n    h3 {\r\n      border-left: 2px solid ${BLUE_COLOR};\r\n    }\r\n  }\r\n  @media (max-width: ${LG_SIZE}) {\r\n    ${tw`hidden`}\r\n  }\r\n`;\r\n","import React, { FC, memo, useState } from \"react\";\r\nimport { PostAsideNavWrapper } from \"./styles\";\r\nimport useSWR from \"swr\";\r\nimport fetcher from \"utils/fetcher\";\r\nimport router, { useRouter } from \"next/router\";\r\nimport { IArticle, IStory } from \"@typings/db\";\r\nimport { useEffect } from \"react\";\r\nimport Scrollspy from \"react-scrollspy\";\r\nimport ReactHtmlParser from \"react-html-parser\";\r\nimport { noRevalidate } from \"config\";\r\ninterface IProps {}\r\n\r\nconst PostAsideNav: FC<IProps> = () => {\r\n  const { query } = useRouter();\r\n  const [headers, setHeaders] = useState<string[]>([]);\r\n  const [hdClassList, setHdClassList] = useState<string[]>([]);\r\n  const { data: postData } = useSWR<IStory | IArticle>(\r\n    query?.storyId\r\n      ? `/story/${query?.code}/${query?.storyId}`\r\n      : query?.articleId\r\n      ? `/article/${query?.articleId}`\r\n      : null,\r\n    fetcher,\r\n    noRevalidate\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (postData) {\r\n      const headers =\r\n        postData?.content\r\n          ?.match(/<h1([^])*?.*?<\\/h1>|<h2([^])*?.*?<\\/h2>|<h3([^])*?.*?<\\/h3>/g)\r\n          ?.join(\",\")\r\n          .split(\",\") || [];\r\n      setHdClassList(Array.from({ length: headers.length }, (v, i) => \"header_\" + (i + 1)));\r\n      setHeaders(headers);\r\n    }\r\n  }, [postData]);\r\n\r\n  return (\r\n    <PostAsideNavWrapper>\r\n      <div className=\"aside-quick-viewer\">\r\n        <h3\r\n          onClick={() => {\r\n            scrollTo({ top: 0 });\r\n          }}\r\n          className=\"aside-story-title\"\r\n        >\r\n          {postData?.title}\r\n        </h3>\r\n        <Scrollspy\r\n          items={hdClassList?.concat([\"main_post\", \"user_info\", \"comment\", \"article_list\"])}\r\n          className=\"aside-header-list\"\r\n          currentClassName=\"is-current\"\r\n          offset={100}\r\n        >\r\n          <a href=\"#main_post\">\r\n            <h1>본문</h1>\r\n          </a>\r\n          {headers?.map((v, i) => {\r\n            return (\r\n              <a key={i} href={`#header_${i + 1}`}>\r\n                {ReactHtmlParser(v as string)}\r\n              </a>\r\n            );\r\n          })}\r\n\r\n          {query?.storyId && (\r\n            <a href=\"#user_info\">\r\n              <h1>연기대 정보</h1>\r\n            </a>\r\n          )}\r\n          {query?.storyId && (\r\n            <a href=\"#user_info\">\r\n              <h2>작성자 프로필</h2>\r\n            </a>\r\n          )}\r\n          {query?.storyId && (\r\n            <a href=\"#comment\">\r\n              <h2>댓글 보기</h2>\r\n            </a>\r\n          )}\r\n          <a href=\"#article_list\">{query?.storyId ? <h2>다른 연대기</h2> : <h1>다른 기사</h1>}</a>\r\n          <a onClick={() => router.back()}>\r\n            <h1>뒤로가기</h1>\r\n          </a>\r\n        </Scrollspy>\r\n      </div>\r\n    </PostAsideNavWrapper>\r\n  );\r\n};\r\n\r\nexport default memo(PostAsideNav);\r\n","import { FC, RefObject } from \"react\";\r\nimport styled from \"@emotion/styled/macro\";\r\nimport { GRID_STYLE, LG_SIZE, XLG_SIZE } from \"config\";\r\nimport tw from \"twin.macro\";\r\nimport PostAsideNav from \"@components/Post/PostAsideNav\";\r\nconst PostLayoutWrapper = styled.main`\r\n  width: ${XLG_SIZE};\r\n  ${tw`mx-auto p-8`};\r\n  ${GRID_STYLE(\"2rem\", \"4fr 1fr\")};\r\n  .layout {\r\n    .main-title {\r\n      ${tw`text-center mt-12 mb-6 text-lg font-bold`};\r\n      span {\r\n        ${tw`block text-sm mt-2`};\r\n      }\r\n    }\r\n    .main-title:first-of-type {\r\n      ${tw`mt-0 mb-6`}\r\n    }\r\n  }\r\n  @media (max-width: ${LG_SIZE}) {\r\n    ${tw`block w-full p-2`}\r\n  }\r\n`;\r\n\r\ninterface IProps {\r\n  postRef?: RefObject<HTMLDivElement> | null;\r\n}\r\n\r\nconst PostLayout: FC<IProps> = ({ postRef, children }) => {\r\n  return (\r\n    <PostLayoutWrapper>\r\n      <div ref={postRef} className=\"layout\">\r\n        {children}\r\n      </div>\r\n      <PostAsideNav />\r\n    </PostLayoutWrapper>\r\n  );\r\n};\r\n\r\nexport default PostLayout;\r\n"],"names":["React","useCallback","useState","ReactMapGL","Marker","Pin","CountryMap","lat","lng","marker","setMarker","latitude","longitude","viewport","setViewport","width","height","zoom","handleViewportChange","newViewport","prev","marginBottom","process","env","NEXT_PUBLIC_MAPBOX_API_KEY","NameSpace","Divider","memo","FLEX_STYLE","SM_SIZE","PostThubnailWrapper","PostThubnail","story","article","title","createdAt","user","thumbnail","replace","useEffect","useOnScreen","ref","isIntersecting","setIntersecting","observer","IntersectionObserver","entry","observe","current","disconnect","BLUE_COLOR","GRAY_COLOR","LG_SIZE","PostAsideNavWrapper","useSWR","fetcher","router","useRouter","Scrollspy","ReactHtmlParser","noRevalidate","PostAsideNav","query","headers","setHeaders","hdClassList","setHdClassList","data","postData","storyId","code","articleId","content","match","join","split","Array","from","length","v","i","scrollTo","top","concat","map","back","GRID_STYLE","XLG_SIZE","PostLayoutWrapper","PostLayout","postRef","children"],"sourceRoot":""}