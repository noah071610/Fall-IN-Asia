{"version":3,"file":"412.js","mappings":"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","sources":["webpack://fall-in-asia-clinet/./components/Cards/PosterCard.tsx","webpack://fall-in-asia-clinet/./components/SliderArrow.tsx","webpack://fall-in-asia-clinet/./hooks/useOnScreen.ts"],"sourcesContent":["import { css } from \"@emotion/react\";\r\nimport { SM_SIZE, WORLD_IMAGE } from \"config\";\r\nimport router from \"next/router\";\r\nimport React, { FC, useCallback } from \"react\";\r\nimport tw from \"twin.macro\";\r\n\r\nconst PosterCardWrapper = (isMain?: boolean) => css`\r\n  ${tw`w-full relative overflow-hidden cursor-pointer`}\r\n  ${isMain ? tw`rounded-2xl h-60` : tw`h-80`}\r\n  background-repeat: no-repeat;\r\n  background-position: center;\r\n  background-size: 100% 100%;\r\n  .poster-content {\r\n    ${tw`absolute z-10 bottom-6 left-8`}\r\n    h1 {\r\n      ${tw`text-white mb-4 text-5xl`}\r\n      font-family: 'Shadows Into Light', cursive;\r\n    }\r\n    p {\r\n      ${tw`text-white pr-16`}\r\n    }\r\n  }\r\n  .poster-overlay {\r\n    ${tw`w-full h-full absolute top-0 left-0`}\r\n    background: linear-gradient(0deg, rgba(0, 0, 0, 0.25) 32%, rgba(23, 21, 21, 0) 48%);\r\n  }\r\n  @media (max-width: ${SM_SIZE}) {\r\n    ${isMain ? tw`rounded-none h-48` : tw`h-48`}\r\n\r\n    .poster-content {\r\n      ${tw`bottom-8 left-4`}\r\n      h1 {\r\n        ${tw`text-2xl mb-2`}\r\n      }\r\n      p {\r\n        ${tw`text-xs`}\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\ninterface IProps {\r\n  isMain?: boolean;\r\n  image: string;\r\n  title: string;\r\n  desc: string;\r\n  link?: string;\r\n  path?: string;\r\n}\r\n\r\nconst PosterCard: FC<IProps> = ({ isMain, image, title, desc, link, path }) => {\r\n  const onClickPoster = useCallback(\r\n    (e) => {\r\n      e.stopPropagation();\r\n      if (path) {\r\n        router.push(path);\r\n        return;\r\n      }\r\n      if (link) {\r\n        window.open(link, \"_blank\");\r\n        return;\r\n      }\r\n    },\r\n    [path, link]\r\n  );\r\n\r\n  return (\r\n    <div\r\n      onClick={(e) => onClickPoster(e)}\r\n      css={PosterCardWrapper(isMain)}\r\n      style={{\r\n        backgroundImage: `url(${image || WORLD_IMAGE}\r\n      )`,\r\n      }}\r\n    >\r\n      <div className=\"poster-content\">\r\n        <h1>{title}</h1>\r\n        <p>{desc}</p>\r\n      </div>\r\n      <div className=\"poster-overlay\" />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PosterCard;\r\n","import styled from \"@emotion/styled\";\r\nimport { faArrowCircleLeft, faArrowCircleRight } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { BLUE_COLOR, SM_SIZE } from \"config\";\r\nimport tw from \"twin.macro\";\r\n\r\nconst SliderRightArrow = styled.a`\r\n  ${tw`block z-10 top-1/2 right-0 absolute text-4xl text-white p-4 opacity-50 `}\r\n  transform: translateY(-50%);\r\n  transition: 0.3s all;\r\n  &:hover {\r\n    ${tw`text-white opacity-100`}\r\n    transform: translate(10%, -50%);\r\n  }\r\n  @media (max-width: ${SM_SIZE}) {\r\n    ${tw`right-0 pr-0`}\r\n  }\r\n`;\r\n\r\nconst SliderLeftArrow = styled.a`\r\n  ${tw`block z-10 top-1/2 left-0 absolute text-4xl text-white p-4 opacity-50`}\r\n  transform: translateY(-50%);\r\n  transition: 0.3s all;\r\n  &:hover {\r\n    transform: translate(-10%, -50%);\r\n    ${tw`text-white opacity-100`}\r\n  }\r\n  @media (max-width: ${SM_SIZE}) {\r\n    ${tw`left-0 pl-0`}\r\n  }\r\n`;\r\n\r\nexport const NextArrow = (props: any) => {\r\n  const { onClick, slideCount, currentSlide } = props;\r\n  return (\r\n    <>\r\n      {slideCount - 1 !== currentSlide && (\r\n        <SliderRightArrow onClick={onClick}>\r\n          <FontAwesomeIcon icon={faArrowCircleRight} />\r\n        </SliderRightArrow>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport const PrevArrow = (props: any) => {\r\n  const { onClick, slideCount, currentSlide } = props;\r\n  return (\r\n    <>\r\n      {currentSlide !== 0 && (\r\n        <SliderLeftArrow onClick={onClick}>\r\n          <FontAwesomeIcon icon={faArrowCircleLeft} />\r\n        </SliderLeftArrow>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n","import { useState, useEffect } from \"react\";\r\n\r\nconst useOnScreen = (ref: any) => {\r\n  const [isIntersecting, setIntersecting] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const observer = new IntersectionObserver(([entry]) => setIntersecting(entry.isIntersecting));\r\n\r\n    observer.observe(ref.current);\r\n    return () => {\r\n      observer.disconnect();\r\n    };\r\n  }, []);\r\n\r\n  return isIntersecting;\r\n};\r\n\r\nexport default useOnScreen;\r\n"],"names":["css","SM_SIZE","WORLD_IMAGE","router","React","useCallback","PosterCardWrapper","isMain","PosterCard","image","title","desc","link","path","onClickPoster","e","stopPropagation","push","window","open","backgroundImage","faArrowCircleLeft","faArrowCircleRight","FontAwesomeIcon","SliderRightArrow","SliderLeftArrow","NextArrow","props","onClick","slideCount","currentSlide","PrevArrow","useState","useEffect","useOnScreen","ref","isIntersecting","setIntersecting","observer","IntersectionObserver","entry","observe","current","disconnect"],"sourceRoot":""}