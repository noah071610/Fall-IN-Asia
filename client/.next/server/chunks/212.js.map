{"version":3,"file":"212.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AAGA;AACA;AACA;AACA;;AAEA,MAAMO,eAAe,GAAG;AAAH;AAAA;AAAA;AAAA;AAAA,MAArB;;AAiCA,MAAMC,QAAoB,GAAG,CAAC;AAC5BC,EAAAA,KAD4B;AAE5BC,EAAAA,OAF4B;AAG5BC,EAAAA,eAH4B;AAI5BC,EAAAA,QAJ4B;AAK5BC,EAAAA;AAL4B,CAAD,KAMvB;AACJ,QAAMC,QAAQ,GAAGT,wDAAW,EAA5B;AACA,QAAMU,mBAAmB,GAAGb,kDAAW,CACrC,CAACc,CAAD,EAAIJ,QAAJ,KAAyB;AACvBI,IAAAA,CAAC,CAACC,eAAF;AACAb,IAAAA,mDAAA,CAAc,gBAAeQ,QAAS,EAAtC,EAAyCO,IAAzC,CAA8C,MAAM;AAClD,UAAIN,kBAAJ,EAAwB;AACtBA,QAAAA,kBAAkB;AACnB,OAFD,MAEO;AACLC,QAAAA,QAAQ,CAACR,yEAAiB,EAAlB,CAAR;AACD;AACF,KAND;AAOD,GAVoC,EAWrC,CAACM,QAAD,CAXqC,CAAvC;AAaA,SACE,iEAAC,eAAD;AAAiB,WAAO,EAAED,eAA1B;AAA2C,aAAS,EAAC,mBAArD;AAAA,eACE;AAAA,gBAAKF;AAAL,MADF,EAEE;AAAA,gBAAIT,0EAAkB,CAACU,OAAD;AAAtB,MAFF,EAGGE,QAAQ,IACP;AAAG,aAAO,EAAGI,CAAD,IAAOD,mBAAmB,CAACC,CAAD,EAAIJ,QAAJ,CAAtC;AAAA,gBACE,4DAAC,6DAAD;AADF,MAJJ;AAAA,IADF;AAWD,CAhCD;;AAkCA,iEAAeJ,QAAf;;;;;;;;;;;;;;;;;;;;;;;;AC5EA;AAEA;AACA;;AAGA,MAAMa,cAAc,GAAG;AAAH;AAAA;AAAA;AAAA;AAAA,MAApB;;AAQA,MAAMC,OAAmB,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AAC5C,QAAMT,QAAQ,GAAGT,wDAAW,EAA5B;AACA,QAAMmB,UAAU,GAAGtB,kDAAW,CAAC,MAAM;AACnCY,IAAAA,QAAQ,CAACM,iGAAA,EAAD,CAAR;AACD,GAF6B,EAE3B,EAF2B,CAA9B;AAGA,SACE,4DAAC,cAAD;AACE,aAAS,EAAEG,QAAQ,GAAG,gBAAH,GAAsB,EAD3C;AAEE,WAAO,EAAEC;AAFX,IADF;AAMD,CAXD;;AAaA,iEAAeF,OAAf;;;;;;;;;;;;AC3BA;AAEe,SAASK,QAAT,CAAqBC,YAArB,EAA2C;AACxD,QAAM;AAAA,OAACC,KAAD;AAAA,OAAQC;AAAR,MAAoBJ,+CAAQ,CAACE,YAAD,CAAlC;AACA,QAAMG,OAAO,GAAG7B,kDAAW,CAAEc,CAAD,IAA4C;AACtEc,IAAAA,QAAQ,CAAEd,CAAC,CAACgB,MAAH,CAAkBC,KAAnB,CAAR;AACD,GAF0B,EAExB,EAFwB,CAA3B;AAGA,SAAO,CAACJ,KAAD,EAAQE,OAAR,EAAiBD,QAAjB,CAAP;AACD;;;;;;;;;;ACRc,SAAS9B,kBAAT,CAA4BU,OAA5B,EAAsD;AACnE,SAAO,CAAAA,OAAO,SAAP,IAAAA,OAAO,WAAP,YAAAA,OAAO,CAAEwB,OAAT,CAAiB,eAAjB,EAAkC,EAAlC,EAAsCC,UAAtC,CAAiD,gBAAjD,EAAmE,EAAnE,MAA0E,EAAjF;AACD","sources":["webpack://fall-in-asia-clinet/./components/Cards/ListCard.tsx","webpack://fall-in-asia-clinet/./components/Modals/Overlay.tsx","webpack://fall-in-asia-clinet/./hooks/useInput.ts","webpack://fall-in-asia-clinet/./utils/html2textConverter.ts"],"sourcesContent":["import html2textConverter from \"utils/html2textConverter\";\r\nimport React, { FC, ReactNode, useCallback, useState } from \"react\";\r\nimport styled from \"@emotion/styled\";\r\nimport tw from \"twin.macro\";\r\nimport { DeleteOutlined } from \"@ant-design/icons\";\r\nimport axios from \"axios\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { getUserInfoAction } from \"actions/user\";\r\n\r\nconst ListCardWrapper = styled.li`\r\n  ${tw`relative w-full p-4 cursor-pointer mb-2 shadow-md`}\r\n  transition:0.3s all;\r\n  &:hover {\r\n    ${tw`shadow-lg`}\r\n    .anticon {\r\n      display: block;\r\n    }\r\n  }\r\n  .anticon {\r\n    display: none;\r\n    ${tw`absolute right-4 text-gray-300`}\r\n    top:50%;\r\n    transform: translateY(-50%);\r\n    &:hover {\r\n      ${tw`text-gray-500`}\r\n    }\r\n  }\r\n  h4 {\r\n    ${tw`mb-1 text-xs`}\r\n  }\r\n  p {\r\n    ${tw`font-bold text-xs leading-6 pr-6`}\r\n  }\r\n`;\r\ninterface IProps {\r\n  title: string;\r\n  content: string;\r\n  onClickListCard: () => void;\r\n  noticeId?: number | null;\r\n  revalidateUserInfo?: () => void;\r\n}\r\n\r\nconst ListCard: FC<IProps> = ({\r\n  title,\r\n  content,\r\n  onClickListCard,\r\n  noticeId,\r\n  revalidateUserInfo,\r\n}) => {\r\n  const dispatch = useDispatch();\r\n  const onClickDeleteNotice = useCallback(\r\n    (e, noticeId: number) => {\r\n      e.stopPropagation();\r\n      axios.delete(`/user/notice/${noticeId}`).then(() => {\r\n        if (revalidateUserInfo) {\r\n          revalidateUserInfo();\r\n        } else {\r\n          dispatch(getUserInfoAction());\r\n        }\r\n      });\r\n    },\r\n    [noticeId]\r\n  );\r\n  return (\r\n    <ListCardWrapper onClick={onClickListCard} className=\"list-card-wrapper\">\r\n      <h4>{title}</h4>\r\n      <p>{html2textConverter(content)}</p>\r\n      {noticeId && (\r\n        <a onClick={(e) => onClickDeleteNotice(e, noticeId)}>\r\n          <DeleteOutlined />\r\n        </a>\r\n      )}\r\n    </ListCardWrapper>\r\n  );\r\n};\r\n\r\nexport default ListCard;\r\n","import React, { FC, useCallback } from \"react\";\r\nimport styled from \"@emotion/styled\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { mainSlice } from \"slices/main\";\r\nimport tw from \"twin.macro\";\r\n\r\nconst OverlayWrapper = styled.div`\r\n  ${tw`fixed top-0 left-0 w-screen h-screen bg-black opacity-40`}\r\n  z-index:80;\r\n`;\r\ninterface IProps {\r\n  isMobile?: boolean;\r\n}\r\n\r\nconst Overlay: FC<IProps> = ({ isMobile }) => {\r\n  const dispatch = useDispatch();\r\n  const closeModal = useCallback(() => {\r\n    dispatch(mainSlice.actions.closeModal());\r\n  }, []);\r\n  return (\r\n    <OverlayWrapper\r\n      className={isMobile ? \"mobile-overlay\" : \"\"}\r\n      onClick={closeModal}\r\n    ></OverlayWrapper>\r\n  );\r\n};\r\n\r\nexport default Overlay;\r\n","import { useState, useCallback } from \"react\";\r\n\r\nexport default function useInput<T>(initialValue: T): any {\r\n  const [Value, setValue] = useState(initialValue);\r\n  const handler = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\r\n    setValue((e.target as any).value);\r\n  }, []);\r\n  return [Value, handler, setValue];\r\n}\r\n","export default function html2textConverter(content?: string): string {\r\n  return content?.replace(/(<([^>]+)>)/gi, \"\").replaceAll(/&nbsp;|&amp;/gi, \"\") || \"\";\r\n}\r\n"],"names":["html2textConverter","React","useCallback","DeleteOutlined","axios","useDispatch","getUserInfoAction","ListCardWrapper","ListCard","title","content","onClickListCard","noticeId","revalidateUserInfo","dispatch","onClickDeleteNotice","e","stopPropagation","delete","then","mainSlice","OverlayWrapper","Overlay","isMobile","closeModal","actions","useState","useInput","initialValue","Value","setValue","handler","target","value","replace","replaceAll"],"sourceRoot":""}