{"version":3,"file":"322.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACA;AACA;AAEA;;AAGA,MAAMK,uBAAuB,GAAG;AAAH;AAAA,2KAKzBF,6BAAU,CAAC,QAAD,EAAW,QAAX,CALe,sOAkBNC,sBAlBM,iIAA7B;;AAkCA,MAAME,gBAA4B,GAAG,CAAC;AAAEC,EAAAA,OAAF;AAAWC,EAAAA;AAAX,CAAD,KAAyB;AAC5D,QAAMC,8BAA8B,GAAGP,+BAAW,CAAC,MAAM;AACvD,QAAIM,MAAJ,EAAY;AACVR,MAAAA,qBAAA,CAAa,YAAWO,OAAZ,aAAYA,OAAZ,uBAAYA,OAAO,CAAEI,IAAK,EAAtC;AACD,KAFD,MAEO;AACLX,MAAAA,qBAAA,CAAa,kBAAiBO,OAAlB,aAAkBA,OAAlB,uBAAkBA,OAAO,CAAEI,IAAK,EAA5C;AACD;AACF,GANiD,EAM/C,CAACH,MAAD,CAN+C,CAAlD;AAOA,SACE,sBAAC,uBAAD;AACE,WAAO,EAAEC,8BADX;AAEE,SAAK,EAAE;AAAEG,MAAAA,eAAe,EAAG,OAAML,OAAO,CAACM,SAAU;AAA5C,KAFT;AAAA,eAIE;AAAA,gBAAKN,OAAO,CAACO;AAAb,MAJF,EAKE;AAAK,eAAS,EAAC;AAAf,MALF;AAAA,IADF;AASD,CAjBD;;AAmBA,6DAAeR,gBAAf;;;;;;;;;;;;;;;AC5DA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAGAgB,kBAAA,CAAe,CAACC,cAAD,CAAf;;AAEA,MAAME,0BAA0B,GAAIjB,MAAD,iBAAsBa,+BAAtB,YACvBb,MAAM,GAAG,OAAH,GAAa,OADI,0BAEZJ,sBAFY,wDAAnC;;AAYA,MAAMsB,mBAA+B,GAAG,CAAC;AAAEC,EAAAA,aAAF;AAAiBnB,EAAAA;AAAjB,CAAD,KAA+B;AACrE,QAAM;AAAEoB,IAAAA,IAAI,EAAEC;AAAR,MAAsBV,sBAAM,CAChCX,MAAM,GAAG,kBAAH,GAAwB,UADE,EAEhCY,sBAFgC,EAGhCF,2BAHgC,CAAlC;AAMA,QAAMY,WAAW,GAAG;AAClB,UAAM;AACJH,MAAAA;AADI,KADY;AAIlB,SAAK;AACHA,MAAAA,aAAa,EAAE;AADZ,KAJa;AAOlB,SAAK;AACHA,MAAAA,aAAa,EAAE,GADZ;AAEHI,MAAAA,YAAY,EAAE;AAFX,KAPa;AAWlB,OAAG;AACDJ,MAAAA,aAAa,EAAE,GADd;AAEDI,MAAAA,YAAY,EAAE;AAFb;AAXe,GAApB;AAiBA,SACE,iBAAC,aAAD;AACE,YAAQ,EACNvB,MAAM,GACF;AAAEwB,MAAAA,KAAK,EAAE;AAAT,KADE,GAEF;AACEC,MAAAA,iBAAiB,EAAE,IADrB;AAEEC,MAAAA,eAAe,EAAE,KAFnB;AAGEC,MAAAA,oBAAoB,EAAE,KAHxB;AAIEH,MAAAA,KAAK,EAAE;AAJT,KAJR;AAWE,eAAW,EAAEF,WAXf;AAYE,iBAAa,EAAEH,aAZjB;AAaE,YAAQ,EAAE,IAbZ;AAcE,gBAAY,EAAE,EAdhB;AAeE,OAAG,EAAEF,0BAA0B,CAACjB,MAAD,CAfjC;AAAA,cAiBGqB,SAjBH,aAiBGA,SAjBH,uBAiBGA,SAAS,CAAEO,GAAX,CAAe,CAACC,CAAD,EAAIC,CAAJ,KAAU;AACxB,aACE,iBAAC,kBAAD;AAAA,kBACE,iBAAC,sBAAD;AAAW,gBAAM,EAAE9B,MAAnB;AAA2B,iBAAO,EAAE6B;AAApC;AADF,SAAkBC,CAAlB,CADF;AAKD,KANA;AAjBH,IADF;AA2BD,CAnDD;;AAqDA,qEAAeZ,mBAAf","sources":["webpack://fall-in-asia-clinet/./components/Cards/CountryImageCard.tsx","webpack://fall-in-asia-clinet/./components/CountryPreviewSlide.tsx"],"sourcesContent":["import { ICountry } from \"@typings/db\";\r\nimport router from \"next/router\";\r\nimport React, { FC, useCallback } from \"react\";\r\nimport styled from \"@emotion/styled\";\r\nimport { FLEX_STYLE, SM_SIZE } from \"config\";\r\nimport tw from \"twin.macro\";\r\n\r\nconst CountryImageCardWrapper = styled.div`\r\n  ${tw`relative rounded-xl w-full h-full cursor-pointer`}\r\n  background-position: center;\r\n  background-repeat: no-repeat;\r\n  background-size: 100% 100%;\r\n  ${FLEX_STYLE(\"center\", \"center\")};\r\n  .overlay {\r\n    ${tw`rounded-2xl`}\r\n  }\r\n  h3 {\r\n    ${tw`z-10`}\r\n    ${tw`text-lg font-bold text-white`}\r\n  }\r\n  &:hover {\r\n    .overlay {\r\n      ${tw`opacity-30`}\r\n    }\r\n  }\r\n  @media (max-width: ${SM_SIZE}) {\r\n    ${tw`rounded-md`}\r\n    .overlay {\r\n      ${tw`rounded-md`}\r\n    }\r\n    h3 {\r\n      ${tw`text-sm`}\r\n    }\r\n  }\r\n`;\r\n\r\ninterface IProps {\r\n  country: ICountry;\r\n  isMain?: boolean;\r\n}\r\n\r\nconst CountryImageCard: FC<IProps> = ({ country, isMain }) => {\r\n  const onClickArticleCountryImageCard = useCallback(() => {\r\n    if (isMain) {\r\n      router.push(`/country/${country?.code}`);\r\n    } else {\r\n      router.push(`/story?country=${country?.code}`);\r\n    }\r\n  }, [isMain]);\r\n  return (\r\n    <CountryImageCardWrapper\r\n      onClick={onClickArticleCountryImageCard}\r\n      style={{ backgroundImage: `url(${country.image_src})` }}\r\n    >\r\n      <h3>{country.name}</h3>\r\n      <div className=\"overlay\" />\r\n    </CountryImageCardWrapper>\r\n  );\r\n};\r\n\r\nexport default CountryImageCard;\r\n","import ImageCard from \"@components/Cards/CountryImageCard\";\r\nimport { SwiperSlide, Swiper } from \"swiper/react\";\r\nimport { ICountry } from \"@typings/db\";\r\nimport { noRevalidate, SM_SIZE } from \"config\";\r\nimport React, { FC, useState } from \"react\";\r\nimport useSWR from \"swr\";\r\nimport fetcher from \"utils/fetcher\";\r\nimport { css } from \"@emotion/react\";\r\nimport SwiperCore, { Autoplay } from \"swiper/core\";\r\nimport tw from \"twin.macro\";\r\n\r\nSwiperCore.use([Autoplay]);\r\n\r\nconst CountryPreviewSlideWrapper = (isMain?: boolean) => css`\r\n  height: ${isMain ? \"100px\" : \"100px\"};\r\n  @media (max-width: ${SM_SIZE}) {\r\n    ${tw`h-16`}\r\n  }\r\n`;\r\n\r\ninterface IProps {\r\n  slidesPerView: number;\r\n  isMain?: boolean;\r\n}\r\n\r\nconst CountryPreviewSlide: FC<IProps> = ({ slidesPerView, isMain }) => {\r\n  const { data: countries } = useSWR<ICountry[]>(\r\n    isMain ? \"/country/popular\" : \"/country\",\r\n    fetcher,\r\n    noRevalidate\r\n  );\r\n\r\n  const breakPoints = {\r\n    1024: {\r\n      slidesPerView,\r\n    },\r\n    768: {\r\n      slidesPerView: 5.2,\r\n    },\r\n    480: {\r\n      slidesPerView: 4.2,\r\n      spaceBetween: 8,\r\n    },\r\n    0: {\r\n      slidesPerView: 3.6,\r\n      spaceBetween: 4,\r\n    },\r\n  };\r\n\r\n  return (\r\n    <Swiper\r\n      autoplay={\r\n        isMain\r\n          ? { delay: 1000000 }\r\n          : {\r\n              pauseOnMouseEnter: true,\r\n              stopOnLastSlide: false,\r\n              disableOnInteraction: false,\r\n              delay: 2000,\r\n            }\r\n      }\r\n      breakpoints={breakPoints}\r\n      slidesPerView={slidesPerView}\r\n      freeMode={true}\r\n      spaceBetween={16}\r\n      css={CountryPreviewSlideWrapper(isMain)}\r\n    >\r\n      {countries?.map((v, i) => {\r\n        return (\r\n          <SwiperSlide key={i}>\r\n            <ImageCard isMain={isMain} country={v} />\r\n          </SwiperSlide>\r\n        );\r\n      })}\r\n    </Swiper>\r\n  );\r\n};\r\n\r\nexport default CountryPreviewSlide;\r\n"],"names":["router","React","useCallback","FLEX_STYLE","SM_SIZE","CountryImageCardWrapper","CountryImageCard","country","isMain","onClickArticleCountryImageCard","push","code","backgroundImage","image_src","name","ImageCard","SwiperSlide","Swiper","noRevalidate","useSWR","fetcher","css","SwiperCore","Autoplay","use","CountryPreviewSlideWrapper","CountryPreviewSlide","slidesPerView","data","countries","breakPoints","spaceBetween","delay","pauseOnMouseEnter","stopOnLastSlide","disableOnInteraction","map","v","i"],"sourceRoot":""}